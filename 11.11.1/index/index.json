{"includedArchiveIdentifiers":["com.mapbox.MapboxMaps"],"interfaceLanguages":{"occ":[],"swift":[{"children":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/migrate-to-v11","title":"Migrate to v11 from v10","type":"article"},{"path":"\/documentation\/mapboxmaps\/swiftui-user-guide","title":"SwiftUI User Guide","type":"article"},{"path":"\/documentation\/mapboxmaps\/declarative-map-styling","title":"Declarative Map Styling","type":"article"},{"path":"\/documentation\/mapboxmaps\/map-content-gestures-user-guide","title":"Map Content Gestures User Guide","type":"article"},{"path":"\/documentation\/mapboxmaps\/work-with-visionos","title":"Work with visionOS","type":"article"},{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"MapView","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror\/message","title":"let message: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror\/missingimagedata","title":"static let missingImageData: MapView.SnapshotError","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror\/nometalview","title":"static let noMetalView: MapView.SnapshotError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapview\/snapshoterror","title":"MapView.SnapshotError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapview\/init(frame:mapinitoptions:)","title":"init(frame: CGRect, mapInitOptions: MapInitOptions)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapview\/init(frame:mapinitoptions:urlopener:)","title":"init(frame: CGRect, mapInitOptions: MapInitOptions, urlOpener: any AttributionURLOpener)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/anchor","title":"var anchor: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/annotations","title":"var annotations: AnnotationOrchestrator!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/camera","title":"var camera: CameraAnimationsManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/camerastate","title":"var cameraState: CameraState","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/debugoptions","title":"var debugOptions: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/gestures","title":"var gestures: GestureManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/isopaque","title":"var isOpaque: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/location","title":"var location: LocationManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/mapboxmap","title":"var mapboxMap: MapboxMap!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/ornaments","title":"var ornaments: OrnamentsManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/preferredframeraterange","title":"var preferredFrameRateRange: CAFrameRateRange","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/preferredframespersecond","title":"var preferredFramesPerSecond: Int","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/presentationtransactionmode","title":"var presentationTransactionMode: PresentationTransactionMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/presentswithtransaction","title":"var presentsWithTransaction: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/resizinganimation-swift.property","title":"var resizingAnimation: MapView.ResizingAnimation","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/viewannotations","title":"var viewAnnotations: ViewAnnotationManager!","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapview\/viewport","title":"var viewport: ViewportManager!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapview\/didmovetowindow()","title":"func didMoveToWindow()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapview\/snapshot(includeoverlays:)","title":"func snapshot(includeOverlays: Bool) throws -> UIImage","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/layerclass","title":"class var layerClass: AnyClass","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/resizinganimation-swift.enum\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapview\/resizinganimation-swift.enum\/none","title":"case none","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapview\/resizinganimation-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/mapview\/resizinganimation-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapview\/resizinganimation-swift.enum","title":"MapView.ResizingAnimation","type":"enum"}],"path":"\/documentation\/mapboxmaps\/mapview","title":"MapView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/init(mapoptions:cameraoptions:styleuri:stylejson:antialiasingsamplecount:)","title":"init(mapOptions: MapOptions, cameraOptions: CameraOptions?, styleURI: StyleURI?, styleJSON: String?, antialiasingSampleCount: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/antialiasingsamplecount","title":"let antialiasingSampleCount: Int","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/cameraoptions","title":"let cameraOptions: CameraOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/mapoptions","title":"let mapOptions: MapOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/stylejson","title":"let styleJSON: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/styleuri","title":"let styleURI: StyleURI?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptions\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapinitoptions","title":"MapInitOptions","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapinitoptionsprovider\/mapinitoptions()","title":"func mapInitOptions() -> MapInitOptions","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapinitoptionsprovider","title":"MapInitOptionsProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/glyphsrasterizationoptions","title":"var glyphsRasterizationOptions: GlyphsRasterizationOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapoptions\/pixelratio","title":"var pixelRatio: Float","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapoptions","title":"MapOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/init(rasterizationmode:fontfamily:)","title":"init(rasterizationMode: GlyphsRasterizationMode, fontFamily: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/fontfamily","title":"var fontFamily: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions\/rasterizationmode","title":"var rasterizationMode: GlyphsRasterizationMode","type":"property"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationoptions","title":"GlyphsRasterizationOptions","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionurlopener\/openattributionurl(_:)","title":"func openAttributionURL(URL)","type":"method"}],"path":"\/documentation\/mapboxmaps\/attributionurlopener","title":"AttributionURLOpener","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/heightonly","title":"case heightOnly","type":"case"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/widthandheight","title":"case widthAndHeight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/constrainmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/constrainmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/constrainmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/constrainmode","title":"ConstrainMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/allglyphsrasterizedlocally","title":"case allGlyphsRasterizedLocally","type":"case"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/ideographsrasterizedlocally","title":"case ideographsRasterizedLocally","type":"case"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/noglyphsrasterizedlocally","title":"case noGlyphsRasterizedLocally","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode","title":"GlyphsRasterizationMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/downwards","title":"case downwards","type":"case"},{"path":"\/documentation\/mapboxmaps\/northorientation\/leftwards","title":"case leftwards","type":"case"},{"path":"\/documentation\/mapboxmaps\/northorientation\/rightwards","title":"case rightwards","type":"case"},{"path":"\/documentation\/mapboxmaps\/northorientation\/upwards","title":"case upwards","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/northorientation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/northorientation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/northorientation\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/northorientation","title":"NorthOrientation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/flippedy","title":"case flippedY","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportmode","title":"ViewportMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/presentationtransactionmode\/async","title":"case async","type":"case"},{"path":"\/documentation\/mapboxmaps\/presentationtransactionmode\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/mapboxmaps\/presentationtransactionmode\/sync","title":"case sync","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/presentationtransactionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/presentationtransactionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/presentationtransactionmode","title":"PresentationTransactionMode","type":"enum"}],"path":"\/documentation\/mapboxmaps\/map-view","title":"MapView","type":"symbol"},{"children":[{"title":"Snapshotter","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/init(options:)","title":"convenience init(options: MapSnapshotOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/camerastate","title":"var cameraState: CameraState","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onmaploadingerror","title":"var onMapLoadingError: Signal<MapLoadingError>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onstyledataloaded","title":"var onStyleDataLoaded: Signal<StyleDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onstyleimagemissing","title":"var onStyleImageMissing: Signal<StyleImageMissing>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onstyleloaded","title":"var onStyleLoaded: Signal<StyleLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshotsize","title":"var snapshotSize: CGSize","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/style","title":"var style: StyleManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/camera(for:padding:bearing:pitch:)","title":"func camera(for: [CLLocationCoordinate2D], padding: UIEdgeInsets?, bearing: Double?, pitch: Double?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/cleardata(completion:)","title":"func clearData(completion: ((any Error)?) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/coordinatebounds(for:)","title":"func coordinateBounds(for: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onevery(event:handler:)","title":"func onEvery<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/onnext(event:handler:)","title":"func onNext<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/setcamera(to:)","title":"func setCamera(to: CameraOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/start(overlayhandler:completion:)","title":"func start(overlayHandler: SnapshotOverlayHandler?, completion: (Result<UIImage, Snapshotter.SnapshotError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/tilecover(for:)","title":"func tileCover(for: TileCoverOptions) -> [CanonicalTileID]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/snapshotfailed(reason:)","title":"case snapshotFailed(reason: String?)","type":"case"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/snapshotter\/snapshoterror","title":"Snapshotter.SnapshotError","type":"enum"}],"path":"\/documentation\/mapboxmaps\/snapshotter","title":"Snapshotter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions\/init(size:pixelratio:glyphsrasterizationoptions:showslogo:showsattribution:)","title":"init(size: CGSize, pixelRatio: CGFloat, glyphsRasterizationOptions: GlyphsRasterizationOptions, showsLogo: Bool, showsAttribution: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions\/glyphsrasterizationoptions","title":"var glyphsRasterizationOptions: GlyphsRasterizationOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions\/pixelratio","title":"var pixelRatio: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions\/showsattribution","title":"var showsAttribution: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions\/showslogo","title":"var showsLogo: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions\/size","title":"var size: CGSize","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapsnapshotoptions","title":"MapSnapshotOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/context","title":"var context: CGContext","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/coordinateforpoint","title":"var coordinateForPoint: ((CGPoint) -> CLLocationCoordinate2D)","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/pointforcoordinate","title":"var pointForCoordinate: ((CLLocationCoordinate2D) -> CGPoint)","type":"property"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlay\/scale","title":"var scale: CGFloat","type":"property"}],"path":"\/documentation\/mapboxmaps\/snapshotoverlay","title":"SnapshotOverlay","type":"struct"},{"path":"\/documentation\/mapboxmaps\/snapshotoverlayhandler","title":"SnapshotOverlayHandler","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/snapshotter-apis","title":"Snapshotter","type":"symbol"},{"children":[{"title":"SwiftUI","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/map\/init(initialviewport:)","title":"init(initialViewport: Viewport)","type":"init"},{"path":"\/documentation\/mapboxmaps\/map\/init(initialviewport:content:)","title":"init(initialViewport: Viewport, content: () -> some MapContent)","type":"init"},{"path":"\/documentation\/mapboxmaps\/map\/init(initialviewport:urlopener:content:)","title":"init(initialViewport: Viewport, urlOpener: MapURLOpener, content: () -> some MapContent)","type":"init"},{"path":"\/documentation\/mapboxmaps\/map\/init(viewport:)","title":"init(viewport: Binding<Viewport>)","type":"init"},{"path":"\/documentation\/mapboxmaps\/map\/init(viewport:content:)","title":"init(viewport: Binding<Viewport>, content: () -> some MapContent)","type":"init"},{"path":"\/documentation\/mapboxmaps\/map\/init(viewport:urlopener:content:)","title":"init(viewport: Binding<Viewport>, urlOpener: MapURLOpener, content: () -> some MapContent)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/map\/additionalsafeareainsets(_:)","title":"func additionalSafeAreaInsets(EdgeInsets) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/additionalsafeareainsets(_:_:)","title":"func additionalSafeAreaInsets(Edge.Set, CGFloat) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/camerabounds(_:)","title":"func cameraBounds(CameraBoundsOptions) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/collectperformancestatistics(_:callback:)","title":"func collectPerformanceStatistics(PerformanceStatisticsOptions?, callback: (PerformanceStatistics) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/constrainmode(_:)","title":"func constrainMode(ConstrainMode) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/debugoptions(_:)","title":"func debugOptions(MapViewDebugOptions) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/framerate(range:preferred:)","title":"func frameRate(range: ClosedRange<Float>?, preferred: Float?) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gesturehandlers(_:)","title":"func gestureHandlers(MapGestureHandlers) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gestureoptions(_:)","title":"func gestureOptions(GestureOptions) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/makecoordinator()","title":"func makeCoordinator() -> Map.Coordinator","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/makeuiviewcontroller(context:)","title":"func makeUIViewController(context: Map.Context) -> UIViewController","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/northorientation(_:)","title":"func northOrientation(NorthOrientation) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/oncamerachanged(action:)","title":"func onCameraChanged(action: (CameraChanged) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onlayerlongpressgesture(_:perform:)","title":"func onLayerLongPressGesture(String, perform: MapLayerGestureHandler) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onlayertapgesture(_:perform:)","title":"func onLayerTapGesture(String, perform: MapLayerGestureHandler) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onmapidle(action:)","title":"func onMapIdle(action: (MapIdle) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onmaploaded(action:)","title":"func onMapLoaded(action: (MapLoaded) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onmaploadingerror(action:)","title":"func onMapLoadingError(action: (MapLoadingError) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onmaplongpressgesture(perform:)","title":"func onMapLongPressGesture(perform: (InteractionContext) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onmaptapgesture(perform:)","title":"func onMapTapGesture(perform: (InteractionContext) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onrenderframefinished(action:)","title":"func onRenderFrameFinished(action: (RenderFrameFinished) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onrenderframestarted(action:)","title":"func onRenderFrameStarted(action: (RenderFrameStarted) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onresourcerequest(action:)","title":"func onResourceRequest(action: (ResourceRequest) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onsourceadded(action:)","title":"func onSourceAdded(action: (SourceAdded) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onsourcedataloaded(action:)","title":"func onSourceDataLoaded(action: (SourceDataLoaded) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onsourceremoved(action:)","title":"func onSourceRemoved(action: (SourceRemoved) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onstyledataloaded(action:)","title":"func onStyleDataLoaded(action: (StyleDataLoaded) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onstyleimagemissing(action:)","title":"func onStyleImageMissing(action: (StyleImageMissing) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onstyleimageremoveunused(action:)","title":"func onStyleImageRemoveUnused(action: (StyleImageRemoveUnused) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onstyleloaded(action:)","title":"func onStyleLoaded(action: (StyleLoaded) -> Void) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/opaque(_:)","title":"func opaque(Bool) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ornamentoptions(_:)","title":"func ornamentOptions(OrnamentOptions) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationtransactionmode(_:)","title":"func presentationTransactionMode(PresentationTransactionMode) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transitionstoidleuponuserinteraction(_:)","title":"func transitionsToIdleUponUserInteraction(Bool) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/updateuiviewcontroller(_:context:)","title":"func updateUIViewController(UIViewController, context: Map.Context)","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/usessafeareainsetsaspadding(_:)","title":"func usesSafeAreaInsetsAsPadding(Bool) -> Map","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/viewportmode(_:)","title":"func viewportMode(ViewportMode) -> Map","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/map\/coordinator","title":"Map.Coordinator","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/map\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/map\/sizethatfits(_:uiviewcontroller:context:)","title":"func sizeThatFits(ProposedViewSize, uiViewController: Self.UIViewControllerType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/map\/dismantleuiviewcontroller(_:coordinator:)","title":"static func dismantleUIViewController(Self.UIViewControllerType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/mapboxmaps\/map\/uiviewcontrollerrepresentable-implementations","title":"UIViewControllerRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(activationpoint:)-7lgjw","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(activationpoint:)-9dep7","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityaction(named:_:)-1ph5k","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityaction(named:_:)-55b3m","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityaction(named:_:)-x59z","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityactivationpoint(_:)-3cvxp","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityactivationpoint(_:)-l5g3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityactivationpoint(_:isenabled:)-1i2cz","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityactivationpoint(_:isenabled:)-5kfmg","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-4eska","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-5fopu","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-5ynrr","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-6074n","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-7r6e2","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-8tz8p","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-91mb","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitycustomcontent(_:_:importance:)-ozom","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydragpoint(_:description:)-38qa9","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydragpoint(_:description:)-72xvn","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydragpoint(_:description:)-78962","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydragpoint(_:description:isenabled:)-2awq4","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydragpoint(_:description:isenabled:)-4kma7","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydragpoint(_:description:isenabled:)-9twe6","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydroppoint(_:description:)-1gukt","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydroppoint(_:description:)-3apof","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydroppoint(_:description:)-5rsm6","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydroppoint(_:description:isenabled:)-11en6","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydroppoint(_:description:isenabled:)-1slq9","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitydroppoint(_:description:isenabled:)-64zip","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhint(_:)-4u7uw","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhint(_:)-70y92","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhint(_:)-8gamq","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhint(_:isenabled:)-1cq3x","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhint(_:isenabled:)-4vgr1","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityhint(_:isenabled:)-7ws23","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityinputlabels(_:)-19fci","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityinputlabels(_:)-2lwv3","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityinputlabels(_:)-wvg","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityinputlabels(_:isenabled:)-3aopw","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityinputlabels(_:isenabled:)-3odvd","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityinputlabels(_:isenabled:)-5lpcr","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabel(_:)-3evhy","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabel(_:)-57cc8","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabel(_:)-7e9vy","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabel(_:isenabled:)-6v59b","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabel(_:isenabled:)-8v7ij","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabel(_:isenabled:)-ra9","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:)-7gr3m","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:)-7uec","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:)-8nxdo","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:)-9dbk9","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-359yj","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-6xn90","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-85ej6","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-9pdo8","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entrylabel:)-1f4mq","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entrylabel:)-22as8","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entrylabel:)-6rs2b","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:entries:entrylabel:)-9eyx6","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:textranges:)-37630","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:textranges:)-3xu18","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:textranges:)-6138k","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotor(_:textranges:)-pdkd","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityvalue(_:)-13g0r","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityvalue(_:)-3vmxe","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityvalue(_:)-6l295","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityvalue(_:isenabled:)-15shq","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityvalue(_:isenabled:)-2p6py","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityvalue(_:isenabled:)-gab4","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:actions:)-5ylsz","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:actions:)-8q909","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:actions:)-8r2gf","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:actions:message:)-2h849","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:actions:message:)-95sz3","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:actions:message:)-e5qa","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:presenting:actions:)-493jp","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:presenting:actions:)-4k4kk","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:presenting:actions:)-4la8d","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:presenting:actions:message:)-2vp7t","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:presenting:actions:message:)-9fva9","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(_:ispresented:presenting:actions:message:)-9z7wu","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alignmentguide(_:computevalue:)-4kcrd","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alignmentguide(_:computevalue:)-5ciqj","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/aspectratio(_:contentmode:)-4h5e1","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/aspectratio(_:contentmode:)-73bu9","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/background(_:in:fillstyle:)-33q5z","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/background(_:in:fillstyle:)-3hjjt","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/background(in:fillstyle:)-4nwai","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/background(in:fillstyle:)-6s8wf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/badge(_:)-13azu","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/badge(_:)-209lv","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/badge(_:)-5igqj","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/badge(_:)-7o3z7","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/buttonstyle(_:)-2mdoy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/buttonstyle(_:)-7bkdl","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:)-54fck","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:)-81bz2","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8eudl","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3c39t","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8gmb7","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8iz66","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2yk8p","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5ilpw","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9v43i","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2chr0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-31ucm","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-67he8","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contentmargins(_:_:for:)-1cpaq","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contentmargins(_:_:for:)-45akf","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/dialogsuppressiontoggle(_:issuppressed:)-18ih0","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/dialogsuppressiontoggle(_:issuppressed:)-34d0s","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/dialogsuppressiontoggle(_:issuppressed:)-478n1","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogconfirmationlabel(_:)-2kd1g","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogconfirmationlabel(_:)-8avna","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogconfirmationlabel(_:)-9cwbs","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogmessage(_:)-5tjig","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogmessage(_:)-9oa9h","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogmessage(_:)-9t8aj","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3sg4d","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9vvj7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8hrwe","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9s96u","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2zdm6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8v58j","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1ca5h","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4ylth","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporterfilenamelabel(_:)-3qzj1","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporterfilenamelabel(_:)-7msak","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileexporterfilenamelabel(_:)-8ixny","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedobject(_:)-1vs5v","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedobject(_:)-48lzt","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedsceneobject(_:)-11hd2","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedsceneobject(_:)-4317p","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedscenevalue(_:_:)-2lba5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedscenevalue(_:_:)-9ewhu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedvalue(_:_:)-34lnv","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/focusedvalue(_:_:)-4ihca","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/help(_:)-3ih7j","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/help(_:)-5wshk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/help(_:)-7sfmu","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/keyboardshortcut(_:)-5qa34","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/keyboardshortcut(_:)-89exm","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/linelimit(_:)-1w02m","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/linelimit(_:)-1yicb","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/linelimit(_:)-2bbd1","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/linelimit(_:)-xqd1","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listitemtint(_:)-20181","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listitemtint(_:)-j0pe","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listsectionspacing(_:)-11yej","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/listsectionspacing(_:)-3k4bo","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbartitle(_:)-335ia","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbartitle(_:)-62kr1","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbartitle(_:)-7q183","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbartitle(_:displaymode:)-4j15f","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbartitle(_:displaymode:)-60xqq","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationbartitle(_:displaymode:)-cg09","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdocument(_:preview:)-2tzra","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdocument(_:preview:)-3a7ko","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdocument(_:preview:)-5362v","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationdocument(_:preview:)-80yfr","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationtitle(_:)-17tsn","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationtitle(_:)-50v7r","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationtitle(_:)-6z37h","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationtitle(_:)-7sf79","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationtitle(_:)-r4zt","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onchange(of:initial:_:)-3jc5l","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onchange(of:initial:_:)-97ocj","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ondrop(of:delegate:)-1rk5h","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/ondrop(of:delegate:)-4zydo","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ondrop(of:istargeted:perform:)-2ypq3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/ondrop(of:istargeted:perform:)-3vrd3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/ondrop(of:istargeted:perform:)-48x8e","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ondrop(of:istargeted:perform:)-78uv9","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ongeometrychange(for:of:action:)-62j2n","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ongeometrychange(for:of:action:)-8716q","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onscrollphasechange(_:)-29dtq","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onscrollphasechange(_:)-2bn5r","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/padding(_:)-1jy2f","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/padding(_:)-9seor","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/popover(ispresented:attachmentanchor:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/popover(item:attachmentanchor:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/renameaction(_:)-367z3","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/renameaction(_:)-6tq7d","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/safeareainset(edge:alignment:spacing:content:)-1trsp","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/safeareainset(edge:alignment:spacing:content:)-31v0u","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/safeareapadding(_:)-1aqs8","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/safeareapadding(_:)-72w1t","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scaleeffect(_:anchor:)-3xo7p","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scaleeffect(_:anchor:)-5509w","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1v1x5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5m5w2","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-pyqa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:editabletokens:placement:prompt:token:)-20tcj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:editabletokens:placement:prompt:token:)-2kitq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:editabletokens:placement:prompt:token:)-593z7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:ispresented:placement:prompt:)-3kr8w","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:ispresented:placement:prompt:)-72qv","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:ispresented:placement:prompt:)-7v4ak","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:placement:prompt:)-19xin","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:placement:prompt:)-3cked","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:placement:prompt:)-6mr9q","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/searchable(text:placement:prompt:suggestions:)-18bdp","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/searchable(text:placement:prompt:suggestions:)-3q29","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/searchable(text:placement:prompt:suggestions:)-ptak","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:ispresented:placement:prompt:token:)-4q7iu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:ispresented:placement:prompt:token:)-6rgkf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:ispresented:placement:prompt:token:)-7awhf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:placement:prompt:token:)-1yhm5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:placement:prompt:token:)-3p6zc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:placement:prompt:token:)-5elyn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-15nms","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-18xbs","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8l6d6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1lnvf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-74e02","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-96r6q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbar(content:)-4t3q4","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbar(content:)-z3ar","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/map\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/typeselectequivalent(_:)-4nhdi","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/typeselectequivalent(_:)-5ioh2","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/typeselectequivalent(_:)-75vgf","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/typesettinglanguage(_:isenabled:)-6bml5","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/typesettinglanguage(_:isenabled:)-6tvp0","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/map\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/mapboxmaps\/map\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/map","title":"Map","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcontent\/body-swift.associatedtype","title":"Body","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcontent\/body-swift.property","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapcontent","title":"MapContent","type":"protocol"},{"path":"\/documentation\/mapboxmaps\/conditionalmapcontent","title":"ConditionalMapContent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/emptymapcontent\/init()","title":"init()","type":"init"}],"path":"\/documentation\/mapboxmaps\/emptymapcontent","title":"EmptyMapContent","type":"struct"},{"path":"\/documentation\/mapboxmaps\/optionalmapcontent","title":"OptionalMapContent","type":"struct"},{"path":"\/documentation\/mapboxmaps\/tuplemapcontent","title":"TupleMapContent","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcontentbuilder\/buildblock()","title":"static func buildBlock() -> EmptyMapContent","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapcontentbuilder\/buildblock(_:)","title":"static func buildBlock<each Content>(repeat each Content) -> TupleMapContent<(repeat each Content)>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapcontentbuilder\/buildeither(first:)","title":"static func buildEither<First, Second>(first: First) -> ConditionalMapContent<First, Second>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapcontentbuilder\/buildeither(second:)","title":"static func buildEither<First, Second>(second: Second) -> ConditionalMapContent<First, Second>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapcontentbuilder\/buildexpression(_:)-1eu5p","title":"static func buildExpression<Content>(Content) -> Content","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapcontentbuilder\/buildexpression(_:)-5amex","title":"static func buildExpression<Content>(Content) -> some MapContent","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapcontentbuilder\/buildoptional(_:)","title":"static func buildOptional<T>(T?) -> OptionalMapContent<T>","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapcontentbuilder","title":"MapContentBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/init(json:configuration:)","title":"init(json: String, configuration: JSONObject?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/init(uri:configuration:)","title":"init(uri: StyleURI, configuration: JSONObject?)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/dark","title":"static var dark: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/empty","title":"static var empty: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/light","title":"static var light: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/outdoors","title":"static var outdoors: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/satellite","title":"static var satellite: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/satellitestreets","title":"static var satelliteStreets: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/standard","title":"static var standard: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/standardexperimental","title":"static var standardExperimental: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/standardsatellite","title":"static var standardSatellite: MapStyle","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/streets","title":"static var streets: MapStyle","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/standard(theme:lightpreset:font:showpointofinterestlabels:showtransitlabels:showplacelabels:showroadlabels:showpedestrianroads:show3dobjects:colormotorways:colorplacelabelhighlight:colorplacelabelselect:colorroads:colortrunks:themedata:)","title":"static func standard(theme: StandardTheme?, lightPreset: StandardLightPreset?, font: StandardFont?, showPointOfInterestLabels: Bool?, showTransitLabels: Bool?, showPlaceLabels: Bool?, showRoadLabels: Bool?, showPedestrianRoads: Bool?, show3dObjects: Bool?, colorMotorways: StyleColor?, colorPlaceLabelHighlight: StyleColor?, colorPlaceLabelSelect: StyleColor?, colorRoads: StyleColor?, colorTrunks: StyleColor?, themeData: String?) -> MapStyle","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/standardexperimental(theme:lightpreset:font:showpointofinterestlabels:showtransitlabels:showplacelabels:showroadlabels:show3dobjects:buildinghighlightcolor:buildingselectcolor:placelabelhighlightcolor:placelabelselectcolor:)","title":"static func standardExperimental(theme: StandardTheme?, lightPreset: StandardLightPreset?, font: StandardFont?, showPointOfInterestLabels: Bool?, showTransitLabels: Bool?, showPlaceLabels: Bool?, showRoadLabels: Bool?, show3dObjects: Bool?, buildingHighlightColor: StyleColor?, buildingSelectColor: StyleColor?, placeLabelHighlightColor: StyleColor?, placeLabelSelectColor: StyleColor?) -> MapStyle","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/standardsatellite(lightpreset:font:showpointofinterestlabels:showtransitlabels:showplacelabels:showroadlabels:showroadsandtransit:showpedestrianroads:colormotorways:colorplacelabelhighlight:colorplacelabelselect:colorroads:colortrunks:)","title":"static func standardSatellite(lightPreset: StandardLightPreset?, font: StandardFont?, showPointOfInterestLabels: Bool?, showTransitLabels: Bool?, showPlaceLabels: Bool?, showRoadLabels: Bool?, showRoadsAndTransit: Bool?, showPedestrianRoads: Bool?, colorMotorways: StyleColor?, colorPlaceLabelHighlight: StyleColor?, colorPlaceLabelSelect: StyleColor?, colorRoads: StyleColor?, colorTrunks: StyleColor?) -> MapStyle","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/mapstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapstyle","title":"MapStyle","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/camera","title":"var camera: CameraOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/followpuck","title":"var followPuck: Viewport.FollowPuckOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/isidle","title":"var isIdle: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/isstyledefault","title":"var isStyleDefault: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/overview","title":"var overview: Viewport.OverviewOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/padding","title":"var padding: EdgeInsets","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/inset(by:ignoringsafearea:)","title":"func inset(by: EdgeInsets, ignoringSafeArea: Edge.Set) -> Viewport","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewport\/padding(_:)","title":"func padding(EdgeInsets) -> Viewport","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewport\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat) -> Viewport","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/idle","title":"static var idle: Viewport","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/styledefault","title":"static var styleDefault: Viewport","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/camera(center:anchor:zoom:bearing:pitch:)","title":"static func camera(center: CLLocationCoordinate2D?, anchor: CGPoint?, zoom: CGFloat?, bearing: CLLocationDirection?, pitch: CGFloat?) -> Viewport","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewport\/followpuck(zoom:bearing:pitch:)","title":"static func followPuck(zoom: CGFloat, bearing: FollowPuckViewportStateBearing, pitch: CGFloat) -> Viewport","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewport\/overview(geometry:bearing:pitch:geometrypadding:maxzoom:offset:)","title":"static func overview(geometry: any GeometryConvertible, bearing: CGFloat, pitch: CGFloat, geometryPadding: EdgeInsets, maxZoom: Double?, offset: CGPoint?) -> Viewport","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewport","title":"Viewport","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/makeviewporttransition","title":"var makeViewportTransition: ViewportAnimation.ViewportTransitionFactory","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/viewporttransitionfactory","title":"ViewportAnimation.ViewportTransitionFactory","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/default","title":"static var `default`: ViewportAnimation","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/fly","title":"static var fly: ViewportAnimation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/default(maxduration:)","title":"static func `default`(maxDuration: TimeInterval) -> ViewportAnimation","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/easein(duration:)","title":"static func easeIn(duration: TimeInterval) -> ViewportAnimation","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/easeinout(duration:)","title":"static func easeInOut(duration: TimeInterval) -> ViewportAnimation","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/easeout(duration:)","title":"static func easeOut(duration: TimeInterval) -> ViewportAnimation","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/fly(duration:)","title":"static func fly(duration: TimeInterval) -> ViewportAnimation","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportanimation\/linear(duration:)","title":"static func linear(duration: TimeInterval) -> ViewportAnimation","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportanimation","title":"ViewportAnimation","type":"struct"},{"path":"\/documentation\/mapboxmaps\/withviewportanimation(_:body:completion:)","title":"func withViewportAnimation<Result>(ViewportAnimation, body: () throws -> Result, completion: ((Bool) -> Void)?) rethrows -> Result","type":"func"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/init(annotatedfeature:content:)","title":"init<Content>(annotatedFeature: AnnotatedFeature, content: () -> Content)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/init(coordinate:content:)","title":"init<Content>(coordinate: CLLocationCoordinate2D, content: () -> Content)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/init(layerid:featureid:content:)","title":"init<Content>(layerId: String, featureId: String?, content: () -> Content)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/allowhittesting(_:)","title":"func allowHitTesting(Bool) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/allowoverlap(_:)","title":"func allowOverlap(Bool) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/allowoverlapwithpuck(_:)","title":"func allowOverlapWithPuck(Bool) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/allowzelevate(_:)","title":"func allowZElevate(Bool?) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/ignorecamerapadding(_:)","title":"func ignoreCameraPadding(Bool) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/maxzoom(_:)","title":"func maxZoom(Double) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/minzoom(_:)","title":"func minZoom(Double) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/onanchorchanged(action:)","title":"func onAnchorChanged(action: (ViewAnnotationAnchorConfig) -> Void) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/onanchorcoordinatechanged(action:)","title":"func onAnchorCoordinateChanged(action: (CLLocationCoordinate2D) -> Void) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/onvisibilitychanged(action:)","title":"func onVisibilityChanged(action: (Bool) -> Void) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/priority(_:)","title":"func priority(Int) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/selected(_:)","title":"func selected(Bool) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/variableanchors(_:)","title":"func variableAnchors([ViewAnnotationAnchorConfig]) -> MapViewAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewannotation\/visible(_:)","title":"func visible(Bool) -> MapViewAnnotation","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapviewannotation","title":"MapViewAnnotation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/init(_:content:)","title":"init(Data, content: (Data.Element) -> PointAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/init(_:id:content:)","title":"init(Data, id: KeyPath<Data.Element, ID>, content: (Data.Element) -> PointAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/init(content:)","title":"init(content: () -> [PointAnnotation?])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/clusteroptions(_:)","title":"func clusterOptions(ClusterOptions) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconallowoverlap(_:)","title":"func iconAllowOverlap(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconanchor(_:)","title":"func iconAnchor(IconAnchor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconcolor(_:)-12os1","title":"func iconColor(StyleColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconcolor(_:)-1ji5l","title":"func iconColor(UIColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconcolorsaturation(_:)","title":"func iconColorSaturation(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconcolorsaturationtransition(_:)","title":"func iconColorSaturationTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconcolortransition(_:)","title":"func iconColorTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconcolorusetheme(_:)","title":"func iconColorUseTheme(ColorUseTheme) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconemissivestrength(_:)","title":"func iconEmissiveStrength(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconemissivestrengthtransition(_:)","title":"func iconEmissiveStrengthTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhaloblur(_:)","title":"func iconHaloBlur(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhaloblurtransition(_:)","title":"func iconHaloBlurTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhalocolor(_:)-85nva","title":"func iconHaloColor(UIColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhalocolor(_:)-9rnwg","title":"func iconHaloColor(StyleColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhalocolortransition(_:)","title":"func iconHaloColorTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhalocolorusetheme(_:)","title":"func iconHaloColorUseTheme(ColorUseTheme) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhalowidth(_:)","title":"func iconHaloWidth(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconhalowidthtransition(_:)","title":"func iconHaloWidthTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconignoreplacement(_:)","title":"func iconIgnorePlacement(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconimage(_:)","title":"func iconImage(String) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconimagecrossfade(_:)","title":"func iconImageCrossFade(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconimagecrossfadetransition(_:)","title":"func iconImageCrossFadeTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconkeepupright(_:)","title":"func iconKeepUpright(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconocclusionopacity(_:)","title":"func iconOcclusionOpacity(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconocclusionopacitytransition(_:)","title":"func iconOcclusionOpacityTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconoffset(_:)","title":"func iconOffset([Double]) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconoffset(x:y:)","title":"func iconOffset(x: Double, y: Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconopacity(_:)","title":"func iconOpacity(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconopacitytransition(_:)","title":"func iconOpacityTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconoptional(_:)","title":"func iconOptional(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconpadding(_:)","title":"func iconPadding(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconpitchalignment(_:)","title":"func iconPitchAlignment(IconPitchAlignment) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconrotate(_:)","title":"func iconRotate(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconrotationalignment(_:)","title":"func iconRotationAlignment(IconRotationAlignment) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconsize(_:)","title":"func iconSize(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/iconsizescalerange(min:max:)","title":"func iconSizeScaleRange(min: Double, max: Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/icontextfit(_:)","title":"func iconTextFit(IconTextFit) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/icontextfitpadding(_:)-3ez8q","title":"func iconTextFitPadding([Double]) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/icontextfitpadding(_:)-9cm8l","title":"func iconTextFitPadding(UIEdgeInsets) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/icontranslate(_:)","title":"func iconTranslate([Double]) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/icontranslate(x:y:)","title":"func iconTranslate(x: Double, y: Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/icontranslateanchor(_:)","title":"func iconTranslateAnchor(IconTranslateAnchor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/icontranslatetransition(_:)","title":"func iconTranslateTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/layerid(_:)","title":"func layerId(String) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/longpressradius(_:)","title":"func longPressRadius(CGFloat?) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/onclusterlongpressgesture(perform:)","title":"func onClusterLongPressGesture(perform: (AnnotationClusterGestureContext) -> Void) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/onclustertapgesture(perform:)","title":"func onClusterTapGesture(perform: (AnnotationClusterGestureContext) -> Void) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/slot(_:)-27xnn","title":"func slot(Slot?) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/slot(_:)-4iygm","title":"func slot(String) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolavoidedges(_:)","title":"func symbolAvoidEdges(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolelevationreference(_:)","title":"func symbolElevationReference(SymbolElevationReference) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolplacement(_:)","title":"func symbolPlacement(SymbolPlacement) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolsortkey(_:)","title":"func symbolSortKey(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolspacing(_:)","title":"func symbolSpacing(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolzelevate(_:)","title":"func symbolZElevate(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolzoffset(_:)","title":"func symbolZOffset(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolzoffsettransition(_:)","title":"func symbolZOffsetTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/symbolzorder(_:)","title":"func symbolZOrder(SymbolZOrder) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/tapradius(_:)","title":"func tapRadius(CGFloat?) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textallowoverlap(_:)","title":"func textAllowOverlap(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textanchor(_:)","title":"func textAnchor(TextAnchor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textcolor(_:)-5fca1","title":"func textColor(StyleColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textcolor(_:)-95u1v","title":"func textColor(UIColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textcolortransition(_:)","title":"func textColorTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textcolorusetheme(_:)","title":"func textColorUseTheme(ColorUseTheme) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textemissivestrength(_:)","title":"func textEmissiveStrength(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textemissivestrengthtransition(_:)","title":"func textEmissiveStrengthTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textfield(_:)","title":"func textField(String) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textfont(_:)","title":"func textFont([String]) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthaloblur(_:)","title":"func textHaloBlur(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthaloblurtransition(_:)","title":"func textHaloBlurTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthalocolor(_:)-406s","title":"func textHaloColor(StyleColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthalocolor(_:)-70gn4","title":"func textHaloColor(UIColor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthalocolortransition(_:)","title":"func textHaloColorTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthalocolorusetheme(_:)","title":"func textHaloColorUseTheme(ColorUseTheme) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthalowidth(_:)","title":"func textHaloWidth(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texthalowidthtransition(_:)","title":"func textHaloWidthTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textignoreplacement(_:)","title":"func textIgnorePlacement(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textjustify(_:)","title":"func textJustify(TextJustify) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textkeepupright(_:)","title":"func textKeepUpright(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textletterspacing(_:)","title":"func textLetterSpacing(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textlineheight(_:)","title":"func textLineHeight(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textmaxangle(_:)","title":"func textMaxAngle(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textmaxwidth(_:)","title":"func textMaxWidth(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textocclusionopacity(_:)","title":"func textOcclusionOpacity(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textocclusionopacitytransition(_:)","title":"func textOcclusionOpacityTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textoffset(_:)","title":"func textOffset([Double]) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textoffset(x:y:)","title":"func textOffset(x: Double, y: Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textopacity(_:)","title":"func textOpacity(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textopacitytransition(_:)","title":"func textOpacityTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textoptional(_:)","title":"func textOptional(Bool) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textpadding(_:)","title":"func textPadding(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textpitchalignment(_:)","title":"func textPitchAlignment(TextPitchAlignment) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textradialoffset(_:)","title":"func textRadialOffset(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textrotate(_:)","title":"func textRotate(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textrotationalignment(_:)","title":"func textRotationAlignment(TextRotationAlignment) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textsize(_:)","title":"func textSize(Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textsizescalerange(min:max:)","title":"func textSizeScaleRange(min: Double, max: Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texttransform(_:)","title":"func textTransform(TextTransform) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texttranslate(_:)","title":"func textTranslate([Double]) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texttranslate(x:y:)","title":"func textTranslate(x: Double, y: Double) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texttranslateanchor(_:)","title":"func textTranslateAnchor(TextTranslateAnchor) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/texttranslatetransition(_:)","title":"func textTranslateTransition(StyleTransition) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textvariableanchor(_:)","title":"func textVariableAnchor([TextAnchor]) -> PointAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotationgroup\/textwritingmode(_:)","title":"func textWritingMode([TextWritingMode]) -> PointAnnotationGroup<Data, ID>","type":"method"}],"path":"\/documentation\/mapboxmaps\/pointannotationgroup","title":"PointAnnotationGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/init(_:content:)","title":"init(Data, content: (Data.Element) -> CircleAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/init(_:id:content:)","title":"init(Data, id: KeyPath<Data.Element, ID>, content: (Data.Element) -> CircleAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/init(content:)","title":"init(content: () -> [CircleAnnotation?])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleblur(_:)","title":"func circleBlur(Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleblurtransition(_:)","title":"func circleBlurTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlecolor(_:)-1godn","title":"func circleColor(UIColor) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlecolor(_:)-76f0h","title":"func circleColor(StyleColor) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlecolortransition(_:)","title":"func circleColorTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlecolorusetheme(_:)","title":"func circleColorUseTheme(ColorUseTheme) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleemissivestrength(_:)","title":"func circleEmissiveStrength(Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleemissivestrengthtransition(_:)","title":"func circleEmissiveStrengthTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleopacity(_:)","title":"func circleOpacity(Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleopacitytransition(_:)","title":"func circleOpacityTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlepitchalignment(_:)","title":"func circlePitchAlignment(CirclePitchAlignment) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlepitchscale(_:)","title":"func circlePitchScale(CirclePitchScale) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleradius(_:)","title":"func circleRadius(Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circleradiustransition(_:)","title":"func circleRadiusTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlesortkey(_:)","title":"func circleSortKey(Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokecolor(_:)-1u5c5","title":"func circleStrokeColor(StyleColor) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokecolor(_:)-899r8","title":"func circleStrokeColor(UIColor) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokecolortransition(_:)","title":"func circleStrokeColorTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokecolorusetheme(_:)","title":"func circleStrokeColorUseTheme(ColorUseTheme) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokeopacity(_:)","title":"func circleStrokeOpacity(Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokeopacitytransition(_:)","title":"func circleStrokeOpacityTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokewidth(_:)","title":"func circleStrokeWidth(Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circlestrokewidthtransition(_:)","title":"func circleStrokeWidthTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circletranslate(_:)","title":"func circleTranslate([Double]) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circletranslate(x:y:)","title":"func circleTranslate(x: Double, y: Double) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circletranslateanchor(_:)","title":"func circleTranslateAnchor(CircleTranslateAnchor) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/circletranslatetransition(_:)","title":"func circleTranslateTransition(StyleTransition) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/layerid(_:)","title":"func layerId(String) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/longpressradius(_:)","title":"func longPressRadius(CGFloat?) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/slot(_:)-6bsti","title":"func slot(String) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/slot(_:)-9u2qv","title":"func slot(Slot?) -> CircleAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotationgroup\/tapradius(_:)","title":"func tapRadius(CGFloat?) -> CircleAnnotationGroup<Data, ID>","type":"method"}],"path":"\/documentation\/mapboxmaps\/circleannotationgroup","title":"CircleAnnotationGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/init(_:content:)","title":"init(Data, content: (Data.Element) -> PolygonAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/init(_:id:content:)","title":"init(Data, id: KeyPath<Data.Element, ID>, content: (Data.Element) -> PolygonAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/init(content:)","title":"init(content: () -> [PolygonAnnotation?])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillantialias(_:)","title":"func fillAntialias(Bool) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillcolor(_:)-3y1fs","title":"func fillColor(UIColor) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillcolor(_:)-rvzm","title":"func fillColor(StyleColor) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillcolortransition(_:)","title":"func fillColorTransition(StyleTransition) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillcolorusetheme(_:)","title":"func fillColorUseTheme(ColorUseTheme) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillelevationreference(_:)","title":"func fillElevationReference(FillElevationReference) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillemissivestrength(_:)","title":"func fillEmissiveStrength(Double) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillemissivestrengthtransition(_:)","title":"func fillEmissiveStrengthTransition(StyleTransition) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillopacity(_:)","title":"func fillOpacity(Double) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillopacitytransition(_:)","title":"func fillOpacityTransition(StyleTransition) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filloutlinecolor(_:)-3q8p","title":"func fillOutlineColor(UIColor) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filloutlinecolor(_:)-4uzfm","title":"func fillOutlineColor(StyleColor) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filloutlinecolortransition(_:)","title":"func fillOutlineColorTransition(StyleTransition) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filloutlinecolorusetheme(_:)","title":"func fillOutlineColorUseTheme(ColorUseTheme) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillpattern(_:)","title":"func fillPattern(String) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillsortkey(_:)","title":"func fillSortKey(Double) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filltranslate(_:)","title":"func fillTranslate([Double]) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filltranslate(x:y:)","title":"func fillTranslate(x: Double, y: Double) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filltranslateanchor(_:)","title":"func fillTranslateAnchor(FillTranslateAnchor) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/filltranslatetransition(_:)","title":"func fillTranslateTransition(StyleTransition) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillzoffset(_:)","title":"func fillZOffset(Double) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/fillzoffsettransition(_:)","title":"func fillZOffsetTransition(StyleTransition) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/layerid(_:)","title":"func layerId(String) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/longpressradius(_:)","title":"func longPressRadius(CGFloat?) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/slot(_:)-3hhg3","title":"func slot(Slot?) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/slot(_:)-7akfr","title":"func slot(String) -> PolygonAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotationgroup\/tapradius(_:)","title":"func tapRadius(CGFloat?) -> PolygonAnnotationGroup<Data, ID>","type":"method"}],"path":"\/documentation\/mapboxmaps\/polygonannotationgroup","title":"PolygonAnnotationGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/init(_:content:)","title":"init(Data, content: (Data.Element) -> PolylineAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/init(_:id:content:)","title":"init(Data, id: KeyPath<Data.Element, ID>, content: (Data.Element) -> PolylineAnnotation)","type":"init"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/init(content:)","title":"init(content: () -> [PolylineAnnotation?])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/layerid(_:)","title":"func layerId(String) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineblur(_:)","title":"func lineBlur(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineblurtransition(_:)","title":"func lineBlurTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linebordercolor(_:)-5983v","title":"func lineBorderColor(UIColor) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linebordercolor(_:)-i1n4","title":"func lineBorderColor(StyleColor) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linebordercolortransition(_:)","title":"func lineBorderColorTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linebordercolorusetheme(_:)","title":"func lineBorderColorUseTheme(ColorUseTheme) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineborderwidth(_:)","title":"func lineBorderWidth(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineborderwidthtransition(_:)","title":"func lineBorderWidthTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linecap(_:)","title":"func lineCap(LineCap) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linecolor(_:)-6ynw0","title":"func lineColor(StyleColor) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linecolor(_:)-92xs5","title":"func lineColor(UIColor) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linecolortransition(_:)","title":"func lineColorTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linecolorusetheme(_:)","title":"func lineColorUseTheme(ColorUseTheme) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linecrossslope(_:)","title":"func lineCrossSlope(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linedasharray(_:)-51198","title":"func lineDashArray([Double]) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linedasharray(_:)-6w8f9","title":"func lineDasharray([Double]) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linedepthocclusionfactor(_:)","title":"func lineDepthOcclusionFactor(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linedepthocclusionfactortransition(_:)","title":"func lineDepthOcclusionFactorTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineelevationreference(_:)","title":"func lineElevationReference(LineElevationReference) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineemissivestrength(_:)","title":"func lineEmissiveStrength(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineemissivestrengthtransition(_:)","title":"func lineEmissiveStrengthTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linegapwidth(_:)","title":"func lineGapWidth(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linegapwidthtransition(_:)","title":"func lineGapWidthTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linejoin(_:)","title":"func lineJoin(LineJoin) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linemiterlimit(_:)","title":"func lineMiterLimit(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineocclusionopacity(_:)","title":"func lineOcclusionOpacity(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineocclusionopacitytransition(_:)","title":"func lineOcclusionOpacityTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineoffset(_:)","title":"func lineOffset(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineoffsettransition(_:)","title":"func lineOffsetTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineopacity(_:)","title":"func lineOpacity(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineopacitytransition(_:)","title":"func lineOpacityTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linepattern(_:)","title":"func linePattern(String) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/lineroundlimit(_:)","title":"func lineRoundLimit(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linesortkey(_:)","title":"func lineSortKey(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetranslate(_:)","title":"func lineTranslate([Double]) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetranslate(x:y:)","title":"func lineTranslate(x: Double, y: Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetranslateanchor(_:)","title":"func lineTranslateAnchor(LineTranslateAnchor) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetranslatetransition(_:)","title":"func lineTranslateTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimcolor(_:)-1durm","title":"func lineTrimColor(UIColor) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimcolor(_:)-42vsy","title":"func lineTrimColor(StyleColor) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimcolortransition(_:)","title":"func lineTrimColorTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimcolorusetheme(_:)","title":"func lineTrimColorUseTheme(ColorUseTheme) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimfaderange(_:)","title":"func lineTrimFadeRange([Double]) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimfaderange(start:end:)","title":"func lineTrimFadeRange(start: Double, end: Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimoffset(_:)","title":"func lineTrimOffset([Double]) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linetrimoffset(start:end:)","title":"func lineTrimOffset(start: Double, end: Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linewidth(_:)","title":"func lineWidth(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linewidthtransition(_:)","title":"func lineWidthTransition(StyleTransition) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linewidthunit(_:)","title":"func lineWidthUnit(LineWidthUnit) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/linezoffset(_:)","title":"func lineZOffset(Double) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/longpressradius(_:)","title":"func longPressRadius(CGFloat?) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/slot(_:)-12gdw","title":"func slot(String) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/slot(_:)-1zkes","title":"func slot(Slot?) -> PolylineAnnotationGroup<Data, ID>","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotationgroup\/tapradius(_:)","title":"func tapRadius(CGFloat?) -> PolylineAnnotationGroup<Data, ID>","type":"method"}],"path":"\/documentation\/mapboxmaps\/polylineannotationgroup","title":"PolylineAnnotationGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2d\/init(bearing:)","title":"init(bearing: PuckBearing?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2d\/accuracyringbordercolor(_:)","title":"func accuracyRingBorderColor(UIColor) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/accuracyringcolor(_:)","title":"func accuracyRingColor(UIColor) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/bearingimage(_:)","title":"func bearingImage(UIImage?) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/opacity(_:)","title":"func opacity(Double) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/pulsing(_:)","title":"func pulsing(Puck2DConfiguration.Pulsing?) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/scale(_:)-3n0oj","title":"func scale(Exp) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/scale(_:)-68qt0","title":"func scale(Double) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/shadowimage(_:)","title":"func shadowImage(UIImage?) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/showsaccuracyring(_:)","title":"func showsAccuracyRing(Bool) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/slot(_:)","title":"func slot(Slot?) -> Puck2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck2d\/topimage(_:)","title":"func topImage(UIImage?) -> Puck2D","type":"method"}],"path":"\/documentation\/mapboxmaps\/puck2d","title":"Puck2D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3d\/init(model:bearing:)","title":"init(model: Model, bearing: PuckBearing?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelcastshadows(_:)-3kqvz","title":"func modelCastShadows(Bool) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelcastshadows(_:)-440ze","title":"func modelCastShadows(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelcolorusetheme(_:)-3iw5","title":"func modelColorUseTheme(ColorUseTheme) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelcolorusetheme(_:)-9ik3w","title":"func modelColorUseTheme(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelelevationreference(_:)","title":"func modelElevationReference(ModelElevationReference) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelemissivestrength(_:)-2yqto","title":"func modelEmissiveStrength(Double) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelemissivestrength(_:)-4rb1k","title":"func modelEmissiveStrength(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelopacity(_:)-12rlr","title":"func modelOpacity(Double) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelopacity(_:)-8rs0t","title":"func modelOpacity(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelreceiveshadows(_:)-4jfwf","title":"func modelReceiveShadows(Bool) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelreceiveshadows(_:)-7sdks","title":"func modelReceiveShadows(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelrotation(_:)","title":"func modelRotation(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelrotation(x:y:z:)","title":"func modelRotation(x: Double, y: Double, z: Double) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelscale(_:)","title":"func modelScale(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelscale(x:y:z:)","title":"func modelScale(x: Double, y: Double, z: Double) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelscalemode(_:)-2j8hr","title":"func modelScaleMode(Exp) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/modelscalemode(_:)-9u00w","title":"func modelScaleMode(ModelScaleMode) -> Puck3D","type":"method"},{"path":"\/documentation\/mapboxmaps\/puck3d\/slot(_:)","title":"func slot(Slot?) -> Puck3D","type":"method"}],"path":"\/documentation\/mapboxmaps\/puck3d","title":"Puck3D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapreader\/init(content:)","title":"init(content: MapReader<Content>.ContentProvider)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapreader\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapreader\/content","title":"var content: MapReader<Content>.ContentProvider","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contentprovider","title":"MapReader.ContentProvider","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(activationpoint:)-15z76","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(activationpoint:)-6kpxt","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityaction(named:_:)-5tvqt","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityaction(named:_:)-6u58a","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityaction(named:_:)-q46o","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityactivationpoint(_:)-2jd2e","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityactivationpoint(_:)-hg62","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityactivationpoint(_:isenabled:)-1qzu9","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityactivationpoint(_:isenabled:)-2nfsx","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-1s6t3","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-1wqkw","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-2rui1","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-4s31x","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-6dv16","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-7mset","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-7uvxa","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitycustomcontent(_:_:importance:)-8p78b","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydragpoint(_:description:)-19pd6","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydragpoint(_:description:)-2t3x4","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydragpoint(_:description:)-7i8v7","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydragpoint(_:description:isenabled:)-3lr8f","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydragpoint(_:description:isenabled:)-8sset","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydragpoint(_:description:isenabled:)-9zh3r","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydroppoint(_:description:)-1d1km","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydroppoint(_:description:)-36kxq","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydroppoint(_:description:)-7mia6","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydroppoint(_:description:isenabled:)-3uo9r","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydroppoint(_:description:isenabled:)-6bn72","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitydroppoint(_:description:isenabled:)-6i7qf","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhint(_:)-2sj2w","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhint(_:)-3yfmw","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhint(_:)-8wgb","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhint(_:isenabled:)-2rr3n","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhint(_:isenabled:)-4644s","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityhint(_:isenabled:)-9erqs","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityinputlabels(_:)-5k7ti","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityinputlabels(_:)-7kafg","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityinputlabels(_:)-9c9fk","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityinputlabels(_:isenabled:)-2bq62","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityinputlabels(_:isenabled:)-64o7m","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityinputlabels(_:isenabled:)-9eyh7","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabel(_:)-1pisz","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabel(_:)-4fuhv","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabel(_:)-6lrnh","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabel(_:isenabled:)-1dlnn","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabel(_:isenabled:)-1vpu0","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabel(_:isenabled:)-7xp4y","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:)-29cum","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:)-3g3nm","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:)-3vkw0","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:)-ytu8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entryid:entrylabel:)-2y041","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entryid:entrylabel:)-6hj6n","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entryid:entrylabel:)-7vdo9","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entryid:entrylabel:)-8o3he","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entrylabel:)-4ychi","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entrylabel:)-5q2qp","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entrylabel:)-6t87o","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:entries:entrylabel:)-7qhed","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:textranges:)-1e9sv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:textranges:)-335u8","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:textranges:)-81l6y","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotor(_:textranges:)-8wliq","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityvalue(_:)-1wzdq","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityvalue(_:)-5uyyp","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityvalue(_:)-ew0d","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityvalue(_:isenabled:)-19z8y","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityvalue(_:isenabled:)-4kozu","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityvalue(_:isenabled:)-9e216","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:actions:)-6ixgf","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:actions:)-9gqwk","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:actions:)-oc3r","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:actions:message:)-7rf6u","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:actions:message:)-816b9","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:actions:message:)-8e3gh","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:presenting:actions:)-1d2gh","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:presenting:actions:)-2icio","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:presenting:actions:)-9vv4i","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:presenting:actions:message:)-3ajhj","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:presenting:actions:message:)-lk6g","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(_:ispresented:presenting:actions:message:)-qeq5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alignmentguide(_:computevalue:)-3tu79","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alignmentguide(_:computevalue:)-6785w","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/aspectratio(_:contentmode:)-6udbk","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/aspectratio(_:contentmode:)-82222","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/background(_:in:fillstyle:)-6i69h","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/background(_:in:fillstyle:)-7fq80","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/background(in:fillstyle:)-c75l","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/background(in:fillstyle:)-y6sr","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/badge(_:)-622wz","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/badge(_:)-6b8e6","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/badge(_:)-797s","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/badge(_:)-9wrjs","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/buttonstyle(_:)-9h4pl","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/buttonstyle(_:)-9w7nr","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-16d8p","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-523hw","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8tvj4","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-14iug","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7x22o","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8kfh2","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1fwnk","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9b9la","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-qqsc","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-41pd1","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6b68n","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6ci6x","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contentmargins(_:_:for:)-2lxcl","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contentmargins(_:_:for:)-7awz0","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/dialogsuppressiontoggle(_:issuppressed:)-1rc5b","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/dialogsuppressiontoggle(_:issuppressed:)-5t3q1","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/dialogsuppressiontoggle(_:issuppressed:)-96li6","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogconfirmationlabel(_:)-5b08v","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogconfirmationlabel(_:)-64mju","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogconfirmationlabel(_:)-8ttpo","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogmessage(_:)-5otht","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogmessage(_:)-hk7s","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogmessage(_:)-tve","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2kikh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9wt6w","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2h4gh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4wygu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7q9ne","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-trkh","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-21i3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8wxwi","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporterfilenamelabel(_:)-137bx","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporterfilenamelabel(_:)-7z8hj","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileexporterfilenamelabel(_:)-s87d","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedobject(_:)-3u6cw","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedobject(_:)-9inpb","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedsceneobject(_:)-2xmta","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedsceneobject(_:)-8lrkb","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedscenevalue(_:_:)-2todn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedscenevalue(_:_:)-3x44e","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedvalue(_:_:)-2z2qv","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/focusedvalue(_:_:)-76s5o","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/help(_:)-4ny7b","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/help(_:)-6ijx3","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/help(_:)-6plkh","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/keyboardshortcut(_:)-6jewn","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/keyboardshortcut(_:)-6wqrk","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/linelimit(_:)-1hbzb","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/linelimit(_:)-7ub48","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/linelimit(_:)-7ww8z","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/linelimit(_:)-8k6bi","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listitemtint(_:)-341ac","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listitemtint(_:)-7c3yd","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listsectionspacing(_:)-15jru","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/listsectionspacing(_:)-79mmj","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbartitle(_:)-24l6w","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbartitle(_:)-2wwd8","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbartitle(_:)-63nv","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbartitle(_:displaymode:)-2ngc2","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbartitle(_:displaymode:)-43so3","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbartitle(_:displaymode:)-9wbgv","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdocument(_:preview:)-2la4x","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdocument(_:preview:)-31qtv","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdocument(_:preview:)-64t79","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationdocument(_:preview:)-69kcd","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationtitle(_:)-1dcis","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationtitle(_:)-225pl","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationtitle(_:)-3vtnb","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationtitle(_:)-7ndgw","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationtitle(_:)-guv5","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onchange(of:initial:_:)-14wdv","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onchange(of:initial:_:)-22b64","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ondrop(of:delegate:)-6g8fe","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/ondrop(of:delegate:)-8bvdp","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ondrop(of:istargeted:perform:)-178d6","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/ondrop(of:istargeted:perform:)-189ww","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/ondrop(of:istargeted:perform:)-33qkm","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ondrop(of:istargeted:perform:)-6tls2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ongeometrychange(for:of:action:)-2guit","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ongeometrychange(for:of:action:)-92jw5","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onscrollphasechange(_:)-3y6is","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onscrollphasechange(_:)-6b2af","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/padding(_:)-3ndn2","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/padding(_:)-xny","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/popover(ispresented:attachmentanchor:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/popover(item:attachmentanchor:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/renameaction(_:)-7duz7","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/renameaction(_:)-7ojmf","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/safeareainset(edge:alignment:spacing:content:)-44pjz","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/safeareainset(edge:alignment:spacing:content:)-qru6","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/safeareapadding(_:)-3v75n","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/safeareapadding(_:)-3ybgp","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scaleeffect(_:anchor:)-2scq2","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scaleeffect(_:anchor:)-7zq7f","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1gbkw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8kykg","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9d8uw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:editabletokens:placement:prompt:token:)-2okl3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:editabletokens:placement:prompt:token:)-2saut","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:editabletokens:placement:prompt:token:)-89d2q","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:ispresented:placement:prompt:)-20kj8","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:ispresented:placement:prompt:)-5fi6l","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:ispresented:placement:prompt:)-8wzo6","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:placement:prompt:)-1vud9","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:placement:prompt:)-6hq9t","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:placement:prompt:)-7xct5","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:placement:prompt:suggestions:)-50qh1","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:placement:prompt:suggestions:)-6ay66","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:placement:prompt:suggestions:)-7632t","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:ispresented:placement:prompt:token:)-4q6vz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:ispresented:placement:prompt:token:)-9g1wn","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:ispresented:placement:prompt:token:)-9i1q2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:placement:prompt:token:)-3qilv","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:placement:prompt:token:)-6hvi","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:placement:prompt:token:)-9ri1m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4c76q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7w1o5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-phge","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1atpf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7bwc9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9a8xl","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbar(content:)-55khn","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbar(content:)-8w68m","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapboxmaps\/mapreader\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/typeselectequivalent(_:)-1zsav","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/typeselectequivalent(_:)-45mts","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/typeselectequivalent(_:)-8h2m5","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/typesettinglanguage(_:isenabled:)-6hrpf","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/typesettinglanguage(_:isenabled:)-xrd1","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapreader\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapreader\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapreader","title":"MapReader","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapproxy\/camera","title":"var camera: CameraAnimationsManager?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapproxy\/location","title":"var location: LocationManager?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapproxy\/map","title":"var map: MapboxMap?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapproxy\/viewport","title":"var viewport: ViewportManager?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapproxy\/capturesnapshot(includeoverlays:)","title":"func captureSnapshot(includeOverlays: Bool) -> UIImage?","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapproxy","title":"MapProxy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurestate\/init(_:_:)","title":"init(T, T.State)","type":"init"},{"path":"\/documentation\/mapboxmaps\/featurestate\/init(_:id:state:)","title":"init(FeaturesetDescriptor<T>, id: FeaturesetFeatureId, state: T.State)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featurestate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/featurestate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/featurestate","title":"FeatureState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/followpuckoptions\/bearing","title":"var bearing: FollowPuckViewportStateBearing","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/followpuckoptions\/pitch","title":"var pitch: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/followpuckoptions\/zoom","title":"var zoom: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/followpuckoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewport\/followpuckoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewport\/followpuckoptions","title":"Viewport.FollowPuckOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/bearing","title":"var bearing: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/geometrypadding","title":"var geometryPadding: EdgeInsets","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/offset","title":"var offset: CGPoint?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/pitch","title":"var pitch: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewport\/overviewoptions","title":"Viewport.OverviewOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapgesturehandlers\/init(onbegin:onend:onendanimation:)","title":"init(onBegin: ((GestureType) -> Void)?, onEnd: ((GestureType, Bool) -> Void)?, onEndAnimation: ((GestureType) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapgesturehandlers\/onanimationend","title":"var onAnimationEnd: ((GestureType) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapgesturehandlers\/onbegin","title":"var onBegin: ((GestureType) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapgesturehandlers\/onend","title":"var onEnd: ((GestureType, Bool) -> Void)?","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapgesturehandlers","title":"MapGestureHandlers","type":"struct"},{"path":"\/documentation\/mapboxmaps\/mapurlopener","title":"MapURLOpener","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/forevery\/init(_:content:)","title":"init(Data, content: (Data.Element) -> Content)","type":"init"},{"path":"\/documentation\/mapboxmaps\/forevery\/init(_:id:content:)","title":"init(Data, id: KeyPath<Data.Element, ID>, content: (Data.Element) -> Content)","type":"init"}],"path":"\/documentation\/mapboxmaps\/forevery","title":"ForEvery","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildblock()","title":"static func buildBlock() -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildeither(first:)","title":"static func buildEither(first: [T]) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildeither(second:)","title":"static func buildEither(second: [T]) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildexpression(_:)","title":"static func buildExpression(T) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildif(_:)","title":"static func buildIf([T]?) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildoptional(_:)","title":"static func buildOptional([T]?) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildpartialblock(accumulated:next:)-1buob","title":"static func buildPartialBlock(accumulated: [T], next: [T]) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildpartialblock(accumulated:next:)-21ur0","title":"static func buildPartialBlock(accumulated: [T], next: T) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildpartialblock(first:)-7jpfs","title":"static func buildPartialBlock(first: Never) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildpartialblock(first:)-7rny4","title":"static func buildPartialBlock(first: T) -> [T]","type":"method"},{"path":"\/documentation\/mapboxmaps\/arraybuilder\/buildpartialblock(first:)-7s3cp","title":"static func buildPartialBlock(first: [T]) -> [T]","type":"method"}],"path":"\/documentation\/mapboxmaps\/arraybuilder","title":"ArrayBuilder","type":"struct"}],"path":"\/documentation\/mapboxmaps\/swiftui","title":"SwiftUI","type":"symbol"},{"children":[{"title":"Events","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploaded\/init(timeinterval:)","title":"init(timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/maploaded","title":"MapLoaded","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/init(type:message:sourceid:tileid:timestamp:)","title":"init(type: MapLoadingErrorType, message: String, sourceId: String?, tileId: CanonicalTileID?, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/sourceid","title":"var sourceId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/tileid","title":"var tileId: CanonicalTileID?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/timestamp","title":"var timestamp: Date","type":"property"},{"path":"\/documentation\/mapboxmaps\/maploadingerror\/type","title":"var type: MapLoadingErrorType","type":"property"}],"path":"\/documentation\/mapboxmaps\/maploadingerror","title":"MapLoadingError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleloaded\/init(timeinterval:)","title":"init(timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleloaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleloaded","title":"StyleLoaded","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloaded\/init(type:timeinterval:)","title":"init(type: StyleDataLoadedType, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/styledataloaded\/type","title":"var type: StyleDataLoadedType","type":"property"}],"path":"\/documentation\/mapboxmaps\/styledataloaded","title":"StyleDataLoaded","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerachanged\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/camerachanged","title":"CameraChanged","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapidle\/init(timestamp:)","title":"init(timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapidle\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapidle","title":"MapIdle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/init(sourceid:timestamp:)","title":"init(sourceId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceadded\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourceadded","title":"SourceAdded","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/init(sourceid:timestamp:)","title":"init(sourceId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceremoved\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourceremoved","title":"SourceRemoved","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/dataid","title":"var dataId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/tileid","title":"var tileId: CanonicalTileID?","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcedataloaded\/type","title":"var type: SourceDataLoadedType","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourcedataloaded","title":"SourceDataLoaded","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/init(imageid:timestamp:)","title":"init(imageId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/imageid","title":"var imageId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimagemissing\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleimagemissing","title":"StyleImageMissing","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/init(imageid:timestamp:)","title":"init(imageId: String, timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/imageid","title":"var imageId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunused\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleimageremoveunused","title":"StyleImageRemoveUnused","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframestarted\/init(timestamp:)","title":"init(timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframestarted\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/renderframestarted","title":"RenderFrameStarted","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/init(rendermode:needsrepaint:placementchanged:timeinterval:)","title":"init(renderMode: RenderModeType, needsRepaint: Bool, placementChanged: Bool, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/needsrepaint","title":"var needsRepaint: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/placementchanged","title":"var placementChanged: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/rendermode","title":"var renderMode: RenderModeType","type":"property"},{"path":"\/documentation\/mapboxmaps\/renderframefinished\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/renderframefinished","title":"RenderFrameFinished","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/init(source:request:response:cancelled:timeinterval:)","title":"init(source: RequestDataSourceType, request: RequestInfo, response: ResponseInfo?, cancelled: Bool, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/cancelled","title":"var cancelled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/request","title":"var request: RequestInfo","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/response","title":"var response: ResponseInfo?","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/source","title":"var source: RequestDataSourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequest\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/resourcerequest","title":"ResourceRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/genericevent\/init(name:data:timeinterval:)","title":"init(name: String, data: Any, timeInterval: EventTimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/genericevent\/data","title":"var data: Any","type":"property"},{"path":"\/documentation\/mapboxmaps\/genericevent\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/genericevent\/timeinterval","title":"var timeInterval: EventTimeInterval","type":"property"}],"path":"\/documentation\/mapboxmaps\/genericevent","title":"GenericEvent","type":"class"},{"title":"Event payload","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/sources","title":"case sources","type":"case"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/sprite","title":"case sprite","type":"case"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/style","title":"case style","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/styledataloadedtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styledataloadedtype","title":"StyleDataLoadedType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/glyphs","title":"case glyphs","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/source","title":"case source","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/sprite","title":"case sprite","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/style","title":"case style","type":"case"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/tile","title":"case tile","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/maploadingerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/maploadingerrortype","title":"MapLoadingErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/metadata","title":"case metadata","type":"case"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/tile","title":"case tile","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/sourcedataloadedtype","title":"SourceDataLoadedType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/full","title":"case full","type":"case"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/partial","title":"case partial","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/rendermodetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rendermodetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/rendermodetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rendermodetype","title":"RenderModeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/cache","title":"case cache","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/network","title":"case network","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestloadingmethodtype","title":"RequestLoadingMethodType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/low","title":"case low","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/regular","title":"case regular","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestprioritytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestprioritytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestprioritytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestprioritytype","title":"RequestPriorityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/glyphs","title":"case glyphs","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/model","title":"case model","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/source","title":"case source","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/spriteimage","title":"case spriteImage","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/spritejson","title":"case spriteJSON","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/style","title":"case style","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/tile","title":"case tile","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestresourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestresourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestresourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestresourcetype","title":"RequestResourceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/asset","title":"case asset","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/database","title":"case database","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/filesystem","title":"case fileSystem","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/network","title":"case network","type":"case"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/resourceloader","title":"case resourceLoader","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requestdatasourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requestdatasourcetype","title":"RequestDataSourceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/cache","title":"case cache","type":"case"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/localfile","title":"case localFile","type":"case"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/network","title":"case network","type":"case"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/tilestore","title":"case tileStore","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/responsesourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responsesourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/responsesourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/responsesourcetype","title":"ResponseSourceType","type":"enum"},{"title":"Foundation","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/init(just:)","title":"init(just: Payload)","type":"init"},{"path":"\/documentation\/mapboxmaps\/signal\/init(observeimpl:)","title":"init(observeImpl: Signal<Payload>.ObserveImpl)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/observe(_:)","title":"func observe(Signal<Payload>.Handler) -> AnyCancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/observenext(_:)","title":"func observeNext(Signal<Payload>.Handler) -> AnyCancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/owned(by:)","title":"func owned(by: AnimationOwner) -> Signal<Payload>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/handler","title":"Signal.Handler","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/signal\/observeimpl","title":"Signal.ObserveImpl","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/values","title":"var values: AsyncPublisher<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/allsatisfy(_:)","title":"func allSatisfy((Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/append(_:)","title":"func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/assertnofailure(_:file:line:)","title":"func assertNoFailure(String, file: StaticString, line: UInt) -> Publishers.AssertNoFailure<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/assign(to:)","title":"func assign(to: inout Published<Self.Output>.Publisher)","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/assign(to:on:)","title":"func assign<Root>(to: ReferenceWritableKeyPath<Root, Self.Output>, on: Root) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/breakpoint(receivesubscription:receiveoutput:receivecompletion:)","title":"func breakpoint(receiveSubscription: ((any Subscription) -> Bool)?, receiveOutput: ((Self.Output) -> Bool)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Bool)?) -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/breakpointonerror()","title":"func breakpointOnError() -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/buffer(size:prefetch:whenfull:)","title":"func buffer(size: Int, prefetch: Publishers.PrefetchStrategy, whenFull: Publishers.BufferingStrategy<Self.Failure>) -> Publishers.Buffer<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/catch(_:)","title":"func `catch`<P>((Self.Failure) -> P) -> Publishers.Catch<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/collect()","title":"func collect() -> Publishers.Collect<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/collect(_:)","title":"func collect(Int) -> Publishers.CollectByCount<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/collect(_:options:)","title":"func collect<S>(Publishers.TimeGroupingStrategy<S>, options: S.SchedulerOptions?) -> Publishers.CollectByTime<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:)","title":"func combineLatest<P>(P) -> Publishers.CombineLatest<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:)-1cqmu","title":"func combineLatest<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.CombineLatest<Self, P>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:)-9r4l4","title":"func combineLatest<P, Q>(P, Q) -> Publishers.CombineLatest3<Self, P, Q>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:_:)-75n3e","title":"func combineLatest<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.CombineLatest3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:_:)-7ajai","title":"func combineLatest<P, Q, R>(P, Q, R) -> Publishers.CombineLatest4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/combinelatest(_:_:_:_:)","title":"func combineLatest<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.CombineLatest4<Self, P, Q, R>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/compactmap(_:)","title":"func compactMap<T>((Self.Output) -> T?) -> Publishers.CompactMap<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/contains(_:)","title":"func contains(Self.Output) -> Publishers.Contains<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/contains(where:)","title":"func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/count()","title":"func count() -> Publishers.Count<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/debounce(for:scheduler:options:)","title":"func debounce<S>(for: S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Debounce<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/decode(type:decoder:)","title":"func decode<Item, Coder>(type: Item.Type, decoder: Coder) -> Publishers.Decode<Self, Item, Coder>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/delay(for:tolerance:scheduler:options:)","title":"func delay<S>(for: S.SchedulerTimeType.Stride, tolerance: S.SchedulerTimeType.Stride?, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Delay<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/drop(untiloutputfrom:)","title":"func drop<P>(untilOutputFrom: P) -> Publishers.DropUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/drop(while:)","title":"func drop(while: (Self.Output) -> Bool) -> Publishers.DropWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/dropfirst(_:)","title":"func dropFirst(Int) -> Publishers.Drop<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/encode(encoder:)","title":"func encode<Coder>(encoder: Coder) -> Publishers.Encode<Self, Coder>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/erasetoanypublisher()","title":"func eraseToAnyPublisher() -> AnyPublisher<Self.Output, Self.Failure>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/erasetosignal()","title":"func eraseToSignal() -> Signal<Self.Output>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/first()","title":"func first() -> Publishers.First<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/first(where:)","title":"func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-1zpsw","title":"func flatMap<T, P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-339mw","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-69s09","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<Publishers.SetFailureType<P, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/flatmap(maxpublishers:_:)-7kwg9","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Publishers.SetFailureType<Self, P.Failure>>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/handleevents(receivesubscription:receiveoutput:receivecompletion:receivecancel:receiverequest:)","title":"func handleEvents(receiveSubscription: ((any Subscription) -> Void)?, receiveOutput: ((Self.Output) -> Void)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void)?, receiveCancel: (() -> Void)?, receiveRequest: ((Subscribers.Demand) -> Void)?) -> Publishers.HandleEvents<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/ignoreoutput()","title":"func ignoreOutput() -> Publishers.IgnoreOutput<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/last()","title":"func last() -> Publishers.Last<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/last(where:)","title":"func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/makeconnectable()","title":"func makeConnectable() -> Publishers.MakeConnectable<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:)-1bwzm","title":"func map<T>((Self.Output) -> T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:)-7hog5","title":"func map<T>(KeyPath<Self.Output, T>) -> Publishers.MapKeyPath<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:_:)","title":"func map<T0, T1>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>) -> Publishers.MapKeyPath2<Self, T0, T1>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/map(_:_:_:)","title":"func map<T0, T1, T2>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>, KeyPath<Self.Output, T2>) -> Publishers.MapKeyPath3<Self, T0, T1, T2>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/maperror(_:)","title":"func mapError<E>((Self.Failure) -> E) -> Publishers.MapError<Self, E>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/max()","title":"func max() -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/max(by:)","title":"func max(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/measureinterval(using:options:)","title":"func measureInterval<S>(using: S, options: S.SchedulerOptions?) -> Publishers.MeasureInterval<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:)","title":"func merge(with: Self) -> Publishers.MergeMany<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:)","title":"func merge<B, C>(with: B, C) -> Publishers.Merge3<Self, B, C>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:)","title":"func merge<B, C, D>(with: B, C, D) -> Publishers.Merge4<Self, B, C, D>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:)","title":"func merge<B, C, D, E>(with: B, C, D, E) -> Publishers.Merge5<Self, B, C, D, E>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:_:)","title":"func merge<B, C, D, E, F>(with: B, C, D, E, F) -> Publishers.Merge6<Self, B, C, D, E, F>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G>(with: B, C, D, E, F, G) -> Publishers.Merge7<Self, B, C, D, E, F, G>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/merge(with:_:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G, H>(with: B, C, D, E, F, G, H) -> Publishers.Merge8<Self, B, C, D, E, F, G, H>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/min()","title":"func min() -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/min(by:)","title":"func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/multicast(_:)","title":"func multicast<S>(() -> S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/multicast(subject:)","title":"func multicast<S>(subject: S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/output(at:)","title":"func output(at: Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/output(in:)","title":"func output<R>(in: R) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prefix(_:)","title":"func prefix(Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prefix(untiloutputfrom:)","title":"func prefix<P>(untilOutputFrom: P) -> Publishers.PrefixUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prefix(while:)","title":"func prefix(while: (Self.Output) -> Bool) -> Publishers.PrefixWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/prepend(_:)","title":"func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/print(_:to:)","title":"func print(String, to: (any TextOutputStream)?) -> Publishers.Print<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/receive(on:options:)","title":"func receive<S>(on: S, options: S.SchedulerOptions?) -> Publishers.ReceiveOn<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/receive(subscriber:)","title":"func receive<S>(subscriber: S)","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/reduce(_:_:)","title":"func reduce<T>(T, (T, Self.Output) -> T) -> Publishers.Reduce<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/removeduplicates()","title":"func removeDuplicates() -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Output, Self.Output) -> Bool) -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/replaceempty(with:)","title":"func replaceEmpty(with: Self.Output) -> Publishers.ReplaceEmpty<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Publishers.ReplaceError<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/replacenil(with:)","title":"func replaceNil<T>(with: T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/retry(_:)","title":"func retry(Int) -> Publishers.Retry<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/scan(_:_:)","title":"func scan<T>(T, (T, Self.Output) -> T) -> Publishers.Scan<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/setfailuretype(to:)","title":"func setFailureType<E>(to: E.Type) -> Publishers.SetFailureType<Self, E>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/share()","title":"func share() -> Publishers.Share<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/sink(receivecompletion:receivevalue:)","title":"func sink(receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void), receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/sink(receivevalue:)","title":"func sink(receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/subscribe(_:)-8w44z","title":"func subscribe<S>(S) -> AnyCancellable","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/subscribe(_:)-9k3ns","title":"func subscribe<S>(S)","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/subscribe(on:options:)","title":"func subscribe<S>(on: S, options: S.SchedulerOptions?) -> Publishers.SubscribeOn<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/switchtolatest()","title":"func switchToLatest() -> Publishers.SwitchToLatest<Self.Output, Publishers.SetFailureType<Self, Self.Output.Failure>>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/throttle(for:scheduler:latest:)","title":"func throttle<S>(for: S.SchedulerTimeType.Stride, scheduler: S, latest: Bool) -> Publishers.Throttle<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/timeout(_:scheduler:options:customerror:)","title":"func timeout<S>(S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?, customError: (() -> Self.Failure)?) -> Publishers.Timeout<Self, S>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryallsatisfy(_:)","title":"func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trycatch(_:)","title":"func tryCatch<P>((Self.Failure) throws -> P) -> Publishers.TryCatch<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trycompactmap(_:)","title":"func tryCompactMap<T>((Self.Output) throws -> T?) -> Publishers.TryCompactMap<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trycontains(where:)","title":"func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trydrop(while:)","title":"func tryDrop(while: (Self.Output) throws -> Bool) -> Publishers.TryDropWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryfilter(_:)","title":"func tryFilter((Self.Output) throws -> Bool) -> Publishers.TryFilter<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryfirst(where:)","title":"func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trylast(where:)","title":"func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trymap(_:)","title":"func tryMap<T>((Self.Output) throws -> T) -> Publishers.TryMap<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trymax(by:)","title":"func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/trymin(by:)","title":"func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryprefix(while:)","title":"func tryPrefix(while: (Self.Output) throws -> Bool) -> Publishers.TryPrefixWhile<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryreduce(_:_:)","title":"func tryReduce<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryReduce<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryremoveduplicates(by:)","title":"func tryRemoveDuplicates(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryRemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/tryscan(_:_:)","title":"func tryScan<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryScan<Self, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:)","title":"func zip<P>(P) -> Publishers.Zip<Self, P>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:)-7t2dp","title":"func zip<P, Q>(P, Q) -> Publishers.Zip3<Self, P, Q>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:)-9rivt","title":"func zip<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.Zip<Self, P>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:_:)-4j9qp","title":"func zip<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.Zip3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:_:)-6s811","title":"func zip<P, Q, R>(P, Q, R) -> Publishers.Zip4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/mapboxmaps\/signal\/zip(_:_:_:_:)","title":"func zip<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.Zip4<Self, P, Q, R>, T>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/signal\/failure","title":"Signal.Failure","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/signal\/output","title":"Signal.Output","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/signal\/publisher-implementations","title":"Publisher Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/signal","title":"Signal","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/init(_:)-13kaj","title":"convenience init<S>(S)","type":"init"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/init(_:)-24hfp","title":"convenience init<C>(C)","type":"init"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/init(_:)-5to9x","title":"init(() -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-3m1sp","title":"func store(in: inout Set<AnyCancelable>)","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-7gtoz","title":"func store(in: inout Set<AnyCancellable>)","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-84gyl","title":"func store<C>(in: inout C)","type":"method"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/store(in:)-oh7e","title":"func store<C>(in: inout C)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/==(_:_:)","title":"static func == (AnyCancelable, AnyCancelable) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/anycancelable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anycancelable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/anycancelable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/anycancelable","title":"AnyCancelable","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cancelable\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/mapboxcommon\/cancelable","title":"Cancelable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/eventtimeinterval\/init(begin:end:)","title":"init(begin: Date, end: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/eventtimeinterval\/begin","title":"var begin: Date","type":"property"},{"path":"\/documentation\/mapboxmaps\/eventtimeinterval\/end","title":"var end: Date","type":"property"}],"path":"\/documentation\/mapboxmaps\/eventtimeinterval","title":"EventTimeInterval","type":"class"},{"title":"Extras","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequesterror\/init(reason:message:)","title":"init(reason: RequestErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resourcerequesterror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/resourcerequesterror\/reason","title":"var reason: RequestErrorType","type":"property"}],"path":"\/documentation\/mapboxmaps\/resourcerequesterror","title":"ResourceRequestError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/init(url:resource:priority:loadingmethod:)","title":"init(url: String, resource: RequestResourceType, priority: RequestPriorityType, loadingMethod: [NSNumber])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/priority","title":"var priority: RequestPriorityType","type":"property"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/resource","title":"var resource: RequestResourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/requestinfo\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/requestinfo","title":"RequestInfo","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/init(nocontent:notmodified:mustrevalidate:source:size:modified:expires:etag:error:)","title":"init(noContent: Bool, notModified: Bool, mustRevalidate: Bool, source: ResponseSourceType, size: UInt64, modified: Date?, expires: Date?, etag: String?, error: ResourceRequestError?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/error","title":"var error: ResourceRequestError?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/etag","title":"var etag: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/modified","title":"var modified: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/mustrevalidate","title":"var mustRevalidate: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/nocontent","title":"var noContent: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/notmodified","title":"var notModified: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/size","title":"var size: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/responseinfo\/source","title":"var source: ResponseSourceType","type":"property"}],"path":"\/documentation\/mapboxmaps\/responseinfo","title":"ResponseInfo","type":"class"},{"title":"Deprecated","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/camerachanged","title":"static var cameraChanged: MapEventType<CameraChanged>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/mapidle","title":"static var mapIdle: MapEventType<MapIdle>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/maploaded","title":"static var mapLoaded: MapEventType<MapLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/maploadingerror","title":"static var mapLoadingError: MapEventType<MapLoadingError>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/renderframefinished","title":"static var renderFrameFinished: MapEventType<RenderFrameFinished>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/renderframestarted","title":"static var renderFrameStarted: MapEventType<RenderFrameStarted>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/resourcerequest","title":"static var resourceRequest: MapEventType<ResourceRequest>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/sourceadded","title":"static var sourceAdded: MapEventType<SourceAdded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/sourcedataloaded","title":"static var sourceDataLoaded: MapEventType<SourceDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/sourceremoved","title":"static var sourceRemoved: MapEventType<SourceRemoved>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styledataloaded","title":"static var styleDataLoaded: MapEventType<StyleDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styleimagemissing","title":"static var styleImageMissing: MapEventType<StyleImageMissing>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styleimageremoveunused","title":"static var styleImageRemoveUnused: MapEventType<StyleImageRemoveUnused>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapeventtype\/styleloaded","title":"static var styleLoaded: MapEventType<StyleLoaded>","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapeventtype","title":"MapEventType","type":"struct"}],"path":"\/documentation\/mapboxmaps\/events","title":"Map events","type":"symbol"},{"children":[{"title":"Interaction types","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/interaction","title":"Interaction","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tapinteraction\/init(_:filter:radius:action:)","title":"init<T>(FeaturesetDescriptor<T>, filter: Exp?, radius: CGFloat?, action: (T, InteractionContext) -> Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tapinteraction\/init(action:)","title":"init(action: (InteractionContext) -> Bool)","type":"init"}],"path":"\/documentation\/mapboxmaps\/tapinteraction","title":"TapInteraction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/longpressinteraction\/init(_:filter:radius:action:)","title":"init<T>(FeaturesetDescriptor<T>, filter: Exp?, radius: CGFloat?, action: (T, InteractionContext) -> Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/longpressinteraction\/init(action:)","title":"init(action: (InteractionContext) -> Bool)","type":"init"}],"path":"\/documentation\/mapboxmaps\/longpressinteraction","title":"LongPressInteraction","type":"struct"},{"title":"Featuresets","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/featuresetid","title":"let featuresetId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/importid","title":"let importId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/layerid","title":"let layerId: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/standardbuildings","title":"static var standardBuildings: FeaturesetDescriptor<StandardBuildingsFeature>","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/standardplacelabels","title":"static var standardPlaceLabels: FeaturesetDescriptor<StandardPlaceLabelsFeature>","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/standardpoi","title":"static var standardPoi: FeaturesetDescriptor<StandardPoiFeature>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/featureset(_:importid:)","title":"static func featureset(String, importId: String?) -> FeaturesetDescriptor<FeatureType>","type":"method"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/layer(_:)","title":"static func layer(String) -> FeaturesetDescriptor<FeatureType>","type":"method"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/standardbuildings(importid:)","title":"static func standardBuildings(importId: String) -> FeaturesetDescriptor<FeatureType>","type":"method"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/standardplacelabels(importid:)","title":"static func standardPlaceLabels(importId: String) -> FeaturesetDescriptor<FeatureType>","type":"method"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/standardpoi(importid:)","title":"static func standardPoi(importId: String) -> FeaturesetDescriptor<FeatureType>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/featuresetdescriptor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/featuresetdescriptor","title":"FeaturesetDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetfeatureid\/init(id:namespace:)","title":"init(id: String, namespace: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetfeatureid\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeatureid\/namespace","title":"let namespace: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetfeatureid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/featuresetfeatureid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/featuresetfeatureid","title":"FeaturesetFeatureId","type":"struct"},{"title":"Feature types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetfeaturetype\/init(from:)","title":"init?(from: FeaturesetFeature)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetfeaturetype\/featureset","title":"var featureset: FeaturesetDescriptor<Self>","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeaturetype\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeaturetype\/id","title":"var id: FeaturesetFeatureId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeaturetype\/properties","title":"var properties: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeaturetype\/state","title":"var state: Self.State","type":"property"}],"path":"\/documentation\/mapboxmaps\/featuresetfeaturetype","title":"FeaturesetFeatureType","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetfeature\/init(from:)","title":"convenience init?(from: FeaturesetFeature)","type":"init"},{"path":"\/documentation\/mapboxmaps\/featuresetfeature\/init(id:featureset:geojsonfeature:state:)","title":"init(id: FeaturesetFeatureId?, featureset: FeaturesetDescriptor<FeaturesetFeature>, geoJsonFeature: Feature, state: FeaturesetFeature.State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featuresetfeature\/featureset","title":"let featureset: FeaturesetDescriptor<FeaturesetFeature>","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeature\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeature\/id","title":"let id: FeaturesetFeatureId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeature\/properties","title":"var properties: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/featuresetfeature\/state","title":"let state: JSONObject","type":"property"}],"path":"\/documentation\/mapboxmaps\/featuresetfeature","title":"FeaturesetFeature","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/state-swift.struct\/init(hide:)","title":"init(hide: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/state-swift.struct\/hide","title":"var hide: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/state-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/standardpoifeature\/state-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/standardpoifeature\/state-swift.struct","title":"StandardPoiFeature.State","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/statekey\/hide","title":"static let hide: StandardPoiFeature.StateKey","type":"property"}],"path":"\/documentation\/mapboxmaps\/standardpoifeature\/statekey","title":"StandardPoiFeature.StateKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/init(from:)","title":"init?(from: FeaturesetFeature)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/airportref","title":"var airportRef: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/class","title":"var `class`: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/coordinate","title":"let coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/featureset","title":"var featureset: FeaturesetDescriptor<StandardPoiFeature>","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/group","title":"var group: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/id","title":"var id: FeaturesetFeatureId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/maki","title":"var maki: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/properties","title":"var properties: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/state-swift.property","title":"var state: StandardPoiFeature.State","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/transitmode","title":"var transitMode: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/transitnetwork","title":"var transitNetwork: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardpoifeature\/transitstoptype","title":"var transitStopType: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/standardpoifeature","title":"StandardPoiFeature","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.struct\/init(hide:highlight:select:)","title":"init(hide: Bool?, highlight: Bool?, select: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.struct\/hide","title":"var hide: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.struct\/highlight","title":"var highlight: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.struct\/select","title":"var select: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.struct","title":"StandardPlaceLabelsFeature.State","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/statekey\/hide","title":"static let hide: StandardPlaceLabelsFeature.StateKey","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/statekey\/highlight","title":"static let highlight: StandardPlaceLabelsFeature.StateKey","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/statekey\/select","title":"static let select: StandardPlaceLabelsFeature.StateKey","type":"property"}],"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/statekey","title":"StandardPlaceLabelsFeature.StateKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/init(from:)","title":"init?(from: FeaturesetFeature)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/class","title":"var `class`: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/featureset","title":"var featureset: FeaturesetDescriptor<StandardPlaceLabelsFeature>","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/id","title":"var id: FeaturesetFeatureId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/properties","title":"var properties: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature\/state-swift.property","title":"var state: StandardPlaceLabelsFeature.State","type":"property"}],"path":"\/documentation\/mapboxmaps\/standardplacelabelsfeature","title":"StandardPlaceLabelsFeature","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/state-swift.struct\/init(highlight:select:)","title":"init(highlight: Bool?, select: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/state-swift.struct\/highlight","title":"var highlight: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/state-swift.struct\/select","title":"var select: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/state-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/state-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/state-swift.struct","title":"StandardBuildingsFeature.State","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/statekey\/highlight","title":"static let highlight: StandardBuildingsFeature.StateKey","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/statekey\/select","title":"static let select: StandardBuildingsFeature.StateKey","type":"property"}],"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/statekey","title":"StandardBuildingsFeature.StateKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/init(from:)","title":"init?(from: FeaturesetFeature)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/featureset","title":"var featureset: FeaturesetDescriptor<StandardBuildingsFeature>","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/group","title":"var group: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/id","title":"var id: FeaturesetFeatureId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/properties","title":"var properties: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature\/state-swift.property","title":"var state: StandardBuildingsFeature.State","type":"property"}],"path":"\/documentation\/mapboxmaps\/standardbuildingsfeature","title":"StandardBuildingsFeature","type":"class"}],"path":"\/documentation\/mapboxmaps\/featuresets-and-interactions","title":"Featuresets and Interactions","type":"symbol"},{"title":"Styling","type":"groupMarker"},{"children":[{"title":"Runtime styling","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/alllayeridentifiers","title":"var allLayerIdentifiers: [LayerInfo]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/alllightidentifiers","title":"var allLightIdentifiers: [LightInfo]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/allslotidentifiers","title":"var allSlotIdentifiers: [Slot]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/allsourceidentifiers","title":"var allSourceIdentifiers: [SourceInfo]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/isstyleloaded","title":"var isStyleLoaded: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/mapstyle","title":"var mapStyle: MapStyle?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/projection","title":"var projection: StyleProjection?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/styledefaultcamera","title":"var styleDefaultCamera: CameraOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/styleimports","title":"var styleImports: [StyleObjectInfo]","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/stylejson","title":"var styleJSON: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/styletransition","title":"var styleTransition: TransitionOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/styleuri","title":"var styleURI: StyleURI?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addcustomgeometrysource(withid:options:)","title":"func addCustomGeometrySource(withId: String, options: CustomGeometrySourceOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addcustomlayer(withid:layerhost:layerposition:)","title":"func addCustomLayer(withId: String, layerHost: any CustomLayerHost, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addgeojsonsourcefeatures(forsourceid:features:dataid:)","title":"func addGeoJSONSourceFeatures(forSourceId: String, features: [Feature], dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addimage(_:id:sdf:contentinsets:)","title":"func addImage(UIImage, id: String, sdf: Bool, contentInsets: UIEdgeInsets) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addimage(_:id:sdf:stretchx:stretchy:content:)","title":"func addImage(UIImage, id: String, sdf: Bool, stretchX: [ImageStretches], stretchY: [ImageStretches], content: ImageContent?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addlayer(_:layerposition:)","title":"func addLayer(any Layer, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addlayer(with:layerposition:)","title":"func addLayer(with: [String : Any], layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addpersistentcustomlayer(withid:layerhost:layerposition:)","title":"func addPersistentCustomLayer(withId: String, layerHost: any CustomLayerHost, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addpersistentlayer(_:layerposition:)","title":"func addPersistentLayer(any Layer, layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addpersistentlayer(with:layerposition:)","title":"func addPersistentLayer(with: [String : Any], layerPosition: LayerPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addsource(_:dataid:)","title":"func addSource(any Source, dataId: String?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addsource(withid:properties:)","title":"func addSource(withId: String, properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addstyleimport(withid:json:config:importposition:)","title":"func addStyleImport(withId: String, json: String, config: [String : Any]?, importPosition: ImportPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addstyleimport(withid:uri:config:importposition:)","title":"func addStyleImport(withId: String, uri: StyleURI, config: [String : Any]?, importPosition: ImportPosition?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/addstylemodel(modelid:modeluri:)","title":"func addStyleModel(modelId: String, modelUri: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/atmosphereproperty(_:)","title":"func atmosphereProperty(String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/getstyleimportconfigproperties(for:)","title":"func getStyleImportConfigProperties(for: String) throws -> [String : StylePropertyValue]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/getstyleimportconfigproperty(for:config:)","title":"func getStyleImportConfigProperty(for: String, config: String) throws -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/getstyleimportschema(for:)","title":"func getStyleImportSchema(for: String) throws -> Any","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/hasstylemodel(modelid:)","title":"func hasStyleModel(modelId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/image(withid:)","title":"func image(withId: String) -> UIImage?","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/imageexists(withid:)","title":"func imageExists(withId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/invalidatecustomgeometrysourceregion(forsourceid:bounds:)","title":"func invalidateCustomGeometrySourceRegion(forSourceId: String, bounds: CoordinateBounds) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/invalidatecustomgeometrysourcetile(forsourceid:tileid:)","title":"func invalidateCustomGeometrySourceTile(forSourceId: String, tileId: CanonicalTileID) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/ispersistentlayer(id:)","title":"func isPersistentLayer(id: String) throws -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/layer(withid:)","title":"func layer(withId: String) throws -> any Layer","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/layer(withid:type:)","title":"func layer<T>(withId: String, type: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/layerexists(withid:)","title":"func layerExists(withId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/layerproperties(for:)","title":"func layerProperties(for: String) throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/layerproperty(for:property:)","title":"func layerProperty(for: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/layerpropertyvalue(for:property:)","title":"func layerPropertyValue(for: String, property: String) -> Any","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/lightproperty(for:property:)","title":"func lightProperty(for: String, property: String) -> Any","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/lightpropertyvalue(for:property:)","title":"func lightPropertyValue(for: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/load(mapstyle:transition:completion:)","title":"func load(mapStyle: MapStyle, transition: TransitionOptions?, completion: (((any Error)?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/localizelabels(into:forlayerids:)","title":"func localizeLabels(into: Locale, forLayerIds: [String]?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/movelayer(withid:to:)","title":"func moveLayer(withId: String, to: LayerPosition) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/movestyleimport(withid:to:)","title":"func moveStyleImport(withId: String, to: ImportPosition) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removeatmosphere()","title":"func removeAtmosphere() throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removecolortheme()","title":"func removeColorTheme() throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removegeojsonsourcefeatures(forsourceid:featureids:dataid:)","title":"func removeGeoJSONSourceFeatures(forSourceId: String, featureIds: [String], dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removeimage(withid:)","title":"func removeImage(withId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removelayer(withid:)","title":"func removeLayer(withId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removerain()","title":"func removeRain() throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removesnow()","title":"func removeSnow() throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removesource(withid:)","title":"func removeSource(withId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removestyleimport(for:)","title":"func removeStyleImport(for: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removestyleimport(withid:)","title":"func removeStyleImport(withId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removestyleimportcolortheme(importid:)","title":"func removeStyleImportColorTheme(importId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removestylemodel(modelid:)","title":"func removeStyleModel(modelId: String) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/removeterrain()","title":"func removeTerrain()","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setatmosphere(_:)","title":"func setAtmosphere(Atmosphere) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setatmosphere(properties:)","title":"func setAtmosphere(properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setatmosphereproperty(_:value:)","title":"func setAtmosphereProperty(String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setcolortheme(_:)","title":"func setColorTheme(ColorTheme) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setcustomgeometrysourcetiledata(forsourceid:tileid:features:)","title":"func setCustomGeometrySourceTileData(forSourceId: String, tileId: CanonicalTileID, features: [Feature]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setlayerproperties(for:properties:)","title":"func setLayerProperties(for: String, properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setlayerproperty(for:property:value:)","title":"func setLayerProperty(for: String, property: String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setlightproperty(for:property:value:)","title":"func setLightProperty(for: String, property: String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setlights(_:)","title":"func setLights(FlatLight) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setlights(ambient:directional:)","title":"func setLights(ambient: AmbientLight, directional: DirectionalLight) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setmapstylecontent(content:)","title":"func setMapStyleContent(content: () -> some MapStyleContent)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setprojection(_:)","title":"func setProjection(StyleProjection) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setrain(_:)","title":"func setRain(Rain) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setsnow(_:)","title":"func setSnow(Snow) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setsourceproperties(for:properties:)","title":"func setSourceProperties(for: String, properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setsourceproperty(for:property:value:)","title":"func setSourceProperty(for: String, property: String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setstyleimportcolortheme(importid:colortheme:)","title":"func setStyleImportColorTheme(importId: String, colorTheme: ColorTheme) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setstyleimportconfigproperties(for:configs:)","title":"func setStyleImportConfigProperties(for: String, configs: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setstyleimportconfigproperty(for:config:value:)","title":"func setStyleImportConfigProperty(for: String, config: String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setterrain(_:)","title":"func setTerrain(Terrain) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setterrain(properties:)","title":"func setTerrain(properties: [String : Any]) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/setterrainproperty(_:value:)","title":"func setTerrainProperty(String, value: Any) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/source(withid:)","title":"func source(withId: String) throws -> any Source","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/source(withid:type:)","title":"func source<T>(withId: String, type: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/sourceexists(withid:)","title":"func sourceExists(withId: String) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/sourceproperties(for:)","title":"func sourceProperties(for: String) throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/sourceproperty(for:property:)","title":"func sourceProperty(for: String, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/terrainproperty(_:)-62fbm","title":"func terrainProperty(String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/terrainproperty(_:)-ew0t","title":"func terrainProperty(String) -> Any","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/updategeojsonsource(withid:data:dataid:)","title":"func updateGeoJSONSource(withId: String, data: GeoJSONSourceData, dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/updategeojsonsource(withid:geojson:dataid:)","title":"func updateGeoJSONSource(withId: String, geoJSON: GeoJSONObject, dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/updategeojsonsourcefeatures(forsourceid:features:dataid:)","title":"func updateGeoJSONSourceFeatures(forSourceId: String, features: [Feature], dataId: String?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/updateimagesource(withid:image:)","title":"func updateImageSource(withId: String, image: UIImage) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/updatelayer(withid:type:update:)","title":"func updateLayer<T>(withId: String, type: T.Type, update: (inout T) throws -> Void) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/updatestyleimport(withid:json:config:)","title":"func updateStyleImport(withId: String, json: String, config: [String : Any]?) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/updatestyleimport(withid:uri:config:)","title":"func updateStyleImport(withId: String, uri: StyleURI, config: [String : Any]?) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/layerpropertydefaultvalue(for:property:)","title":"static func layerPropertyDefaultValue(for: LayerType, property: String) -> StylePropertyValue","type":"method"},{"path":"\/documentation\/mapboxmaps\/stylemanager\/sourcepropertydefaultvalue(for:property:)","title":"static func sourcePropertyDefaultValue(for: String, property: String) -> StylePropertyValue","type":"method"}],"path":"\/documentation\/mapboxmaps\/stylemanager","title":"StyleManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/styleuri\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/rawvalue-swift.property","title":"let rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/rawvalue-swift.typealias","title":"StyleURI.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/dark","title":"static let dark: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/light","title":"static let light: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/outdoors","title":"static let outdoors: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/satellite","title":"static let satellite: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/satellitestreets","title":"static let satelliteStreets: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/standard","title":"static var standard: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/standardsatellite","title":"static var standardSatellite: StyleURI","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleuri\/streets","title":"static let streets: StyleURI","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styleuri\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleuri\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleuri\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleuri","title":"StyleURI","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerposition\/above(_:)","title":"case above(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/layerposition\/at(_:)","title":"case at(Int)","type":"case"},{"path":"\/documentation\/mapboxmaps\/layerposition\/below(_:)","title":"case below(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/layerposition\/default","title":"case `default`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerposition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/layerposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/layerposition","title":"LayerPosition","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/intensity","title":"var intensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/intensitytransition","title":"var intensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/type","title":"let type: LightType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/color(_:)-4fmd4","title":"func color(Exp) -> AmbientLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/color(_:)-82iew","title":"func color(UIColor) -> AmbientLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/color(_:)-pwuj","title":"func color(StyleColor) -> AmbientLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/colortransition(_:)","title":"func colorTransition(StyleTransition) -> AmbientLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/intensity(_:)-7bks","title":"func intensity(Double) -> AmbientLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/intensity(_:)-9hpgh","title":"func intensity(Exp) -> AmbientLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/intensitytransition(_:)","title":"func intensityTransition(StyleTransition) -> AmbientLight","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/ambientlight\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/ambientlight\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/ambientlight\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ambientlight","title":"AmbientLight","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/directionallight\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/directionallight\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/directionallight\/castshadows","title":"var castShadows: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/direction","title":"var direction: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/directiontransition","title":"var directionTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/intensity","title":"var intensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/intensitytransition","title":"var intensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/shadowintensity","title":"var shadowIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/shadowintensitytransition","title":"var shadowIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/directionallight\/type","title":"let type: LightType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/directionallight\/castshadows(_:)-1xi53","title":"func castShadows(Exp) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/castshadows(_:)-8q76y","title":"func castShadows(Bool) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/color(_:)-1nd48","title":"func color(UIColor) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/color(_:)-8329i","title":"func color(StyleColor) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/color(_:)-8li7k","title":"func color(Exp) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/colortransition(_:)","title":"func colorTransition(StyleTransition) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/direction(_:)","title":"func direction(Exp) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/direction(azimuthal:polar:)","title":"func direction(azimuthal: Double, polar: Double) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/directiontransition(_:)","title":"func directionTransition(StyleTransition) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/intensity(_:)-56cs6","title":"func intensity(Exp) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/intensity(_:)-iei","title":"func intensity(Double) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/intensitytransition(_:)","title":"func intensityTransition(StyleTransition) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/shadowintensity(_:)-49wo2","title":"func shadowIntensity(Double) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/shadowintensity(_:)-5cczi","title":"func shadowIntensity(Exp) -> DirectionalLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/shadowintensitytransition(_:)","title":"func shadowIntensityTransition(StyleTransition) -> DirectionalLight","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/directionallight\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/directionallight\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/directionallight\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/directionallight\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/directionallight\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/directionallight","title":"DirectionalLight","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/flatlight\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/anchor","title":"var anchor: Value<Anchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/intensity","title":"var intensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/intensitytransition","title":"var intensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/position","title":"var position: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/positiontransition","title":"var positionTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/flatlight\/type","title":"let type: LightType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/anchor(_:)-7uvxe","title":"func anchor(Exp) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/anchor(_:)-979rh","title":"func anchor(Anchor) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/color(_:)-7sauk","title":"func color(StyleColor) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/color(_:)-8eoma","title":"func color(Exp) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/color(_:)-e0fk","title":"func color(UIColor) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/colortransition(_:)","title":"func colorTransition(StyleTransition) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/intensity(_:)-2xi0w","title":"func intensity(Exp) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/intensity(_:)-6e5ko","title":"func intensity(Double) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/intensitytransition(_:)","title":"func intensityTransition(StyleTransition) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/position(_:)","title":"func position(Exp) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/position(radial:azimuthal:polar:)","title":"func position(radial: Double, azimuthal: Double, polar: Double) -> FlatLight","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/positiontransition(_:)","title":"func positionTransition(StyleTransition) -> FlatLight","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/flatlight\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flatlight\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/flatlight\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/flatlight\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/flatlight","title":"FlatLight","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolor","title":"var highColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolortransition","title":"var highColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/horizonblend","title":"var horizonBlend: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/horizonblendtransition","title":"var horizonBlendTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/range","title":"var range: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/rangetransition","title":"var rangeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolor","title":"var spaceColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolortransition","title":"var spaceColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/starintensity","title":"var starIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/starintensitytransition","title":"var starIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/verticalrange","title":"var verticalRange: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/verticalrangetransition","title":"var verticalRangeTransition: StyleTransition?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/color(_:)-1qa36","title":"func color(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/color(_:)-3ld1r","title":"func color(StyleColor) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/color(_:)-8cl7r","title":"func color(UIColor) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/colortransition(_:)","title":"func colorTransition(StyleTransition) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/colorusetheme(_:)-9tek9","title":"func colorUseTheme(ColorUseTheme) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/colorusetheme(_:)-qmrb","title":"func colorUseTheme(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolor(_:)-8nfuh","title":"func highColor(UIColor) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolor(_:)-9bc7k","title":"func highColor(StyleColor) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolor(_:)-9pv24","title":"func highColor(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolortransition(_:)","title":"func highColorTransition(StyleTransition) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolorusetheme(_:)-43dxx","title":"func highColorUseTheme(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/highcolorusetheme(_:)-4a2z1","title":"func highColorUseTheme(ColorUseTheme) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/horizonblend(_:)-6lqss","title":"func horizonBlend(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/horizonblend(_:)-9xlno","title":"func horizonBlend(Double) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/horizonblendtransition(_:)","title":"func horizonBlendTransition(StyleTransition) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/range(_:)","title":"func range(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/range(start:end:)","title":"func range(start: Double, end: Double) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/rangetransition(_:)","title":"func rangeTransition(StyleTransition) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolor(_:)-280u5","title":"func spaceColor(UIColor) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolor(_:)-5gqil","title":"func spaceColor(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolor(_:)-ct4q","title":"func spaceColor(StyleColor) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolortransition(_:)","title":"func spaceColorTransition(StyleTransition) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolorusetheme(_:)-791o4","title":"func spaceColorUseTheme(ColorUseTheme) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/spacecolorusetheme(_:)-7sgok","title":"func spaceColorUseTheme(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/starintensity(_:)-3a18i","title":"func starIntensity(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/starintensity(_:)-8b6u6","title":"func starIntensity(Double) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/starintensitytransition(_:)","title":"func starIntensityTransition(StyleTransition) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/verticalrange(_:)","title":"func verticalRange(Exp) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/verticalrange(start:end:)","title":"func verticalRange(start: Double, end: Double) -> Atmosphere","type":"method"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/verticalrangetransition(_:)","title":"func verticalRangeTransition(StyleTransition) -> Atmosphere","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/atmosphere\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/atmosphere\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/atmosphere","title":"Atmosphere","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/terrain\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/terrain\/init(sourceid:)","title":"init(sourceId: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/terrain\/exaggeration","title":"var exaggeration: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/terrain\/exaggerationtransition","title":"var exaggerationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/terrain\/source","title":"var source: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/terrain\/exaggeration(_:)-24idt","title":"func exaggeration(Double) -> Terrain","type":"method"},{"path":"\/documentation\/mapboxmaps\/terrain\/exaggeration(_:)-5j7ja","title":"func exaggeration(Exp) -> Terrain","type":"method"},{"path":"\/documentation\/mapboxmaps\/terrain\/exaggerationtransition(_:)","title":"func exaggerationTransition(StyleTransition) -> Terrain","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/terrain\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/terrain\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/terrain","title":"Terrain","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapboxmaps\/styledecodable\/init(jsonobject:)-3g5t6","title":"init(jsonObject: [String : Any]) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/styledecodable\/init(jsonobject:)-1y83v","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"title":"StyleDecodable Implementations","type":"groupMarker"}],"path":"\/documentation\/mapboxmaps\/styledecodable\/init(jsonobject:)-38s5y","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/styledecodable","title":"StyleDecodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleencodable\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapboxmaps\/styleencodable\/jsonobject()-8gvle","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"title":"StyleEncodable Implementations","type":"groupMarker"}],"path":"\/documentation\/mapboxmaps\/styleencodable\/jsonobject()-4kl0g","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleencodable","title":"StyleEncodable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleerror\/rawvalue-swift.property","title":"var rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/rawvalue-swift.typealias","title":"StyleError.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleerror","title":"StyleError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimage\/init(id:image:sdf:contentinsets:)","title":"init(id: String, image: UIImage, sdf: Bool, contentInsets: UIEdgeInsets)","type":"init"},{"path":"\/documentation\/mapboxmaps\/styleimage\/init(named:sdf:contentinsets:)","title":"init?(named: String, sdf: Bool, contentInsets: UIEdgeInsets)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimage\/contentinsets(_:)","title":"func contentInsets(UIEdgeInsets) -> StyleImage","type":"method"},{"path":"\/documentation\/mapboxmaps\/styleimage\/sdf(_:)","title":"func sdf(Bool) -> StyleImage","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styleimage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleimage","title":"StyleImage","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/message","title":"let message: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/invalidobject","title":"static let invalidObject: TypeConversionError","type":"property"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/unexpectedtype","title":"static let unexpectedType: TypeConversionError","type":"property"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/unsuccessfulconversion","title":"static let unsuccessfulConversion: TypeConversionError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/typeconversionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/typeconversionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/typeconversionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/typeconversionerror","title":"TypeConversionError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lightinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/lightinfo\/init(id:type:)","title":"init(id: String, type: LightType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lightinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/lightinfo\/type","title":"var type: LightType","type":"property"}],"path":"\/documentation\/mapboxmaps\/lightinfo","title":"LightInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/ambient","title":"static let ambient: LightType","type":"property"},{"path":"\/documentation\/mapboxmaps\/lighttype\/directional","title":"static let directional: LightType","type":"property"},{"path":"\/documentation\/mapboxmaps\/lighttype\/flat","title":"static let flat: LightType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/lighttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lighttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/lighttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/lighttype","title":"LightType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/dawn","title":"static let dawn: StandardLightPreset","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/day","title":"static let day: StandardLightPreset","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/dusk","title":"static let dusk: StandardLightPreset","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/night","title":"static let night: StandardLightPreset","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/standardlightpreset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardlightpreset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/standardlightpreset\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/standardlightpreset","title":"StandardLightPreset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/custom","title":"static let custom: StandardTheme","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/default","title":"static let `default`: StandardTheme","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/faded","title":"static let faded: StandardTheme","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/monochrome","title":"static let monochrome: StandardTheme","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/standardtheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardtheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/standardtheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/standardtheme","title":"StandardTheme","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/alegreya","title":"static let alegreya: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/alegreyasc","title":"static let alegreyaSc: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/asap","title":"static let asap: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/barlow","title":"static let barlow: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/dinpro","title":"static let dinPro: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/ebgaramond","title":"static let ebGaramond: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/faustina","title":"static let faustina: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/frankruhllibre","title":"static let frankRuhlLibre: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/heebo","title":"static let heebo: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/inter","title":"static let inter: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/lato","title":"static let lato: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/leaguemono","title":"static let leagueMono: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/manrope","title":"static let manrope: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/montserrat","title":"static let montserrat: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/notosanscjkjp","title":"static let notoSansCjkJp: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/opensans","title":"static let openSans: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/poppins","title":"static let poppins: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/raleway","title":"static let raleway: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/roboto","title":"static let roboto: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/robotomono","title":"static let robotoMono: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/rubik","title":"static let rubik: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/sourcecodepro","title":"static let sourceCodePro: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/sourcesanspro","title":"static let sourceSansPro: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/spectral","title":"static let spectral: StandardFont","type":"property"},{"path":"\/documentation\/mapboxmaps\/standardfont\/ubuntu","title":"static let ubuntu: StandardFont","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/standardfont\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/standardfont\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/mapboxmaps\/standardfont\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/standardfont\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/standardfont\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/standardfont\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/standardfont","title":"StandardFont","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/init(name:)","title":"init(name: StyleProjectionName)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/name","title":"var name: StyleProjectionName","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styleprojection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/styleprojection\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleprojection\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleprojection","title":"StyleProjection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/globe","title":"static let globe: StyleProjectionName","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/mercator","title":"static let mercator: StyleProjectionName","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styleprojectionname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/styleprojectionname\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleprojectionname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styleprojectionname","title":"StyleProjectionName","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cancelerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cancelerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/cancelerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cancelerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cancelerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cancelerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/cancelerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cancelerror","title":"CancelError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/init(duration:delay:enableplacementtransitions:)","title":"init(duration: TimeInterval?, delay: TimeInterval?, enablePlacementTransitions: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/delay","title":"var delay: TimeInterval?","type":"property"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/duration","title":"var duration: TimeInterval?","type":"property"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/enableplacementtransitions","title":"var enablePlacementTransitions: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct","title":"TransitionOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rain\/centerthinning","title":"var centerThinning: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/centerthinningtransition","title":"var centerThinningTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/centerthinningusetheme","title":"var centerThinningUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/colorusetheme","title":"var colorUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/density","title":"var density: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/densitytransition","title":"var densityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/densityusetheme","title":"var densityUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/direction","title":"var direction: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/directiontransition","title":"var directionTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/directionusetheme","title":"var directionUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/distortionstrength","title":"var distortionStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/distortionstrengthtransition","title":"var distortionStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/distortionstrengthusetheme","title":"var distortionStrengthUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/dropletsize","title":"var dropletSize: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/dropletsizetransition","title":"var dropletSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/dropletsizeusetheme","title":"var dropletSizeUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/intensity","title":"var intensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/intensitytransition","title":"var intensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/intensityusetheme","title":"var intensityUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/opacity","title":"var opacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/opacitytransition","title":"var opacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/opacityusetheme","title":"var opacityUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/vignette","title":"var vignette: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/vignettecolor","title":"var vignetteColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/vignettecolortransition","title":"var vignetteColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/vignettecolorusetheme","title":"var vignetteColorUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/vignettetransition","title":"var vignetteTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rain\/vignetteusetheme","title":"var vignetteUseTheme: Value<ColorUseTheme>?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rain\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/rain\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rain\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rain\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rain\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rain","title":"Rain","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snow\/centerthinning","title":"var centerThinning: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/centerthinningtransition","title":"var centerThinningTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/centerthinningusetheme","title":"var centerThinningUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/color","title":"var color: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/colortransition","title":"var colorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/colorusetheme","title":"var colorUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/density","title":"var density: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/densitytransition","title":"var densityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/densityusetheme","title":"var densityUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/direction","title":"var direction: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/directiontransition","title":"var directionTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/directionusetheme","title":"var directionUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/flakesize","title":"var flakeSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/flakesizetransition","title":"var flakeSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/flakesizeusetheme","title":"var flakeSizeUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/intensity","title":"var intensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/intensitytransition","title":"var intensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/intensityusetheme","title":"var intensityUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/opacity","title":"var opacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/opacitytransition","title":"var opacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/opacityusetheme","title":"var opacityUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/vignette","title":"var vignette: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/vignettecolor","title":"var vignetteColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/vignettecolortransition","title":"var vignetteColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/vignettecolorusetheme","title":"var vignetteColorUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/vignettetransition","title":"var vignetteTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/snow\/vignetteusetheme","title":"var vignetteUseTheme: Value<ColorUseTheme>?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snow\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/snow\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/snow\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/snow\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/snow\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/snow","title":"Snow","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/colortheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/colortheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/colortheme","title":"ColorTheme","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/colorusetheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/colorusetheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/colorusetheme\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/colorusetheme\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/colorusetheme\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/colorusetheme\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/colorusetheme\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/colorusetheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/colorusetheme\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/colorusetheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/colorusetheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/colorusetheme","title":"ColorUseTheme","type":"struct"},{"title":"Declarative Map Styling","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapstylecontent\/body-swift.associatedtype","title":"Body","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapstylecontent\/body-swift.property","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapstylecontent","title":"MapStyleContent","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimport\/init(id:json:configuration:)","title":"init(id: String?, json: String, configuration: JSONObject?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/styleimport\/init(id:style:)","title":"init(id: String?, style: MapStyle)","type":"init"},{"path":"\/documentation\/mapboxmaps\/styleimport\/init(id:uri:configuration:)","title":"init(id: String?, uri: StyleURI, configuration: JSONObject?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleimport\/colortheme(_:)","title":"func colorTheme(ColorTheme?) -> StyleImport","type":"method"}],"path":"\/documentation\/mapboxmaps\/styleimport","title":"StyleImport","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/importposition\/above(_:)","title":"case above(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/importposition\/at(_:)","title":"case at(Int)","type":"case"},{"path":"\/documentation\/mapboxmaps\/importposition\/below(_:)","title":"case below(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/importposition\/default","title":"case `default`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/importposition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/importposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/importposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/importposition","title":"ImportPosition","type":"enum"},{"path":"\/documentation\/mapboxmaps\/tuplemapstylecontent","title":"TupleMapStyleContent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/emptymapstylecontent\/init()","title":"init()","type":"init"}],"path":"\/documentation\/mapboxmaps\/emptymapstylecontent","title":"EmptyMapStyleContent","type":"struct"},{"path":"\/documentation\/mapboxmaps\/optionalmapstylecontent","title":"OptionalMapStyleContent","type":"struct"},{"path":"\/documentation\/mapboxmaps\/conditionalmapstylecontent","title":"ConditionalMapStyleContent","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder\/buildblock()","title":"static func buildBlock() -> EmptyMapStyleContent","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder\/buildblock(_:)-3xx36","title":"static func buildBlock<each Content>(repeat each Content) -> TupleMapStyleContent<(repeat each Content)>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder\/buildblock(_:)-6i5pe","title":"static func buildBlock<Content>(Content) -> Content","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder\/buildeither(first:)","title":"static func buildEither<First, Second>(first: First) -> ConditionalMapStyleContent<First, Second>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder\/buildeither(second:)","title":"static func buildEither<First, Second>(second: Second) -> ConditionalMapStyleContent<First, Second>","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder\/buildexpression(_:)","title":"static func buildExpression<Content>(Content) -> Content","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder\/buildoptional(_:)","title":"static func buildOptional<T>(T?) -> OptionalMapStyleContent<T>","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapstylecontentbuilder","title":"MapStyleContentBuilder","type":"struct"}],"path":"\/documentation\/mapboxmaps\/style","title":"Style","type":"symbol"},{"children":[{"title":"Layers","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/type","title":"var type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layer\/visibility","title":"var visibility: Value<Visibility>","type":"property"}],"path":"\/documentation\/mapboxmaps\/layer","title":"Layer","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/layertype","title":"var layerType: (any Layer.Type)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/background","title":"static let background: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/circle","title":"static let circle: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/clip","title":"static let clip: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/custom","title":"static let custom: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/fill","title":"static let fill: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/fillextrusion","title":"static let fillExtrusion: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/heatmap","title":"static let heatmap: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/hillshade","title":"static let hillshade: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/line","title":"static let line: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/locationindicator","title":"static let locationIndicator: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/model","title":"static let model: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/raster","title":"static let raster: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/rasterparticle","title":"static let rasterParticle: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/sky","title":"static let sky: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/slot","title":"static let slot: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/layertype\/symbol","title":"static let symbol: LayerType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/layertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/layertype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/layertype\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layertype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/layertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/layertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/layertype","title":"LayerType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerinfo\/init(id:type:)","title":"init(id: String, type: LayerType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/layerinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/layerinfo\/type","title":"var type: LayerType","type":"property"}],"path":"\/documentation\/mapboxmaps\/layerinfo","title":"LayerInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolor","title":"var backgroundColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolortransition","title":"var backgroundColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundemissivestrength","title":"var backgroundEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundemissivestrengthtransition","title":"var backgroundEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundopacity","title":"var backgroundOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundopacitytransition","title":"var backgroundOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundpattern","title":"var backgroundPattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundpitchalignment","title":"var backgroundPitchAlignment: Value<BackgroundPitchAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolor(_:)-3ixlw","title":"func backgroundColor(StyleColor) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolor(_:)-856k7","title":"func backgroundColor(Exp) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolor(_:)-a56t","title":"func backgroundColor(UIColor) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolortransition(_:)","title":"func backgroundColorTransition(StyleTransition) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolorusetheme(_:)-4jxez","title":"func backgroundColorUseTheme(Exp) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundcolorusetheme(_:)-8ubj6","title":"func backgroundColorUseTheme(ColorUseTheme) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundemissivestrength(_:)-1ct6m","title":"func backgroundEmissiveStrength(Double) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundemissivestrength(_:)-5np2m","title":"func backgroundEmissiveStrength(Exp) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundemissivestrengthtransition(_:)","title":"func backgroundEmissiveStrengthTransition(StyleTransition) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundopacity(_:)-1le9k","title":"func backgroundOpacity(Exp) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundopacity(_:)-7baiu","title":"func backgroundOpacity(Double) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundopacitytransition(_:)","title":"func backgroundOpacityTransition(StyleTransition) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundpattern(_:)-57ur3","title":"func backgroundPattern(String) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundpattern(_:)-5yut3","title":"func backgroundPattern(Exp) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundpitchalignment(_:)-4cpfh","title":"func backgroundPitchAlignment(Exp) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/backgroundpitchalignment(_:)-jdop","title":"func backgroundPitchAlignment(BackgroundPitchAlignment) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/maxzoom(_:)","title":"func maxZoom(Double) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/minzoom(_:)","title":"func minZoom(Double) -> BackgroundLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/slot(_:)","title":"func slot(Slot?) -> BackgroundLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/backgroundlayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/backgroundlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/backgroundlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/backgroundlayer","title":"BackgroundLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleblur","title":"var circleBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleblurtransition","title":"var circleBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolor","title":"var circleColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolortransition","title":"var circleColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleemissivestrength","title":"var circleEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleemissivestrengthtransition","title":"var circleEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleopacity","title":"var circleOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleopacitytransition","title":"var circleOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchalignment","title":"var circlePitchAlignment: Value<CirclePitchAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchscale","title":"var circlePitchScale: Value<CirclePitchScale>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleradius","title":"var circleRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleradiustransition","title":"var circleRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlesortkey","title":"var circleSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolor","title":"var circleStrokeColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolortransition","title":"var circleStrokeColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokeopacity","title":"var circleStrokeOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokeopacitytransition","title":"var circleStrokeOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokewidth","title":"var circleStrokeWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokewidthtransition","title":"var circleStrokeWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslate","title":"var circleTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslateanchor","title":"var circleTranslateAnchor: Value<CircleTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslatetransition","title":"var circleTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleblur(_:)-8d5ib","title":"func circleBlur(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleblur(_:)-97sin","title":"func circleBlur(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleblurtransition(_:)","title":"func circleBlurTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolor(_:)-5utrr","title":"func circleColor(StyleColor) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolor(_:)-8ep9g","title":"func circleColor(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolor(_:)-9sdxa","title":"func circleColor(UIColor) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolortransition(_:)","title":"func circleColorTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolorusetheme(_:)-7hs6z","title":"func circleColorUseTheme(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlecolorusetheme(_:)-9ardm","title":"func circleColorUseTheme(ColorUseTheme) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleemissivestrength(_:)-71pk1","title":"func circleEmissiveStrength(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleemissivestrength(_:)-ewnn","title":"func circleEmissiveStrength(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleemissivestrengthtransition(_:)","title":"func circleEmissiveStrengthTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleopacity(_:)-5a1jb","title":"func circleOpacity(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleopacity(_:)-6mg0m","title":"func circleOpacity(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleopacitytransition(_:)","title":"func circleOpacityTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchalignment(_:)-7785l","title":"func circlePitchAlignment(CirclePitchAlignment) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchalignment(_:)-do7e","title":"func circlePitchAlignment(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchscale(_:)-2wbnm","title":"func circlePitchScale(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlepitchscale(_:)-6f8vn","title":"func circlePitchScale(CirclePitchScale) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleradius(_:)-15fnb","title":"func circleRadius(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleradius(_:)-5hxn3","title":"func circleRadius(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circleradiustransition(_:)","title":"func circleRadiusTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlesortkey(_:)-4ao1f","title":"func circleSortKey(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlesortkey(_:)-6oijo","title":"func circleSortKey(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolor(_:)-1upit","title":"func circleStrokeColor(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolor(_:)-7t7cd","title":"func circleStrokeColor(StyleColor) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolor(_:)-9vn07","title":"func circleStrokeColor(UIColor) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolortransition(_:)","title":"func circleStrokeColorTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolorusetheme(_:)-1l98x","title":"func circleStrokeColorUseTheme(ColorUseTheme) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokecolorusetheme(_:)-4z8yo","title":"func circleStrokeColorUseTheme(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokeopacity(_:)-1ylxi","title":"func circleStrokeOpacity(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokeopacity(_:)-3j29d","title":"func circleStrokeOpacity(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokeopacitytransition(_:)","title":"func circleStrokeOpacityTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokewidth(_:)-1ly22","title":"func circleStrokeWidth(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokewidth(_:)-3kaep","title":"func circleStrokeWidth(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circlestrokewidthtransition(_:)","title":"func circleStrokeWidthTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslate(_:)","title":"func circleTranslate(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslate(x:y:)","title":"func circleTranslate(x: Double, y: Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslateanchor(_:)-1qqc5","title":"func circleTranslateAnchor(CircleTranslateAnchor) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslateanchor(_:)-2yvxx","title":"func circleTranslateAnchor(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/circletranslatetransition(_:)","title":"func circleTranslateTransition(StyleTransition) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/filter(_:)","title":"func filter(Exp) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/maxzoom(_:)","title":"func maxZoom(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/minzoom(_:)","title":"func minZoom(Double) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/slot(_:)","title":"func slot(Slot?) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/source(_:)","title":"func source(String) -> CircleLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> CircleLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circlelayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/circlelayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlelayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/circlelayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circlelayer","title":"CircleLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundattenuation","title":"var fillExtrusionAmbientOcclusionGroundAttenuation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundattenuationtransition","title":"var fillExtrusionAmbientOcclusionGroundAttenuationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundradius","title":"var fillExtrusionAmbientOcclusionGroundRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundradiustransition","title":"var fillExtrusionAmbientOcclusionGroundRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionintensity","title":"var fillExtrusionAmbientOcclusionIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionintensitytransition","title":"var fillExtrusionAmbientOcclusionIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionradius","title":"var fillExtrusionAmbientOcclusionRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionradiustransition","title":"var fillExtrusionAmbientOcclusionRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionwallradius","title":"var fillExtrusionAmbientOcclusionWallRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionwallradiustransition","title":"var fillExtrusionAmbientOcclusionWallRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbase","title":"var fillExtrusionBase: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbasealignment","title":"var fillExtrusionBaseAlignment: Value<FillExtrusionBaseAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbasetransition","title":"var fillExtrusionBaseTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolor","title":"var fillExtrusionColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolortransition","title":"var fillExtrusionColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncutofffaderange","title":"var fillExtrusionCutoffFadeRange: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionedgeradius","title":"var fillExtrusionEdgeRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionemissivestrength","title":"var fillExtrusionEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionemissivestrengthtransition","title":"var fillExtrusionEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolor","title":"var fillExtrusionFloodLightColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolortransition","title":"var fillExtrusionFloodLightColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundattenuation","title":"var fillExtrusionFloodLightGroundAttenuation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundattenuationtransition","title":"var fillExtrusionFloodLightGroundAttenuationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundradius","title":"var fillExtrusionFloodLightGroundRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundradiustransition","title":"var fillExtrusionFloodLightGroundRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightintensity","title":"var fillExtrusionFloodLightIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightintensitytransition","title":"var fillExtrusionFloodLightIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightwallradius","title":"var fillExtrusionFloodLightWallRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightwallradiustransition","title":"var fillExtrusionFloodLightWallRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheight","title":"var fillExtrusionHeight: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheightalignment","title":"var fillExtrusionHeightAlignment: Value<FillExtrusionHeightAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheighttransition","title":"var fillExtrusionHeightTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionlinewidth","title":"var fillExtrusionLineWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionlinewidthtransition","title":"var fillExtrusionLineWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionopacity","title":"var fillExtrusionOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionopacitytransition","title":"var fillExtrusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionpattern","title":"var fillExtrusionPattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionroundedroof","title":"var fillExtrusionRoundedRoof: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslate","title":"var fillExtrusionTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslateanchor","title":"var fillExtrusionTranslateAnchor: Value<FillExtrusionTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslatetransition","title":"var fillExtrusionTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalgradient","title":"var fillExtrusionVerticalGradient: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalscale","title":"var fillExtrusionVerticalScale: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalscaletransition","title":"var fillExtrusionVerticalScaleTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundattenuation(_:)-2fcsi","title":"func fillExtrusionAmbientOcclusionGroundAttenuation(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundattenuation(_:)-9sy5a","title":"func fillExtrusionAmbientOcclusionGroundAttenuation(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundattenuationtransition(_:)","title":"func fillExtrusionAmbientOcclusionGroundAttenuationTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundradius(_:)-64owz","title":"func fillExtrusionAmbientOcclusionGroundRadius(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundradius(_:)-6pxae","title":"func fillExtrusionAmbientOcclusionGroundRadius(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusiongroundradiustransition(_:)","title":"func fillExtrusionAmbientOcclusionGroundRadiusTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionintensity(_:)-9abs8","title":"func fillExtrusionAmbientOcclusionIntensity(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionintensity(_:)-g035","title":"func fillExtrusionAmbientOcclusionIntensity(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionintensitytransition(_:)","title":"func fillExtrusionAmbientOcclusionIntensityTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionradius(_:)-3al2l","title":"func fillExtrusionAmbientOcclusionRadius(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionradius(_:)-41b5f","title":"func fillExtrusionAmbientOcclusionRadius(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionradiustransition(_:)","title":"func fillExtrusionAmbientOcclusionRadiusTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionwallradius(_:)-17lz9","title":"func fillExtrusionAmbientOcclusionWallRadius(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionwallradius(_:)-9hb01","title":"func fillExtrusionAmbientOcclusionWallRadius(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionambientocclusionwallradiustransition(_:)","title":"func fillExtrusionAmbientOcclusionWallRadiusTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbase(_:)-4fe1k","title":"func fillExtrusionBase(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbase(_:)-9nu9s","title":"func fillExtrusionBase(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbasealignment(_:)-1aaau","title":"func fillExtrusionBaseAlignment(FillExtrusionBaseAlignment) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbasealignment(_:)-1kj76","title":"func fillExtrusionBaseAlignment(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionbasetransition(_:)","title":"func fillExtrusionBaseTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolor(_:)-2d38o","title":"func fillExtrusionColor(StyleColor) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolor(_:)-5cb6r","title":"func fillExtrusionColor(UIColor) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolor(_:)-99fgy","title":"func fillExtrusionColor(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolortransition(_:)","title":"func fillExtrusionColorTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolorusetheme(_:)-7j7hj","title":"func fillExtrusionColorUseTheme(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncolorusetheme(_:)-8x88r","title":"func fillExtrusionColorUseTheme(ColorUseTheme) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncutofffaderange(_:)-2kfwa","title":"func fillExtrusionCutoffFadeRange(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusioncutofffaderange(_:)-3skbq","title":"func fillExtrusionCutoffFadeRange(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionedgeradius(_:)-2a5je","title":"func fillExtrusionEdgeRadius(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionedgeradius(_:)-4yru","title":"func fillExtrusionEdgeRadius(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionemissivestrength(_:)-22pzi","title":"func fillExtrusionEmissiveStrength(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionemissivestrength(_:)-3tnkg","title":"func fillExtrusionEmissiveStrength(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionemissivestrengthtransition(_:)","title":"func fillExtrusionEmissiveStrengthTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolor(_:)-2cxgm","title":"func fillExtrusionFloodLightColor(StyleColor) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolor(_:)-2o8q7","title":"func fillExtrusionFloodLightColor(UIColor) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolor(_:)-9ot1g","title":"func fillExtrusionFloodLightColor(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolortransition(_:)","title":"func fillExtrusionFloodLightColorTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolorusetheme(_:)-5zweg","title":"func fillExtrusionFloodLightColorUseTheme(ColorUseTheme) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightcolorusetheme(_:)-75jgi","title":"func fillExtrusionFloodLightColorUseTheme(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundattenuation(_:)-18ke8","title":"func fillExtrusionFloodLightGroundAttenuation(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundattenuation(_:)-1tstu","title":"func fillExtrusionFloodLightGroundAttenuation(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundattenuationtransition(_:)","title":"func fillExtrusionFloodLightGroundAttenuationTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundradius(_:)-3hnbz","title":"func fillExtrusionFloodLightGroundRadius(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundradius(_:)-7rh5y","title":"func fillExtrusionFloodLightGroundRadius(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightgroundradiustransition(_:)","title":"func fillExtrusionFloodLightGroundRadiusTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightintensity(_:)-40eoc","title":"func fillExtrusionFloodLightIntensity(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightintensity(_:)-5v3md","title":"func fillExtrusionFloodLightIntensity(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightintensitytransition(_:)","title":"func fillExtrusionFloodLightIntensityTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightwallradius(_:)-70gfq","title":"func fillExtrusionFloodLightWallRadius(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightwallradius(_:)-7jk7j","title":"func fillExtrusionFloodLightWallRadius(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionfloodlightwallradiustransition(_:)","title":"func fillExtrusionFloodLightWallRadiusTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheight(_:)-25hwe","title":"func fillExtrusionHeight(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheight(_:)-52oc7","title":"func fillExtrusionHeight(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheightalignment(_:)-5qbfs","title":"func fillExtrusionHeightAlignment(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheightalignment(_:)-8938k","title":"func fillExtrusionHeightAlignment(FillExtrusionHeightAlignment) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionheighttransition(_:)","title":"func fillExtrusionHeightTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionlinewidth(_:)-1nyly","title":"func fillExtrusionLineWidth(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionlinewidth(_:)-1wv84","title":"func fillExtrusionLineWidth(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionlinewidthtransition(_:)","title":"func fillExtrusionLineWidthTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionopacity(_:)-1gj30","title":"func fillExtrusionOpacity(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionopacity(_:)-74hih","title":"func fillExtrusionOpacity(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionopacitytransition(_:)","title":"func fillExtrusionOpacityTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionpattern(_:)-7de3j","title":"func fillExtrusionPattern(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionpattern(_:)-9ushr","title":"func fillExtrusionPattern(String) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionroundedroof(_:)-2b9xl","title":"func fillExtrusionRoundedRoof(Bool) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionroundedroof(_:)-5t6sb","title":"func fillExtrusionRoundedRoof(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslate(_:)","title":"func fillExtrusionTranslate(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslate(x:y:)","title":"func fillExtrusionTranslate(x: Double, y: Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslateanchor(_:)-173fo","title":"func fillExtrusionTranslateAnchor(FillExtrusionTranslateAnchor) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslateanchor(_:)-3dkuy","title":"func fillExtrusionTranslateAnchor(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusiontranslatetransition(_:)","title":"func fillExtrusionTranslateTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalgradient(_:)-1zjwd","title":"func fillExtrusionVerticalGradient(Bool) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalgradient(_:)-5jnkv","title":"func fillExtrusionVerticalGradient(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalscale(_:)-4521k","title":"func fillExtrusionVerticalScale(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalscale(_:)-4wa18","title":"func fillExtrusionVerticalScale(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/fillextrusionverticalscaletransition(_:)","title":"func fillExtrusionVerticalScaleTransition(StyleTransition) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/filter(_:)","title":"func filter(Exp) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/maxzoom(_:)","title":"func maxZoom(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/minzoom(_:)","title":"func minZoom(Double) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/slot(_:)","title":"func slot(Slot?) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/source(_:)","title":"func source(String) -> FillExtrusionLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> FillExtrusionLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/fillextrusionlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/fillextrusionlayer","title":"FillExtrusionLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/filllayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillantialias","title":"var fillAntialias: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolor","title":"var fillColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolortransition","title":"var fillColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillelevationreference","title":"var fillElevationReference: Value<FillElevationReference>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillemissivestrength","title":"var fillEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillemissivestrengthtransition","title":"var fillEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillopacity","title":"var fillOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillopacitytransition","title":"var fillOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolor","title":"var fillOutlineColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolortransition","title":"var fillOutlineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillpattern","title":"var fillPattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillsortkey","title":"var fillSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslate","title":"var fillTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslateanchor","title":"var fillTranslateAnchor: Value<FillTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslatetransition","title":"var fillTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillzoffset","title":"var fillZOffset: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillzoffsettransition","title":"var fillZOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/filllayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillantialias(_:)-3db67","title":"func fillAntialias(Bool) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillantialias(_:)-3elua","title":"func fillAntialias(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolor(_:)-2r3q3","title":"func fillColor(UIColor) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolor(_:)-5lad3","title":"func fillColor(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolor(_:)-7zi21","title":"func fillColor(StyleColor) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolortransition(_:)","title":"func fillColorTransition(StyleTransition) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolorusetheme(_:)-5mvgt","title":"func fillColorUseTheme(ColorUseTheme) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillcolorusetheme(_:)-6dh8c","title":"func fillColorUseTheme(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillelevationreference(_:)-6a9p8","title":"func fillElevationReference(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillelevationreference(_:)-6lifl","title":"func fillElevationReference(FillElevationReference) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillemissivestrength(_:)-1rtbb","title":"func fillEmissiveStrength(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillemissivestrength(_:)-71120","title":"func fillEmissiveStrength(Double) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillemissivestrengthtransition(_:)","title":"func fillEmissiveStrengthTransition(StyleTransition) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillopacity(_:)-1hs70","title":"func fillOpacity(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillopacity(_:)-8tc7v","title":"func fillOpacity(Double) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillopacitytransition(_:)","title":"func fillOpacityTransition(StyleTransition) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolor(_:)-1wps3","title":"func fillOutlineColor(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolor(_:)-7380x","title":"func fillOutlineColor(UIColor) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolor(_:)-8exqq","title":"func fillOutlineColor(StyleColor) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolortransition(_:)","title":"func fillOutlineColorTransition(StyleTransition) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolorusetheme(_:)-8cuqs","title":"func fillOutlineColorUseTheme(ColorUseTheme) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filloutlinecolorusetheme(_:)-mkq5","title":"func fillOutlineColorUseTheme(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillpattern(_:)-2dawb","title":"func fillPattern(String) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillpattern(_:)-304lg","title":"func fillPattern(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillsortkey(_:)-43b3h","title":"func fillSortKey(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillsortkey(_:)-4xc7r","title":"func fillSortKey(Double) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslate(_:)","title":"func fillTranslate(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslate(x:y:)","title":"func fillTranslate(x: Double, y: Double) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslateanchor(_:)-22fk8","title":"func fillTranslateAnchor(FillTranslateAnchor) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslateanchor(_:)-7fw95","title":"func fillTranslateAnchor(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filltranslatetransition(_:)","title":"func fillTranslateTransition(StyleTransition) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillzoffset(_:)-4qd64","title":"func fillZOffset(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillzoffset(_:)-7c075","title":"func fillZOffset(Double) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/fillzoffsettransition(_:)","title":"func fillZOffsetTransition(StyleTransition) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/filter(_:)","title":"func filter(Exp) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/maxzoom(_:)","title":"func maxZoom(Double) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/minzoom(_:)","title":"func minZoom(Double) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/slot(_:)","title":"func slot(Slot?) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/source(_:)","title":"func source(String) -> FillLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> FillLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/filllayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/filllayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filllayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/filllayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/filllayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/filllayer","title":"FillLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapcolor","title":"var heatmapColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapintensity","title":"var heatmapIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapintensitytransition","title":"var heatmapIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapopacity","title":"var heatmapOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapopacitytransition","title":"var heatmapOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapradius","title":"var heatmapRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapradiustransition","title":"var heatmapRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapweight","title":"var heatmapWeight: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/filter(_:)","title":"func filter(Exp) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapcolor(_:)-2l9xn","title":"func heatmapColor(StyleColor) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapcolor(_:)-9xgym","title":"func heatmapColor(Exp) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapcolor(_:)-vh6b","title":"func heatmapColor(UIColor) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapcolorusetheme(_:)-5p75r","title":"func heatmapColorUseTheme(Exp) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapcolorusetheme(_:)-770hi","title":"func heatmapColorUseTheme(ColorUseTheme) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapintensity(_:)-3q4gs","title":"func heatmapIntensity(Double) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapintensity(_:)-8nqpc","title":"func heatmapIntensity(Exp) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapintensitytransition(_:)","title":"func heatmapIntensityTransition(StyleTransition) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapopacity(_:)-34y65","title":"func heatmapOpacity(Double) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapopacity(_:)-7mlaj","title":"func heatmapOpacity(Exp) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapopacitytransition(_:)","title":"func heatmapOpacityTransition(StyleTransition) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapradius(_:)-1jo2n","title":"func heatmapRadius(Double) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapradius(_:)-5kvbp","title":"func heatmapRadius(Exp) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapradiustransition(_:)","title":"func heatmapRadiusTransition(StyleTransition) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapweight(_:)-9rlcb","title":"func heatmapWeight(Double) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/heatmapweight(_:)-gan","title":"func heatmapWeight(Exp) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/maxzoom(_:)","title":"func maxZoom(Double) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/minzoom(_:)","title":"func minZoom(Double) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/slot(_:)","title":"func slot(Slot?) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/source(_:)","title":"func source(String) -> HeatmapLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> HeatmapLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/heatmaplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/heatmaplayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/heatmaplayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/heatmaplayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/heatmaplayer","title":"HeatmapLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolor","title":"var hillshadeAccentColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolortransition","title":"var hillshadeAccentColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeemissivestrength","title":"var hillshadeEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeemissivestrengthtransition","title":"var hillshadeEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeexaggeration","title":"var hillshadeExaggeration: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeexaggerationtransition","title":"var hillshadeExaggerationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolor","title":"var hillshadeHighlightColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolortransition","title":"var hillshadeHighlightColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationanchor","title":"var hillshadeIlluminationAnchor: Value<HillshadeIlluminationAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationdirection","title":"var hillshadeIlluminationDirection: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolor","title":"var hillshadeShadowColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolortransition","title":"var hillshadeShadowColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/filter(_:)","title":"func filter(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolor(_:)-2b6md","title":"func hillshadeAccentColor(StyleColor) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolor(_:)-58mi5","title":"func hillshadeAccentColor(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolor(_:)-6c9l9","title":"func hillshadeAccentColor(UIColor) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolortransition(_:)","title":"func hillshadeAccentColorTransition(StyleTransition) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolorusetheme(_:)-5sut","title":"func hillshadeAccentColorUseTheme(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeaccentcolorusetheme(_:)-6h2vo","title":"func hillshadeAccentColorUseTheme(ColorUseTheme) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeemissivestrength(_:)-40tmf","title":"func hillshadeEmissiveStrength(Double) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeemissivestrength(_:)-8nh0q","title":"func hillshadeEmissiveStrength(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeemissivestrengthtransition(_:)","title":"func hillshadeEmissiveStrengthTransition(StyleTransition) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeexaggeration(_:)-274oz","title":"func hillshadeExaggeration(Double) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeexaggeration(_:)-90tin","title":"func hillshadeExaggeration(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeexaggerationtransition(_:)","title":"func hillshadeExaggerationTransition(StyleTransition) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolor(_:)-1iz83","title":"func hillshadeHighlightColor(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolor(_:)-6xzvs","title":"func hillshadeHighlightColor(UIColor) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolor(_:)-84cah","title":"func hillshadeHighlightColor(StyleColor) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolortransition(_:)","title":"func hillshadeHighlightColorTransition(StyleTransition) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolorusetheme(_:)-3u4o6","title":"func hillshadeHighlightColorUseTheme(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadehighlightcolorusetheme(_:)-8yp16","title":"func hillshadeHighlightColorUseTheme(ColorUseTheme) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationanchor(_:)-1z89n","title":"func hillshadeIlluminationAnchor(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationanchor(_:)-42w4u","title":"func hillshadeIlluminationAnchor(HillshadeIlluminationAnchor) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationdirection(_:)-5t2mg","title":"func hillshadeIlluminationDirection(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeilluminationdirection(_:)-mdve","title":"func hillshadeIlluminationDirection(Double) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolor(_:)-1han1","title":"func hillshadeShadowColor(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolor(_:)-1jg80","title":"func hillshadeShadowColor(StyleColor) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolor(_:)-8wrgz","title":"func hillshadeShadowColor(UIColor) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolortransition(_:)","title":"func hillshadeShadowColorTransition(StyleTransition) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolorusetheme(_:)-5xagu","title":"func hillshadeShadowColorUseTheme(Exp) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/hillshadeshadowcolorusetheme(_:)-81qir","title":"func hillshadeShadowColorUseTheme(ColorUseTheme) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/maxzoom(_:)","title":"func maxZoom(Double) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/minzoom(_:)","title":"func minZoom(Double) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/slot(_:)","title":"func slot(Slot?) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/source(_:)","title":"func source(String) -> HillshadeLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> HillshadeLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/hillshadelayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/hillshadelayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadelayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/hillshadelayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/hillshadelayer","title":"HillshadeLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/linelayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineblur","title":"var lineBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineblurtransition","title":"var lineBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolor","title":"var lineBorderColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolortransition","title":"var lineBorderColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineborderwidth","title":"var lineBorderWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineborderwidthtransition","title":"var lineBorderWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecap","title":"var lineCap: Value<LineCap>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolor","title":"var lineColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolortransition","title":"var lineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecrossslope","title":"var lineCrossSlope: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedasharray","title":"var lineDasharray: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedepthocclusionfactor","title":"var lineDepthOcclusionFactor: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedepthocclusionfactortransition","title":"var lineDepthOcclusionFactorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineelevationreference","title":"var lineElevationReference: Value<LineElevationReference>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineemissivestrength","title":"var lineEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineemissivestrengthtransition","title":"var lineEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegapwidth","title":"var lineGapWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegapwidthtransition","title":"var lineGapWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegradient","title":"var lineGradient: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linejoin","title":"var lineJoin: Value<LineJoin>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linemiterlimit","title":"var lineMiterLimit: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineocclusionopacity","title":"var lineOcclusionOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineocclusionopacitytransition","title":"var lineOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineoffset","title":"var lineOffset: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineoffsettransition","title":"var lineOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineopacity","title":"var lineOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineopacitytransition","title":"var lineOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linepattern","title":"var linePattern: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineroundlimit","title":"var lineRoundLimit: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linesortkey","title":"var lineSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslate","title":"var lineTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslateanchor","title":"var lineTranslateAnchor: Value<LineTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslatetransition","title":"var lineTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolor","title":"var lineTrimColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolortransition","title":"var lineTrimColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimfaderange","title":"var lineTrimFadeRange: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimoffset","title":"var lineTrimOffset: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidth","title":"var lineWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidthtransition","title":"var lineWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidthunit","title":"var lineWidthUnit: Value<LineWidthUnit>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linezoffset","title":"var lineZOffset: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/linelayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/filter(_:)","title":"func filter(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineblur(_:)-1ucxq","title":"func lineBlur(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineblur(_:)-3g0c5","title":"func lineBlur(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineblurtransition(_:)","title":"func lineBlurTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolor(_:)-1v2v4","title":"func lineBorderColor(UIColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolor(_:)-3q6ah","title":"func lineBorderColor(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolor(_:)-7080j","title":"func lineBorderColor(StyleColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolortransition(_:)","title":"func lineBorderColorTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolorusetheme(_:)-1ae97","title":"func lineBorderColorUseTheme(ColorUseTheme) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linebordercolorusetheme(_:)-3jlqa","title":"func lineBorderColorUseTheme(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineborderwidth(_:)-222au","title":"func lineBorderWidth(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineborderwidth(_:)-7b3tu","title":"func lineBorderWidth(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineborderwidthtransition(_:)","title":"func lineBorderWidthTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecap(_:)-1wxe1","title":"func lineCap(LineCap) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecap(_:)-9tjs8","title":"func lineCap(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolor(_:)-32gap","title":"func lineColor(StyleColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolor(_:)-4x9kk","title":"func lineColor(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolor(_:)-aqjl","title":"func lineColor(UIColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolortransition(_:)","title":"func lineColorTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolorusetheme(_:)-4jbjf","title":"func lineColorUseTheme(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecolorusetheme(_:)-58mkk","title":"func lineColorUseTheme(ColorUseTheme) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecrossslope(_:)-6isf9","title":"func lineCrossSlope(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linecrossslope(_:)-8z6df","title":"func lineCrossSlope(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedasharray(_:)-16zv4","title":"func lineDashArray([Double]) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedasharray(_:)-7q5hk","title":"func lineDashArray(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedepthocclusionfactor(_:)-44q3b","title":"func lineDepthOcclusionFactor(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedepthocclusionfactor(_:)-dtr6","title":"func lineDepthOcclusionFactor(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linedepthocclusionfactortransition(_:)","title":"func lineDepthOcclusionFactorTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineelevationreference(_:)-65fls","title":"func lineElevationReference(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineelevationreference(_:)-8n0kv","title":"func lineElevationReference(LineElevationReference) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineemissivestrength(_:)-29qvf","title":"func lineEmissiveStrength(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineemissivestrength(_:)-6vx2v","title":"func lineEmissiveStrength(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineemissivestrengthtransition(_:)","title":"func lineEmissiveStrengthTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegapwidth(_:)-4w7qq","title":"func lineGapWidth(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegapwidth(_:)-9hwiv","title":"func lineGapWidth(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegapwidthtransition(_:)","title":"func lineGapWidthTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegradient(_:)-2805u","title":"func lineGradient(UIColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegradient(_:)-6fzih","title":"func lineGradient(StyleColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegradient(_:)-8649p","title":"func lineGradient(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegradientusetheme(_:)-3za5s","title":"func lineGradientUseTheme(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linegradientusetheme(_:)-44dhl","title":"func lineGradientUseTheme(ColorUseTheme) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linejoin(_:)-2d2pg","title":"func lineJoin(LineJoin) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linejoin(_:)-7w9f2","title":"func lineJoin(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linemiterlimit(_:)-4dkr8","title":"func lineMiterLimit(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linemiterlimit(_:)-8dhdd","title":"func lineMiterLimit(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineocclusionopacity(_:)-5kk0i","title":"func lineOcclusionOpacity(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineocclusionopacity(_:)-9rmub","title":"func lineOcclusionOpacity(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineocclusionopacitytransition(_:)","title":"func lineOcclusionOpacityTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineoffset(_:)-10xys","title":"func lineOffset(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineoffset(_:)-2edrx","title":"func lineOffset(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineoffsettransition(_:)","title":"func lineOffsetTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineopacity(_:)-9glf2","title":"func lineOpacity(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineopacity(_:)-9u39y","title":"func lineOpacity(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineopacitytransition(_:)","title":"func lineOpacityTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linepattern(_:)-8aha8","title":"func linePattern(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linepattern(_:)-912nc","title":"func linePattern(String) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineroundlimit(_:)-3sw8z","title":"func lineRoundLimit(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/lineroundlimit(_:)-660ki","title":"func lineRoundLimit(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linesortkey(_:)-2jzlw","title":"func lineSortKey(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linesortkey(_:)-4lc76","title":"func lineSortKey(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslate(_:)","title":"func lineTranslate(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslate(x:y:)","title":"func lineTranslate(x: Double, y: Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslateanchor(_:)-1rzm2","title":"func lineTranslateAnchor(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslateanchor(_:)-s4xx","title":"func lineTranslateAnchor(LineTranslateAnchor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetranslatetransition(_:)","title":"func lineTranslateTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolor(_:)-5oxfq","title":"func lineTrimColor(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolor(_:)-8xmb0","title":"func lineTrimColor(StyleColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolor(_:)-i8ie","title":"func lineTrimColor(UIColor) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolortransition(_:)","title":"func lineTrimColorTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolorusetheme(_:)-61e3c","title":"func lineTrimColorUseTheme(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimcolorusetheme(_:)-96cl1","title":"func lineTrimColorUseTheme(ColorUseTheme) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimfaderange(_:)","title":"func lineTrimFadeRange(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimfaderange(start:end:)","title":"func lineTrimFadeRange(start: Double, end: Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimoffset(_:)","title":"func lineTrimOffset(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linetrimoffset(start:end:)","title":"func lineTrimOffset(start: Double, end: Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidth(_:)-1rhgp","title":"func lineWidth(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidth(_:)-8m8vo","title":"func lineWidth(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidthtransition(_:)","title":"func lineWidthTransition(StyleTransition) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidthunit(_:)-6ojsp","title":"func lineWidthUnit(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linewidthunit(_:)-8os1l","title":"func lineWidthUnit(LineWidthUnit) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linezoffset(_:)-7lrse","title":"func lineZOffset(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/linezoffset(_:)-8ghhe","title":"func lineZOffset(Exp) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/maxzoom(_:)","title":"func maxZoom(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/minzoom(_:)","title":"func minZoom(Double) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/slot(_:)","title":"func slot(Slot?) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/source(_:)","title":"func source(String) -> LineLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> LineLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linelayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/linelayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linelayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/linelayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/linelayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linelayer","title":"LineLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradius","title":"var accuracyRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolor","title":"var accuracyRadiusBorderColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolortransition","title":"var accuracyRadiusBorderColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolor","title":"var accuracyRadiusColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolortransition","title":"var accuracyRadiusColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiustransition","title":"var accuracyRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearing","title":"var bearing: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimage","title":"var bearingImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimagesize","title":"var bearingImageSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimagesizetransition","title":"var bearingImageSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingtransition","title":"var bearingTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolor","title":"var emphasisCircleColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolortransition","title":"var emphasisCircleColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleglowrange","title":"var emphasisCircleGlowRange: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleglowrangetransition","title":"var emphasisCircleGlowRangeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleradius","title":"var emphasisCircleRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleradiustransition","title":"var emphasisCircleRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/imagepitchdisplacement","title":"var imagePitchDisplacement: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/location","title":"var location: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationindicatoropacity","title":"var locationIndicatorOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationindicatoropacitytransition","title":"var locationIndicatorOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationtransition","title":"var locationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/perspectivecompensation","title":"var perspectiveCompensation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimage","title":"var shadowImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimagesize","title":"var shadowImageSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimagesizetransition","title":"var shadowImageSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimage","title":"var topImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimagesize","title":"var topImageSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimagesizetransition","title":"var topImageSizeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradius(_:)-5vs7s","title":"func accuracyRadius(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradius(_:)-9ajge","title":"func accuracyRadius(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolor(_:)-3rnc0","title":"func accuracyRadiusBorderColor(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolor(_:)-7n5k2","title":"func accuracyRadiusBorderColor(UIColor) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolor(_:)-tdur","title":"func accuracyRadiusBorderColor(StyleColor) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolortransition(_:)","title":"func accuracyRadiusBorderColorTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolorusetheme(_:)-2nw7d","title":"func accuracyRadiusBorderColorUseTheme(ColorUseTheme) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiusbordercolorusetheme(_:)-6292j","title":"func accuracyRadiusBorderColorUseTheme(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolor(_:)-3j4vz","title":"func accuracyRadiusColor(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolor(_:)-4s5gt","title":"func accuracyRadiusColor(UIColor) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolor(_:)-8mxc8","title":"func accuracyRadiusColor(StyleColor) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolortransition(_:)","title":"func accuracyRadiusColorTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolorusetheme(_:)-21ek7","title":"func accuracyRadiusColorUseTheme(ColorUseTheme) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiuscolorusetheme(_:)-8385w","title":"func accuracyRadiusColorUseTheme(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/accuracyradiustransition(_:)","title":"func accuracyRadiusTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearing(_:)-2570w","title":"func bearing(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearing(_:)-4umux","title":"func bearing(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimage(_:)-4s2z6","title":"func bearingImage(String) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimage(_:)-qzqh","title":"func bearingImage(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimagesize(_:)-5g58b","title":"func bearingImageSize(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimagesize(_:)-7zmop","title":"func bearingImageSize(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingimagesizetransition(_:)","title":"func bearingImageSizeTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/bearingtransition(_:)","title":"func bearingTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolor(_:)-303n8","title":"func emphasisCircleColor(StyleColor) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolor(_:)-67o02","title":"func emphasisCircleColor(UIColor) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolor(_:)-9hzx5","title":"func emphasisCircleColor(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolortransition(_:)","title":"func emphasisCircleColorTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolorusetheme(_:)-1zv8w","title":"func emphasisCircleColorUseTheme(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscirclecolorusetheme(_:)-6f16o","title":"func emphasisCircleColorUseTheme(ColorUseTheme) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleglowrange(_:)","title":"func emphasisCircleGlowRange(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleglowrange(solidstart:transparentend:)","title":"func emphasisCircleGlowRange(solidStart: Double, transparentEnd: Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleglowrangetransition(_:)","title":"func emphasisCircleGlowRangeTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleradius(_:)-6dnh8","title":"func emphasisCircleRadius(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleradius(_:)-9o3nx","title":"func emphasisCircleRadius(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/emphasiscircleradiustransition(_:)","title":"func emphasisCircleRadiusTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/imagepitchdisplacement(_:)-2flma","title":"func imagePitchDisplacement(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/imagepitchdisplacement(_:)-6f8k1","title":"func imagePitchDisplacement(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/location(_:)-6zeqd","title":"func location(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/location(_:)-ilga","title":"func location(CLLocationCoordinate2D) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationindicatoropacity(_:)-3ahnn","title":"func locationIndicatorOpacity(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationindicatoropacity(_:)-91ovl","title":"func locationIndicatorOpacity(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationindicatoropacitytransition(_:)","title":"func locationIndicatorOpacityTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/locationtransition(_:)","title":"func locationTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/maxzoom(_:)","title":"func maxZoom(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/minzoom(_:)","title":"func minZoom(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/perspectivecompensation(_:)-53x01","title":"func perspectiveCompensation(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/perspectivecompensation(_:)-8sbwl","title":"func perspectiveCompensation(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimage(_:)-4s9zr","title":"func shadowImage(String) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimage(_:)-7qzd3","title":"func shadowImage(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimagesize(_:)-2nxf1","title":"func shadowImageSize(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimagesize(_:)-9satg","title":"func shadowImageSize(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/shadowimagesizetransition(_:)","title":"func shadowImageSizeTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/slot(_:)","title":"func slot(Slot?) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimage(_:)-488gl","title":"func topImage(String) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimage(_:)-90po9","title":"func topImage(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimagesize(_:)-37svb","title":"func topImageSize(Double) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimagesize(_:)-48t9w","title":"func topImageSize(Exp) -> LocationIndicatorLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/topimagesizetransition(_:)","title":"func topImageSizeTransition(StyleTransition) -> LocationIndicatorLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationindicatorlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/locationindicatorlayer","title":"LocationIndicatorLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterarrayband","title":"var rasterArrayBand: Value<String>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmax","title":"var rasterBrightnessMax: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmaxtransition","title":"var rasterBrightnessMaxTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmin","title":"var rasterBrightnessMin: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmintransition","title":"var rasterBrightnessMinTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolor","title":"var rasterColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolormix","title":"var rasterColorMix: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolormixtransition","title":"var rasterColorMixTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorrange","title":"var rasterColorRange: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorrangetransition","title":"var rasterColorRangeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercontrast","title":"var rasterContrast: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercontrasttransition","title":"var rasterContrastTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterelevation","title":"var rasterElevation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterelevationtransition","title":"var rasterElevationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteremissivestrength","title":"var rasterEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteremissivestrengthtransition","title":"var rasterEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterfadeduration","title":"var rasterFadeDuration: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterhuerotate","title":"var rasterHueRotate: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterhuerotatetransition","title":"var rasterHueRotateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteropacity","title":"var rasterOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteropacitytransition","title":"var rasterOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterresampling","title":"var rasterResampling: Value<RasterResampling>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastersaturation","title":"var rasterSaturation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastersaturationtransition","title":"var rasterSaturationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/filter(_:)","title":"func filter(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/maxzoom(_:)","title":"func maxZoom(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/minzoom(_:)","title":"func minZoom(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterarrayband(_:)-5d892","title":"func rasterArrayBand(String) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterarrayband(_:)-ciiv","title":"func rasterArrayBand(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmax(_:)-2v9zb","title":"func rasterBrightnessMax(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmax(_:)-7phxj","title":"func rasterBrightnessMax(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmaxtransition(_:)","title":"func rasterBrightnessMaxTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmin(_:)-1ntmi","title":"func rasterBrightnessMin(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmin(_:)-1qzxn","title":"func rasterBrightnessMin(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterbrightnessmintransition(_:)","title":"func rasterBrightnessMinTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolor(_:)-3cu9m","title":"func rasterColor(StyleColor) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolor(_:)-4ttlg","title":"func rasterColor(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolor(_:)-5lyte","title":"func rasterColor(UIColor) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolormix(_:)","title":"func rasterColorMix(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolormix(red:green:blue:offset:)","title":"func rasterColorMix(red: Double, green: Double, blue: Double, offset: Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolormixtransition(_:)","title":"func rasterColorMixTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorrange(_:)","title":"func rasterColorRange(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorrange(min:max:)","title":"func rasterColorRange(min: Double, max: Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorrangetransition(_:)","title":"func rasterColorRangeTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorusetheme(_:)-45ehm","title":"func rasterColorUseTheme(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercolorusetheme(_:)-eknm","title":"func rasterColorUseTheme(ColorUseTheme) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercontrast(_:)-4h2ph","title":"func rasterContrast(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercontrast(_:)-897aj","title":"func rasterContrast(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastercontrasttransition(_:)","title":"func rasterContrastTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterelevation(_:)-5fjhl","title":"func rasterElevation(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterelevation(_:)-x7w4","title":"func rasterElevation(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterelevationtransition(_:)","title":"func rasterElevationTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteremissivestrength(_:)-5zfmj","title":"func rasterEmissiveStrength(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteremissivestrength(_:)-7qdvv","title":"func rasterEmissiveStrength(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteremissivestrengthtransition(_:)","title":"func rasterEmissiveStrengthTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterfadeduration(_:)-4bdxn","title":"func rasterFadeDuration(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterfadeduration(_:)-62yu7","title":"func rasterFadeDuration(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterhuerotate(_:)-38hal","title":"func rasterHueRotate(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterhuerotate(_:)-9xrda","title":"func rasterHueRotate(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterhuerotatetransition(_:)","title":"func rasterHueRotateTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteropacity(_:)-5t6pl","title":"func rasterOpacity(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteropacity(_:)-82fjk","title":"func rasterOpacity(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasteropacitytransition(_:)","title":"func rasterOpacityTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterresampling(_:)-5lkpi","title":"func rasterResampling(RasterResampling) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rasterresampling(_:)-9jgfo","title":"func rasterResampling(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastersaturation(_:)-1ixuh","title":"func rasterSaturation(Exp) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastersaturation(_:)-282m2","title":"func rasterSaturation(Double) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/rastersaturationtransition(_:)","title":"func rasterSaturationTransition(StyleTransition) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/slot(_:)","title":"func slot(Slot?) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/source(_:)","title":"func source(String) -> RasterLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> RasterLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/rasterlayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rasterlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterlayer","title":"RasterLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlearrayband","title":"var rasterParticleArrayBand: Value<String>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlecolor","title":"var rasterParticleColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlecount","title":"var rasterParticleCount: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlefadeopacityfactor","title":"var rasterParticleFadeOpacityFactor: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlefadeopacityfactortransition","title":"var rasterParticleFadeOpacityFactorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlemaxspeed","title":"var rasterParticleMaxSpeed: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticleresetratefactor","title":"var rasterParticleResetRateFactor: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlespeedfactor","title":"var rasterParticleSpeedFactor: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/rasterparticlespeedfactortransition","title":"var rasterParticleSpeedFactorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterparticlelayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterparticlelayer","title":"RasterParticleLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/skylayer\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherecolor","title":"var skyAtmosphereColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherehalocolor","title":"var skyAtmosphereHaloColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresun","title":"var skyAtmosphereSun: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresunintensity","title":"var skyAtmosphereSunIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradient","title":"var skyGradient: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientcenter","title":"var skyGradientCenter: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientradius","title":"var skyGradientRadius: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyopacity","title":"var skyOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyopacitytransition","title":"var skyOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skytype","title":"var skyType: Value<SkyType>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/skylayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/maxzoom(_:)","title":"func maxZoom(Double) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/minzoom(_:)","title":"func minZoom(Double) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherecolor(_:)-1vufk","title":"func skyAtmosphereColor(UIColor) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherecolor(_:)-4d5x6","title":"func skyAtmosphereColor(StyleColor) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherecolor(_:)-4np6m","title":"func skyAtmosphereColor(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherecolorusetheme(_:)-5aqbz","title":"func skyAtmosphereColorUseTheme(ColorUseTheme) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherecolorusetheme(_:)-5z0bk","title":"func skyAtmosphereColorUseTheme(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherehalocolor(_:)-37vd3","title":"func skyAtmosphereHaloColor(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherehalocolor(_:)-7qhr2","title":"func skyAtmosphereHaloColor(UIColor) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherehalocolor(_:)-9aj90","title":"func skyAtmosphereHaloColor(StyleColor) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherehalocolorusetheme(_:)-5ve7","title":"func skyAtmosphereHaloColorUseTheme(ColorUseTheme) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospherehalocolorusetheme(_:)-y2xj","title":"func skyAtmosphereHaloColorUseTheme(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresun(_:)","title":"func skyAtmosphereSun(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresun(azimuthal:polar:)","title":"func skyAtmosphereSun(azimuthal: Double, polar: Double) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresunintensity(_:)-1ooq7","title":"func skyAtmosphereSunIntensity(Double) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyatmospheresunintensity(_:)-6ewso","title":"func skyAtmosphereSunIntensity(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradient(_:)-22wcl","title":"func skyGradient(StyleColor) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradient(_:)-5hsi4","title":"func skyGradient(UIColor) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradient(_:)-6g7a1","title":"func skyGradient(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientcenter(_:)","title":"func skyGradientCenter(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientcenter(azimuthal:polar:)","title":"func skyGradientCenter(azimuthal: Double, polar: Double) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientradius(_:)-54vj8","title":"func skyGradientRadius(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientradius(_:)-69ndy","title":"func skyGradientRadius(Double) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientusetheme(_:)-52afm","title":"func skyGradientUseTheme(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skygradientusetheme(_:)-zaf4","title":"func skyGradientUseTheme(ColorUseTheme) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyopacity(_:)-1nhqk","title":"func skyOpacity(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyopacity(_:)-502oa","title":"func skyOpacity(Double) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skyopacitytransition(_:)","title":"func skyOpacityTransition(StyleTransition) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skytype(_:)-2x00c","title":"func skyType(Exp) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/skytype(_:)-5g3mi","title":"func skyType(SkyType) -> SkyLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/slot(_:)","title":"func slot(Slot?) -> SkyLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/skylayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/skylayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skylayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/skylayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/skylayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/skylayer","title":"SkyLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconallowoverlap","title":"var iconAllowOverlap: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconanchor","title":"var iconAnchor: Value<IconAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolor","title":"var iconColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolorsaturation","title":"var iconColorSaturation: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolorsaturationtransition","title":"var iconColorSaturationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolortransition","title":"var iconColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconemissivestrength","title":"var iconEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconemissivestrengthtransition","title":"var iconEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhaloblur","title":"var iconHaloBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhaloblurtransition","title":"var iconHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolor","title":"var iconHaloColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolortransition","title":"var iconHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalowidth","title":"var iconHaloWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalowidthtransition","title":"var iconHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconignoreplacement","title":"var iconIgnorePlacement: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimage","title":"var iconImage: Value<ResolvedImage>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimagecrossfade","title":"var iconImageCrossFade: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimagecrossfadetransition","title":"var iconImageCrossFadeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconkeepupright","title":"var iconKeepUpright: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconocclusionopacity","title":"var iconOcclusionOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconocclusionopacitytransition","title":"var iconOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoffset","title":"var iconOffset: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconopacity","title":"var iconOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconopacitytransition","title":"var iconOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoptional","title":"var iconOptional: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpadding","title":"var iconPadding: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpitchalignment","title":"var iconPitchAlignment: Value<IconPitchAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotate","title":"var iconRotate: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotationalignment","title":"var iconRotationAlignment: Value<IconRotationAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconsize","title":"var iconSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconsizescalerange","title":"var iconSizeScaleRange: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfit","title":"var iconTextFit: Value<IconTextFit>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfitpadding","title":"var iconTextFitPadding: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslate","title":"var iconTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslateanchor","title":"var iconTranslateAnchor: Value<IconTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslatetransition","title":"var iconTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolavoidedges","title":"var symbolAvoidEdges: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolelevationreference","title":"var symbolElevationReference: Value<SymbolElevationReference>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolplacement","title":"var symbolPlacement: Value<SymbolPlacement>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolsortkey","title":"var symbolSortKey: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolspacing","title":"var symbolSpacing: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzelevate","title":"var symbolZElevate: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzoffset","title":"var symbolZOffset: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzoffsettransition","title":"var symbolZOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzorder","title":"var symbolZOrder: Value<SymbolZOrder>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textallowoverlap","title":"var textAllowOverlap: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textanchor","title":"var textAnchor: Value<TextAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolor","title":"var textColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolortransition","title":"var textColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textemissivestrength","title":"var textEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textemissivestrengthtransition","title":"var textEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfield","title":"var textField: Value<String>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfont","title":"var textFont: Value<[String]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthaloblur","title":"var textHaloBlur: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthaloblurtransition","title":"var textHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolor","title":"var textHaloColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolortransition","title":"var textHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalowidth","title":"var textHaloWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalowidthtransition","title":"var textHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textignoreplacement","title":"var textIgnorePlacement: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textjustify","title":"var textJustify: Value<TextJustify>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textkeepupright","title":"var textKeepUpright: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textletterspacing","title":"var textLetterSpacing: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textlineheight","title":"var textLineHeight: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxangle","title":"var textMaxAngle: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxwidth","title":"var textMaxWidth: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textocclusionopacity","title":"var textOcclusionOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textocclusionopacitytransition","title":"var textOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoffset","title":"var textOffset: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textopacity","title":"var textOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textopacitytransition","title":"var textOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoptional","title":"var textOptional: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpadding","title":"var textPadding: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpitchalignment","title":"var textPitchAlignment: Value<TextPitchAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textradialoffset","title":"var textRadialOffset: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotate","title":"var textRotate: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotationalignment","title":"var textRotationAlignment: Value<TextRotationAlignment>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textsize","title":"var textSize: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textsizescalerange","title":"var textSizeScaleRange: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttransform","title":"var textTransform: Value<TextTransform>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslate","title":"var textTranslate: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslateanchor","title":"var textTranslateAnchor: Value<TextTranslateAnchor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslatetransition","title":"var textTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textvariableanchor","title":"var textVariableAnchor: Value<[TextAnchor]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textwritingmode","title":"var textWritingMode: Value<[TextWritingMode]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/filter(_:)","title":"func filter(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconallowoverlap(_:)-28vqr","title":"func iconAllowOverlap(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconallowoverlap(_:)-4k4mt","title":"func iconAllowOverlap(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconanchor(_:)-29a8f","title":"func iconAnchor(IconAnchor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconanchor(_:)-56bhj","title":"func iconAnchor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolor(_:)-1apgh","title":"func iconColor(StyleColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolor(_:)-8ikw2","title":"func iconColor(UIColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolor(_:)-ttyu","title":"func iconColor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolorsaturation(_:)-6o8cl","title":"func iconColorSaturation(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolorsaturation(_:)-977q","title":"func iconColorSaturation(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolorsaturationtransition(_:)","title":"func iconColorSaturationTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolortransition(_:)","title":"func iconColorTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolorusetheme(_:)-1ugtg","title":"func iconColorUseTheme(ColorUseTheme) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconcolorusetheme(_:)-2lxxm","title":"func iconColorUseTheme(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconemissivestrength(_:)-19f71","title":"func iconEmissiveStrength(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconemissivestrength(_:)-esr9","title":"func iconEmissiveStrength(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconemissivestrengthtransition(_:)","title":"func iconEmissiveStrengthTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhaloblur(_:)-63q0w","title":"func iconHaloBlur(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhaloblur(_:)-7gagl","title":"func iconHaloBlur(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhaloblurtransition(_:)","title":"func iconHaloBlurTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolor(_:)-2vurt","title":"func iconHaloColor(UIColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolor(_:)-4p0fs","title":"func iconHaloColor(StyleColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolor(_:)-8fmma","title":"func iconHaloColor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolortransition(_:)","title":"func iconHaloColorTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolorusetheme(_:)-34gd","title":"func iconHaloColorUseTheme(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalocolorusetheme(_:)-3bo7p","title":"func iconHaloColorUseTheme(ColorUseTheme) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalowidth(_:)-1jxr3","title":"func iconHaloWidth(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalowidth(_:)-3qrof","title":"func iconHaloWidth(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconhalowidthtransition(_:)","title":"func iconHaloWidthTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconignoreplacement(_:)-3f2rb","title":"func iconIgnorePlacement(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconignoreplacement(_:)-8vwik","title":"func iconIgnorePlacement(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimage(_:)-13cdi","title":"func iconImage(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimage(_:)-7f0fc","title":"func iconImage(String) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimagecrossfade(_:)-1z9b5","title":"func iconImageCrossFade(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimagecrossfade(_:)-jpe2","title":"func iconImageCrossFade(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconimagecrossfadetransition(_:)","title":"func iconImageCrossFadeTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconkeepupright(_:)-30qod","title":"func iconKeepUpright(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconkeepupright(_:)-9il8t","title":"func iconKeepUpright(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconocclusionopacity(_:)-1iw3h","title":"func iconOcclusionOpacity(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconocclusionopacity(_:)-54ey1","title":"func iconOcclusionOpacity(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconocclusionopacitytransition(_:)","title":"func iconOcclusionOpacityTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoffset(_:)","title":"func iconOffset(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoffset(x:y:)","title":"func iconOffset(x: Double, y: Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconopacity(_:)-29i5p","title":"func iconOpacity(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconopacity(_:)-8hoz3","title":"func iconOpacity(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconopacitytransition(_:)","title":"func iconOpacityTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoptional(_:)-1yqsa","title":"func iconOptional(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconoptional(_:)-75lwx","title":"func iconOptional(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpadding(_:)-3fow7","title":"func iconPadding(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpadding(_:)-dbd4","title":"func iconPadding(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpitchalignment(_:)-3bs53","title":"func iconPitchAlignment(IconPitchAlignment) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconpitchalignment(_:)-95l3u","title":"func iconPitchAlignment(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotate(_:)-2dv8d","title":"func iconRotate(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotate(_:)-9hrs4","title":"func iconRotate(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotationalignment(_:)-4s5gk","title":"func iconRotationAlignment(IconRotationAlignment) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconrotationalignment(_:)-6ei2u","title":"func iconRotationAlignment(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconsize(_:)-1n4gf","title":"func iconSize(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconsize(_:)-9w73r","title":"func iconSize(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconsizescalerange(_:)","title":"func iconSizeScaleRange(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/iconsizescalerange(min:max:)","title":"func iconSizeScaleRange(min: Double, max: Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfit(_:)-4mkha","title":"func iconTextFit(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfit(_:)-5jevi","title":"func iconTextFit(IconTextFit) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfitpadding(_:)-21am6","title":"func iconTextFitPadding(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontextfitpadding(_:)-8bxwb","title":"func iconTextFitPadding(UIEdgeInsets) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslate(_:)","title":"func iconTranslate(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslate(x:y:)","title":"func iconTranslate(x: Double, y: Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslateanchor(_:)-1v03n","title":"func iconTranslateAnchor(IconTranslateAnchor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslateanchor(_:)-3n9a6","title":"func iconTranslateAnchor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/icontranslatetransition(_:)","title":"func iconTranslateTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/maxzoom(_:)","title":"func maxZoom(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/minzoom(_:)","title":"func minZoom(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/slot(_:)","title":"func slot(Slot?) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/source(_:)","title":"func source(String) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolavoidedges(_:)-1rd9f","title":"func symbolAvoidEdges(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolavoidedges(_:)-8asa9","title":"func symbolAvoidEdges(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolelevationreference(_:)-65ju7","title":"func symbolElevationReference(SymbolElevationReference) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolelevationreference(_:)-og3l","title":"func symbolElevationReference(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolplacement(_:)-7zjq7","title":"func symbolPlacement(SymbolPlacement) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolplacement(_:)-atdq","title":"func symbolPlacement(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolsortkey(_:)-2hiya","title":"func symbolSortKey(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolsortkey(_:)-7p3rb","title":"func symbolSortKey(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolspacing(_:)-8kbu7","title":"func symbolSpacing(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolspacing(_:)-npo5","title":"func symbolSpacing(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzelevate(_:)-5mdh","title":"func symbolZElevate(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzelevate(_:)-5tjy5","title":"func symbolZElevate(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzoffset(_:)-2h9lj","title":"func symbolZOffset(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzoffset(_:)-5z8po","title":"func symbolZOffset(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzoffsettransition(_:)","title":"func symbolZOffsetTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzorder(_:)-7ilm","title":"func symbolZOrder(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/symbolzorder(_:)-7w8ob","title":"func symbolZOrder(SymbolZOrder) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textallowoverlap(_:)-5iny7","title":"func textAllowOverlap(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textallowoverlap(_:)-7qk09","title":"func textAllowOverlap(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textanchor(_:)-20lzo","title":"func textAnchor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textanchor(_:)-l8en","title":"func textAnchor(TextAnchor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolor(_:)-24kl1","title":"func textColor(StyleColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolor(_:)-57y8u","title":"func textColor(UIColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolor(_:)-7cnvp","title":"func textColor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolortransition(_:)","title":"func textColorTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolorusetheme(_:)-157a4","title":"func textColorUseTheme(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textcolorusetheme(_:)-28297","title":"func textColorUseTheme(ColorUseTheme) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textemissivestrength(_:)-3ie1a","title":"func textEmissiveStrength(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textemissivestrength(_:)-5kjq8","title":"func textEmissiveStrength(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textemissivestrengthtransition(_:)","title":"func textEmissiveStrengthTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfield(_:)-5d395","title":"func textField(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfield(_:)-7n0g9","title":"func textField(String) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfont(_:)-3nsvj","title":"func textFont([String]) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textfont(_:)-46lz8","title":"func textFont(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthaloblur(_:)-4iag9","title":"func textHaloBlur(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthaloblur(_:)-7glio","title":"func textHaloBlur(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthaloblurtransition(_:)","title":"func textHaloBlurTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolor(_:)-5bxt4","title":"func textHaloColor(UIColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolor(_:)-69iz9","title":"func textHaloColor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolor(_:)-bqdj","title":"func textHaloColor(StyleColor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolortransition(_:)","title":"func textHaloColorTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolorusetheme(_:)-1adgr","title":"func textHaloColorUseTheme(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalocolorusetheme(_:)-5dhf1","title":"func textHaloColorUseTheme(ColorUseTheme) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalowidth(_:)-1f1e7","title":"func textHaloWidth(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalowidth(_:)-1iyoc","title":"func textHaloWidth(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texthalowidthtransition(_:)","title":"func textHaloWidthTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textignoreplacement(_:)-4frlc","title":"func textIgnorePlacement(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textignoreplacement(_:)-b1qj","title":"func textIgnorePlacement(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textjustify(_:)-6ud78","title":"func textJustify(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textjustify(_:)-7j4xw","title":"func textJustify(TextJustify) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textkeepupright(_:)-2sdsh","title":"func textKeepUpright(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textkeepupright(_:)-8imhb","title":"func textKeepUpright(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textletterspacing(_:)-4mgjp","title":"func textLetterSpacing(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textletterspacing(_:)-9kp79","title":"func textLetterSpacing(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textlineheight(_:)-3p1r3","title":"func textLineHeight(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textlineheight(_:)-94rdd","title":"func textLineHeight(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxangle(_:)-2lhng","title":"func textMaxAngle(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxangle(_:)-2vr3c","title":"func textMaxAngle(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxwidth(_:)-1exxm","title":"func textMaxWidth(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textmaxwidth(_:)-3klmh","title":"func textMaxWidth(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textocclusionopacity(_:)-5uh4p","title":"func textOcclusionOpacity(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textocclusionopacity(_:)-5vqd2","title":"func textOcclusionOpacity(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textocclusionopacitytransition(_:)","title":"func textOcclusionOpacityTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoffset(_:)","title":"func textOffset(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoffset(x:y:)","title":"func textOffset(x: Double, y: Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textopacity(_:)-1wnf5","title":"func textOpacity(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textopacity(_:)-3sg0s","title":"func textOpacity(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textopacitytransition(_:)","title":"func textOpacityTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoptional(_:)-31n6o","title":"func textOptional(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textoptional(_:)-97b5g","title":"func textOptional(Bool) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpadding(_:)-59xdy","title":"func textPadding(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpadding(_:)-6geb4","title":"func textPadding(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpitchalignment(_:)-3593f","title":"func textPitchAlignment(TextPitchAlignment) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textpitchalignment(_:)-62xfb","title":"func textPitchAlignment(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textradialoffset(_:)-288vk","title":"func textRadialOffset(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textradialoffset(_:)-6y84q","title":"func textRadialOffset(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotate(_:)-4y03x","title":"func textRotate(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotate(_:)-5x7f1","title":"func textRotate(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotationalignment(_:)-7od1","title":"func textRotationAlignment(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textrotationalignment(_:)-ffhq","title":"func textRotationAlignment(TextRotationAlignment) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textsize(_:)-1w6x7","title":"func textSize(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textsize(_:)-5ran2","title":"func textSize(Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textsizescalerange(_:)","title":"func textSizeScaleRange(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textsizescalerange(min:max:)","title":"func textSizeScaleRange(min: Double, max: Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttransform(_:)-5f8rd","title":"func textTransform(TextTransform) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttransform(_:)-7fjv3","title":"func textTransform(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslate(_:)","title":"func textTranslate(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslate(x:y:)","title":"func textTranslate(x: Double, y: Double) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslateanchor(_:)-3adkk","title":"func textTranslateAnchor(TextTranslateAnchor) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslateanchor(_:)-hmaa","title":"func textTranslateAnchor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/texttranslatetransition(_:)","title":"func textTranslateTransition(StyleTransition) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textvariableanchor(_:)-3phap","title":"func textVariableAnchor([TextAnchor]) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textvariableanchor(_:)-6wiqi","title":"func textVariableAnchor(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textwritingmode(_:)-3wl28","title":"func textWritingMode(Exp) -> SymbolLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/textwritingmode(_:)-9s3z0","title":"func textWritingMode([TextWritingMode]) -> SymbolLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/symbollayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/symbollayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbollayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/symbollayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/symbollayer","title":"SymbolLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelambientocclusionintensity","title":"var modelAmbientOcclusionIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelambientocclusionintensitytransition","title":"var modelAmbientOcclusionIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcastshadows","title":"var modelCastShadows: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolor","title":"var modelColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolormixintensity","title":"var modelColorMixIntensity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolormixintensitytransition","title":"var modelColorMixIntensityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcolortransition","title":"var modelColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelcutofffaderange","title":"var modelCutoffFadeRange: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelelevationreference","title":"var modelElevationReference: Value<ModelElevationReference>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelemissivestrength","title":"var modelEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelemissivestrengthtransition","title":"var modelEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelheightbasedemissivestrengthmultiplier","title":"var modelHeightBasedEmissiveStrengthMultiplier: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelheightbasedemissivestrengthmultipliertransition","title":"var modelHeightBasedEmissiveStrengthMultiplierTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelid","title":"var modelId: Value<String>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelopacity","title":"var modelOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelopacitytransition","title":"var modelOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelreceiveshadows","title":"var modelReceiveShadows: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelrotation","title":"var modelRotation: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelrotationtransition","title":"var modelRotationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelroughness","title":"var modelRoughness: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelroughnesstransition","title":"var modelRoughnessTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelscale","title":"var modelScale: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelscalemode","title":"var modelScaleMode: Value<ModelScaleMode>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modelscaletransition","title":"var modelScaleTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modeltranslation","title":"var modelTranslation: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modeltranslationtransition","title":"var modelTranslationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/modeltype","title":"var modelType: Value<ModelType>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/modellayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/modellayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/modellayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modellayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/modellayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/modellayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/modellayer","title":"ModelLayer","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/customlayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/customlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/customlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/customlayer","title":"CustomLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/init(isrendertotilesupported:shouldrerendertiles:)","title":"init(isRenderToTileSupported: Bool, shouldRerenderTiles: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/isrendertotilesupported","title":"var isRenderToTileSupported: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration\/shouldrerendertiles","title":"var shouldRerenderTiles: Bool","type":"property"}],"path":"\/documentation\/mapboxmaps\/customlayerrenderconfiguration","title":"CustomLayerRenderConfiguration","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/init(width:height:latitude:longitude:zoom:bearing:pitch:fieldofview:projectionmatrix:elevationdata:)","title":"init(width: Double, height: Double, latitude: Double, longitude: Double, zoom: Double, bearing: Double, pitch: Double, fieldOfView: Double, projectionMatrix: [NSNumber], elevationData: (any ElevationData)?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/init(width:height:latitude:longitude:zoom:bearing:pitch:fieldofview:projectionmatrix:elevationdata:rendertotilesids:)","title":"init(width: Double, height: Double, latitude: Double, longitude: Double, zoom: Double, bearing: Double, pitch: Double, fieldOfView: Double, projectionMatrix: [NSNumber], elevationData: (any ElevationData)?, renderToTilesIDs: [CanonicalTileID]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/bearing","title":"var bearing: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/elevationdata","title":"var elevationData: (any ElevationData)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/fieldofview","title":"var fieldOfView: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/height","title":"var height: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/latitude","title":"var latitude: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/longitude","title":"var longitude: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/pitch","title":"var pitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/projectionmatrix","title":"var projectionMatrix: [NSNumber]","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/rendertotilesids","title":"var renderToTilesIDs: [CanonicalTileID]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/width","title":"var width: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters\/zoom","title":"var zoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/customlayerrenderparameters","title":"CustomLayerRenderParameters","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/openglcontextlost()","title":"func openGLContextLost()","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/prerender(_:mtlcommandbuffer:)","title":"func prerender(CustomLayerRenderParameters, mtlCommandBuffer: any MTLCommandBuffer) -> CustomLayerRenderConfiguration","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/render(_:mtlcommandbuffer:mtlrenderpassdescriptor:)","title":"func render(CustomLayerRenderParameters, mtlCommandBuffer: any MTLCommandBuffer, mtlRenderPassDescriptor: MTLRenderPassDescriptor)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/render(totile:mtlrendercommandencoder:)","title":"func render(toTile: CanonicalTileID, mtlRenderCommandEncoder: any MTLRenderCommandEncoder)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderopengl(_:)","title":"func renderOpenGL(CustomLayerRenderParameters)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderingwillend()","title":"func renderingWillEnd()","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderingwillstart(_:colorpixelformat:depthstencilpixelformat:)","title":"func renderingWillStart(any MTLDevice, colorPixelFormat: UInt, depthStencilPixelFormat: UInt)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customlayerhost\/renderingwillstartopengl()","title":"func renderingWillStartOpenGL()","type":"method"}],"path":"\/documentation\/mapboxmaps\/customlayerhost","title":"CustomLayerHost","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/elevationdata\/getelevationfor(_:)","title":"func getElevationFor(CLLocationCoordinate2D) -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxmaps\/elevationdata\/getterrainexaggeration()","title":"func getTerrainExaggeration() -> Double","type":"method"}],"path":"\/documentation\/mapboxmaps\/elevationdata","title":"ElevationData","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/slot\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/bottom","title":"static let bottom: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/slot\/middle","title":"static let middle: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/slot\/top","title":"static let top: Slot?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/slot\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/slot\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/slot\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slot\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/slot\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/slot\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/slot","title":"Slot","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/position(_:)","title":"func position(LayerPosition) -> LayerAtPosition<SlotLayer>","type":"method"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/slot(_:)","title":"func slot(Slot?) -> SlotLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/slotlayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/slotlayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/slotlayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/slotlayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/slotlayer","title":"SlotLayer","type":"struct"},{"path":"\/documentation\/mapboxmaps\/layeratposition","title":"LayerAtPosition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/init(id:source:)","title":"init(id: String, source: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/cliplayerscope","title":"var clipLayerScope: Value<[String]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/cliplayertypes","title":"var clipLayerTypes: Value<[ClipLayerTypes]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/filter","title":"var filter: Exp?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/type","title":"let type: LayerType","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/visibility","title":"var visibility: Value<Visibility>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/cliplayerscope(_:)-2rk3v","title":"func clipLayerScope([String]) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/cliplayerscope(_:)-8dc73","title":"func clipLayerScope(Exp) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/cliplayertypes(_:)-8t35b","title":"func clipLayerTypes(Exp) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/cliplayertypes(_:)-qdks","title":"func clipLayerTypes([ClipLayerTypes]) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/filter(_:)","title":"func filter(Exp) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/maxzoom(_:)","title":"func maxZoom(Double) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/minzoom(_:)","title":"func minZoom(Double) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/slot(_:)","title":"func slot(Slot?) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/source(_:)","title":"func source(String) -> ClipLayer","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/sourcelayer(_:)","title":"func sourceLayer(String) -> ClipLayer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cliplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/cliplayer\/layer-implementations","title":"Layer Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayer\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/cliplayer\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cliplayer","title":"ClipLayer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/model","title":"static let model: ClipLayerTypes","type":"property"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/symbol","title":"static let symbol: ClipLayerTypes","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cliplayertypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/cliplayertypes\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/cliplayertypes\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cliplayertypes","title":"ClipLayerTypes","type":"struct"}],"path":"\/documentation\/mapboxmaps\/layers","title":"Layers","type":"symbol"},{"children":[{"title":"Sources","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/source\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/source\/type","title":"var type: SourceType","type":"property"}],"path":"\/documentation\/mapboxmaps\/source","title":"Source","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/rawvalue","title":"let rawValue: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/sourcetype","title":"var sourceType: (any Source.Type)?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/customgeometry","title":"static let customGeometry: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/geojson","title":"static let geoJson: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/image","title":"static let image: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/model","title":"static let model: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/raster","title":"static let raster: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/rasterdem","title":"static let rasterDem: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/vector","title":"static let vector: SourceType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/sourcetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/sourcetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/sourcetype","title":"SourceType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceinfo\/init(id:type:)","title":"init(id: String, type: SourceType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourceinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourceinfo\/type","title":"var type: SourceType","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourceinfo","title":"SourceInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/buffer","title":"var buffer: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/cluster","title":"var cluster: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/clustermaxzoom","title":"var clusterMaxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/clusterminpoints","title":"var clusterMinPoints: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/clusterproperties","title":"var clusterProperties: [String : Exp]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/clusterradius","title":"var clusterRadius: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/data","title":"var data: GeoJSONSourceData?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/generateid","title":"var generateId: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/linemetrics","title":"var lineMetrics: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/promoteid","title":"var promoteId: PromoteId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/tilecachebudget","title":"var tileCacheBudget: TileCacheBudgetSize?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/tolerance","title":"var tolerance: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/type","title":"let type: SourceType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/data(_:)","title":"func data(GeoJSONSourceData) -> GeoJSONSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/prefetchzoomdelta(_:)","title":"func prefetchZoomDelta(Double) -> GeoJSONSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/tilecachebudget(_:)","title":"func tileCacheBudget(TileCacheBudgetSize) -> GeoJSONSource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/geojsonsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/geojsonsource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/geojsonsource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/geojsonsource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geojsonsource","title":"GeoJSONSource","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/feature(_:)","title":"case feature(Feature)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/featurecollection(_:)","title":"case featureCollection(FeatureCollection)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/geometry(_:)","title":"case geometry(Geometry)","type":"case"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/url(_:)","title":"static func url(URL) -> GeoJSONSourceData","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/geojsonsourcedata","title":"GeoJSONSourceData","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/imagesource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/coordinates","title":"var coordinates: [[Double]]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagesource\/url","title":"var url: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/coordinates(_:)","title":"func coordinates([[Double]]) -> ImageSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/imagesource\/prefetchzoomdelta(_:)","title":"func prefetchZoomDelta(Double) -> ImageSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/imagesource\/url(_:)","title":"func url(String) -> ImageSource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagesource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/imagesource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagesource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/imagesource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagesource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/imagesource","title":"ImageSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/bounds","title":"var bounds: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/encoding","title":"var encoding: Encoding?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/minimumtileupdateinterval","title":"var minimumTileUpdateInterval: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/minzoom","title":"var minzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilecachebudget","title":"var tileCacheBudget: TileCacheBudgetSize?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilenetworkrequestsdelay","title":"var tileNetworkRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilerequestsdelay","title":"var tileRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilesize","title":"var tileSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tiles","title":"var tiles: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/url","title":"var url: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/volatile","title":"var volatile: Bool?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/maxoverscalefactorforparenttiles(_:)","title":"func maxOverscaleFactorForParentTiles(Double) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/maxzoom(_:)","title":"func maxzoom(Double) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/minimumtileupdateinterval(_:)","title":"func minimumTileUpdateInterval(Double) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/minzoom(_:)","title":"func minzoom(Double) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/prefetchzoomdelta(_:)","title":"func prefetchZoomDelta(Double) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilecachebudget(_:)","title":"func tileCacheBudget(TileCacheBudgetSize) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilenetworkrequestsdelay(_:)","title":"func tileNetworkRequestsDelay(Double) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tilerequestsdelay(_:)","title":"func tileRequestsDelay(Double) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/tiles(_:)","title":"func tiles([String]) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/url(_:)","title":"func url(String) -> RasterDemSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/volatile(_:)","title":"func volatile(Bool) -> RasterDemSource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterdemsource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterdemsource","title":"RasterDemSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/rastersource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/bounds","title":"var bounds: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/minimumtileupdateinterval","title":"var minimumTileUpdateInterval: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/minzoom","title":"var minzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/scheme","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilecachebudget","title":"var tileCacheBudget: TileCacheBudgetSize?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilenetworkrequestsdelay","title":"var tileNetworkRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilerequestsdelay","title":"var tileRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilesize","title":"var tileSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tiles","title":"var tiles: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/url","title":"var url: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rastersource\/volatile","title":"var volatile: Bool?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/maxoverscalefactorforparenttiles(_:)","title":"func maxOverscaleFactorForParentTiles(Double) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/maxzoom(_:)","title":"func maxzoom(Double) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/minimumtileupdateinterval(_:)","title":"func minimumTileUpdateInterval(Double) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/minzoom(_:)","title":"func minzoom(Double) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/prefetchzoomdelta(_:)","title":"func prefetchZoomDelta(Double) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilecachebudget(_:)","title":"func tileCacheBudget(TileCacheBudgetSize) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilenetworkrequestsdelay(_:)","title":"func tileNetworkRequestsDelay(Double) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tilerequestsdelay(_:)","title":"func tileRequestsDelay(Double) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/tiles(_:)","title":"func tiles([String]) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/url(_:)","title":"func url(String) -> RasterSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/volatile(_:)","title":"func volatile(Bool) -> RasterSource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/rastersource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rastersource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rastersource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rastersource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rastersource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rastersource","title":"RasterSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/bounds","title":"var bounds: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/minzoom","title":"var minzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/rasterlayers","title":"var rasterLayers: [RasterArraySource.RasterDataLayer]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/tilecachebudget","title":"var tileCacheBudget: TileCacheBudgetSize?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/tilesize","title":"var tileSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/tiles","title":"var tiles: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/url","title":"var url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/rasterarraysource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterarraysource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterarraysource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterarraysource","title":"RasterArraySource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/attribution","title":"var attribution: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/bounds","title":"var bounds: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/maxzoom","title":"var maxzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/minimumtileupdateinterval","title":"var minimumTileUpdateInterval: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/minzoom","title":"var minzoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/prefetchzoomdelta","title":"var prefetchZoomDelta: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/promoteid","title":"var promoteId: PromoteId?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/scheme","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilecachebudget","title":"var tileCacheBudget: TileCacheBudgetSize?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilenetworkrequestsdelay","title":"var tileNetworkRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilerequestsdelay","title":"var tileRequestsDelay: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tiles","title":"var tiles: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/type","title":"let type: SourceType","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/url","title":"var url: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/volatile","title":"var volatile: Bool?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/maxoverscalefactorforparenttiles(_:)","title":"func maxOverscaleFactorForParentTiles(Double) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/maxzoom(_:)","title":"func maxzoom(Double) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/minimumtileupdateinterval(_:)","title":"func minimumTileUpdateInterval(Double) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/minzoom(_:)","title":"func minzoom(Double) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/prefetchzoomdelta(_:)","title":"func prefetchZoomDelta(Double) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilecachebudget(_:)","title":"func tileCacheBudget(TileCacheBudgetSize) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilenetworkrequestsdelay(_:)","title":"func tileNetworkRequestsDelay(Double) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tilerequestsdelay(_:)","title":"func tileRequestsDelay(Double) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/tiles(_:)","title":"func tiles([String]) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/url(_:)","title":"func url(String) -> VectorSource","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/volatile(_:)","title":"func volatile(Bool) -> VectorSource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/vectorsource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/vectorsource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/vectorsource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/vectorsource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/vectorsource","title":"VectorSource","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/object(_:)","title":"case object([String : String])","type":"case"},{"path":"\/documentation\/mapboxmaps\/promoteid\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/promoteid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/promoteid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/promoteid","title":"PromoteId","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/tms","title":"static let tms: Scheme","type":"property"},{"path":"\/documentation\/mapboxmaps\/scheme\/xyz","title":"static let xyz: Scheme","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/scheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scheme\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/scheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/scheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/scheme","title":"Scheme","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/mapbox","title":"static let mapbox: Encoding","type":"property"},{"path":"\/documentation\/mapboxmaps\/encoding\/terrarium","title":"static let terrarium: Encoding","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/encoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/encoding\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/encoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/encoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/encoding","title":"Encoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/init(id:options:maxoverscalefactorforparenttiles:)","title":"init(id: String, options: CustomGeometrySourceOptions, maxOverscaleFactorForParentTiles: UInt8?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: UInt8?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/options","title":"let options: CustomGeometrySourceOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/tilecachebudget","title":"var tileCacheBudget: TileCacheBudgetSize?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/type","title":"let type: SourceType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/customgeometrysource\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/customgeometrysource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/customgeometrysource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/customgeometrysource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/customgeometrysource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/customgeometrysource","title":"CustomGeometrySource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/init(fetchtilefunction:canceltilefunction:minzoom:maxzoom:tileoptions:)","title":"init(fetchTileFunction: TileFunctionCallback, cancelTileFunction: TileFunctionCallback, minZoom: UInt8, maxZoom: UInt8, tileOptions: TileOptions)","type":"init"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/init(fetchtilefunction:canceltilefunction:tileoptions:)","title":"init(fetchTileFunction: TileFunctionCallback, cancelTileFunction: TileFunctionCallback, tileOptions: TileOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/canceltilefunction","title":"var cancelTileFunction: TileFunctionCallback","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/fetchtilefunction","title":"var fetchTileFunction: TileFunctionCallback","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/maxzoom","title":"var maxZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/minzoom","title":"var minZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions\/tileoptions","title":"var tileOptions: TileOptions","type":"property"}],"path":"\/documentation\/mapboxmaps\/customgeometrysourceoptions","title":"CustomGeometrySourceOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/init(id:options:maxoverscalefactorforparenttiles:)","title":"init(id: String, options: CustomRasterSourceOptions, maxOverscaleFactorForParentTiles: UInt8?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/maxoverscalefactorforparenttiles","title":"var maxOverscaleFactorForParentTiles: UInt8?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/options","title":"let options: CustomRasterSourceOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/type","title":"let type: SourceType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/customrastersource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/init(jsonobject:)","title":"init(jsonObject: [String : Any]) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/customrastersource\/source-implementations","title":"Source Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/allstyleproperties()","title":"func allStyleProperties() throws -> [String : Any]","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersource\/jsonobject()","title":"func jsonObject() throws -> [String : Any]","type":"method"}],"path":"\/documentation\/mapboxmaps\/customrastersource\/styleencodable-implementations","title":"StyleEncodable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/customrastersource","title":"CustomRasterSource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceoptions\/init(clientcallback:)","title":"init(clientCallback: CustomRasterSourceClient)","type":"init"},{"path":"\/documentation\/mapboxmaps\/customrastersourceoptions\/init(clientcallback:minzoom:maxzoom:tilesize:)","title":"init(clientCallback: CustomRasterSourceClient, minZoom: UInt8, maxZoom: UInt8, tileSize: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceoptions\/clientcallback","title":"var clientCallback: CustomRasterSourceClient","type":"property"},{"path":"\/documentation\/mapboxmaps\/customrastersourceoptions\/maxzoom","title":"var maxZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/customrastersourceoptions\/minzoom","title":"var minZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/customrastersourceoptions\/tilesize","title":"var tileSize: UInt16","type":"property"}],"path":"\/documentation\/mapboxmaps\/customrastersourceoptions","title":"CustomRasterSourceOptions","type":"class"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatuschangedcallback","title":"CustomRasterSourceTileStatusChangedCallback","type":"typealias"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetiledata\/tileid","title":"var tileId: CanonicalTileID","type":"property"}],"path":"\/documentation\/mapboxmaps\/customrastersourcetiledata","title":"CustomRasterSourceTileData","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/notneeded","title":"case notNeeded","type":"case"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/optional","title":"case optional","type":"case"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/required","title":"case required","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/customrastersourcetilestatus","title":"CustomRasterSourceTileStatus","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclient\/type","title":"var type: CustomRasterSourceClientType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclient\/getcustomrastersourcetilerenderer()","title":"func getCustomRasterSourceTileRenderer() -> any CustomRasterSourceTileRenderer","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclient\/getcustomrastersourcetilestatuschangedcallback()","title":"func getCustomRasterSourceTileStatusChangedCallback() -> CustomRasterSourceTileStatusChangedCallback","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclient\/iscustomrastersourcetilerenderer()","title":"func isCustomRasterSourceTileRenderer() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclient\/iscustomrastersourcetilestatuschangedcallback()","title":"func isCustomRasterSourceTileStatusChangedCallback() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclient\/fromcustomrastersourcetilerenderer(_:)","title":"class func fromCustomRasterSourceTileRenderer(any CustomRasterSourceTileRenderer) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclient\/fromcustomrastersourcetilestatuschangedcallback(_:)","title":"class func fromCustomRasterSourceTileStatusChangedCallback(CustomRasterSourceTileStatusChangedCallback) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/customrastersourceclient","title":"CustomRasterSourceClient","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilerenderer\/deinitialize()","title":"func deinitialize()","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilerenderer\/initialize(fordevice:colorpixelformat:)","title":"func initialize(forDevice: UInt64, colorPixelFormat: UInt64)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilerenderer\/istilerenderable(for:status:)","title":"func isTileRenderable(for: CanonicalTileID, status: CustomRasterSourceTileStatus) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilerenderer\/prerender(for:commandbuffer:)","title":"func prerender(for: CustomLayerRenderParameters, commandBuffer: UInt64)","type":"method"},{"path":"\/documentation\/mapboxmaps\/customrastersourcetilerenderer\/rendertotile(for:commandencoder:)","title":"func renderToTile(for: CanonicalTileID, commandEncoder: UInt64)","type":"method"}],"path":"\/documentation\/mapboxmaps\/customrastersourcetilerenderer","title":"CustomRasterSourceTileRenderer","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/customrastersourcetilerenderer","title":"case customRasterSourceTileRenderer","type":"case"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/customrastersourcetilestatuschangedcallback","title":"case customRasterSourceTileStatusChangedCallback","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/customrastersourceclienttype","title":"CustomRasterSourceClientType","type":"enum"},{"path":"\/documentation\/mapboxmaps\/tilefunctioncallback","title":"TileFunctionCallback","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/megabytes(_:)","title":"case megabytes(Int)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/tiles(_:)","title":"case tiles(Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetsize","title":"TileCacheBudgetSize","type":"enum"}],"path":"\/documentation\/mapboxmaps\/sources","title":"Sources","type":"symbol"},{"children":[{"title":"Layer Property Values","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/constant(_:)","title":"case constant(T)","type":"case"},{"path":"\/documentation\/mapboxmaps\/value\/expression(_:)","title":"case expression(Exp)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/value","title":"Value","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/map","title":"static let map: Anchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/anchor\/viewport","title":"static let viewport: Anchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/anchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/anchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/anchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/anchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/anchor","title":"Anchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/map","title":"static let map: CirclePitchAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/viewport","title":"static let viewport: CirclePitchAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/circlepitchalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circlepitchalignment","title":"CirclePitchAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/map","title":"static let map: CirclePitchScale","type":"property"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/viewport","title":"static let viewport: CirclePitchScale","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circlepitchscale\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/circlepitchscale\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/circlepitchscale\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circlepitchscale","title":"CirclePitchScale","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/map","title":"static let map: CircleTranslateAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/viewport","title":"static let viewport: CircleTranslateAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/circletranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circletranslateanchor","title":"CircleTranslateAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/map","title":"static let map: FillExtrusionTranslateAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/viewport","title":"static let viewport: FillExtrusionTranslateAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/fillextrusiontranslateanchor","title":"FillExtrusionTranslateAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/map","title":"static let map: FillTranslateAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/viewport","title":"static let viewport: FillTranslateAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/filltranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/filltranslateanchor","title":"FillTranslateAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/map","title":"static let map: HillshadeIlluminationAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/viewport","title":"static let viewport: HillshadeIlluminationAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/hillshadeilluminationanchor","title":"HillshadeIlluminationAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/bottom","title":"static let bottom: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/bottomleft","title":"static let bottomLeft: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/bottomright","title":"static let bottomRight: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/center","title":"static let center: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/left","title":"static let left: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/right","title":"static let right: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/top","title":"static let top: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/topleft","title":"static let topLeft: IconAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/topright","title":"static let topRight: IconAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/iconanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/iconanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/iconanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/iconanchor","title":"IconAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/auto","title":"static let auto: IconPitchAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/map","title":"static let map: IconPitchAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/viewport","title":"static let viewport: IconPitchAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/iconpitchalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/iconpitchalignment","title":"IconPitchAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/auto","title":"static let auto: IconRotationAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/map","title":"static let map: IconRotationAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/viewport","title":"static let viewport: IconRotationAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/iconrotationalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/iconrotationalignment","title":"IconRotationAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/both","title":"static let both: IconTextFit","type":"property"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/height","title":"static let height: IconTextFit","type":"property"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/none","title":"static let none: IconTextFit","type":"property"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/width","title":"static let width: IconTextFit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/icontextfit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/icontextfit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/icontextfit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/icontextfit","title":"IconTextFit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/map","title":"static let map: IconTranslateAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/viewport","title":"static let viewport: IconTranslateAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/icontranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/icontranslateanchor","title":"IconTranslateAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/butt","title":"static let butt: LineCap","type":"property"},{"path":"\/documentation\/mapboxmaps\/linecap\/round","title":"static let round: LineCap","type":"property"},{"path":"\/documentation\/mapboxmaps\/linecap\/square","title":"static let square: LineCap","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linecap\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linecap\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linecap\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/linecap\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linecap","title":"LineCap","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/bevel","title":"static let bevel: LineJoin","type":"property"},{"path":"\/documentation\/mapboxmaps\/linejoin\/miter","title":"static let miter: LineJoin","type":"property"},{"path":"\/documentation\/mapboxmaps\/linejoin\/none","title":"static let none: LineJoin","type":"property"},{"path":"\/documentation\/mapboxmaps\/linejoin\/round","title":"static let round: LineJoin","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linejoin\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linejoin\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linejoin\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/linejoin\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linejoin","title":"LineJoin","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/map","title":"static let map: LineTranslateAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/viewport","title":"static let viewport: LineTranslateAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/linetranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linetranslateanchor","title":"LineTranslateAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/linear","title":"static let linear: RasterResampling","type":"property"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/nearest","title":"static let nearest: RasterResampling","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/rasterresampling\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/rasterresampling\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/rasterresampling\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/rasterresampling","title":"RasterResampling","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/data(_:)","title":"case data(ResolvedImageData)","type":"case"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/name(_:)","title":"case name(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapboxmaps\/resolvedimage\/==(_:_:)","title":"static func == (ResolvedImage, ResolvedImage) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/resolvedimage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/resolvedimage","title":"ResolvedImage","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/available","title":"var available: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/resolvedimagedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/resolvedimagedata","title":"ResolvedImageData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvalue\/init(value:kind:)","title":"init(value: Any, kind: StylePropertyValueKind)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvalue\/kind","title":"var kind: StylePropertyValueKind","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvalue\/value","title":"var value: Any","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvalue","title":"StylePropertyValue","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/constant","title":"case constant","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/transition","title":"case transition","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/undefined","title":"case undefined","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/stylepropertyvaluekind","title":"StylePropertyValueKind","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/atmosphere","title":"static let atmosphere: SkyType","type":"property"},{"path":"\/documentation\/mapboxmaps\/skytype\/gradient","title":"static let gradient: SkyType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/skytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/skytype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/skytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/skytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/skytype","title":"SkyType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/common3d","title":"static let common3d: ModelType","type":"property"},{"path":"\/documentation\/mapboxmaps\/modeltype\/locationindicator","title":"static let locationIndicator: ModelType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/modeltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modeltype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/modeltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/modeltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/modeltype","title":"ModelType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(_:)","title":"init(UIColor)","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(from:)-8khx","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(hue:saturation:lightness:)","title":"init?(hue: Double, saturation: Double, lightness: Double)","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(hue:saturation:lightness:alpha:)","title":"init?(hue: Double, saturation: Double, lightness: Double, alpha: Double)","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(red:green:blue:)","title":"init?(red: Double, green: Double, blue: Double)","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(red:green:blue:alpha:)","title":"init?(red: Double, green: Double, blue: Double, alpha: Double)","type":"init"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/stylecolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/stylecolor\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/mapboxmaps\/stylecolor\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/mapboxmaps\/stylecolor\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/init(from:)-4c1ya","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylecolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/stylecolor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/stylecolor","title":"StyleColor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/init(duration:delay:)","title":"init(duration: TimeInterval, delay: TimeInterval)","type":"init"},{"path":"\/documentation\/mapboxmaps\/styletransition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/delay","title":"var delay: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/styletransition\/duration","title":"var duration: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/zero","title":"static let zero: StyleTransition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styletransition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/styletransition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/styletransition","title":"StyleTransition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/line","title":"static let line: SymbolPlacement","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/linecenter","title":"static let lineCenter: SymbolPlacement","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/point","title":"static let point: SymbolPlacement","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/symbolplacement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbolplacement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/symbolplacement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/symbolplacement","title":"SymbolPlacement","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/auto","title":"static let auto: SymbolZOrder","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/source","title":"static let source: SymbolZOrder","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/viewporty","title":"static let viewportY: SymbolZOrder","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/symbolzorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbolzorder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/symbolzorder\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/symbolzorder","title":"SymbolZOrder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/bottom","title":"static let bottom: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/bottomleft","title":"static let bottomLeft: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/bottomright","title":"static let bottomRight: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/center","title":"static let center: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/left","title":"static let left: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/right","title":"static let right: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/top","title":"static let top: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/topleft","title":"static let topLeft: TextAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/textanchor\/topright","title":"static let topRight: TextAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textanchor","title":"TextAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/auto","title":"static let auto: TextJustify","type":"property"},{"path":"\/documentation\/mapboxmaps\/textjustify\/center","title":"static let center: TextJustify","type":"property"},{"path":"\/documentation\/mapboxmaps\/textjustify\/left","title":"static let left: TextJustify","type":"property"},{"path":"\/documentation\/mapboxmaps\/textjustify\/right","title":"static let right: TextJustify","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textjustify\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textjustify\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textjustify\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textjustify\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textjustify","title":"TextJustify","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/auto","title":"static let auto: TextPitchAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/map","title":"static let map: TextPitchAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/viewport","title":"static let viewport: TextPitchAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textpitchalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textpitchalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textpitchalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textpitchalignment","title":"TextPitchAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/auto","title":"static let auto: TextRotationAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/map","title":"static let map: TextRotationAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/viewport","title":"static let viewport: TextRotationAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textrotationalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textrotationalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textrotationalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textrotationalignment","title":"TextRotationAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/lowercase","title":"static let lowercase: TextTransform","type":"property"},{"path":"\/documentation\/mapboxmaps\/texttransform\/none","title":"static let none: TextTransform","type":"property"},{"path":"\/documentation\/mapboxmaps\/texttransform\/uppercase","title":"static let uppercase: TextTransform","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/texttransform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttransform\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/texttransform\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/texttransform\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/texttransform","title":"TextTransform","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/map","title":"static let map: TextTranslateAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/viewport","title":"static let viewport: TextTranslateAnchor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/texttranslateanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/texttranslateanchor","title":"TextTranslateAnchor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/horizontal","title":"static let horizontal: TextWritingMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/vertical","title":"static let vertical: TextWritingMode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/textwritingmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/textwritingmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/textwritingmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/textwritingmode","title":"TextWritingMode","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxmaps\/visibility\/visible","title":"case visible","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/visibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/visibility\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/visibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/visibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/visibility","title":"Visibility","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/init(duration:delay:enableplacementtransitions:)","title":"init(duration: TimeInterval?, delay: TimeInterval?, enablePlacementTransitions: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/delay","title":"var delay: TimeInterval?","type":"property"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/duration","title":"var duration: TimeInterval?","type":"property"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/enableplacementtransitions","title":"var enablePlacementTransitions: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct","title":"TransitionOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/map","title":"static let map: ModelScaleMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/viewport","title":"static let viewport: ModelScaleMode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/modelscalemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/modelscalemode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/modelscalemode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/modelscalemode","title":"ModelScaleMode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/ground","title":"static let ground: SymbolElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/hdroadmarkup","title":"static let hdRoadMarkup: SymbolElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/sea","title":"static let sea: SymbolElevationReference","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/symbolelevationreference\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/symbolelevationreference","title":"SymbolElevationReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/map","title":"static let map: BackgroundPitchAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/viewport","title":"static let viewport: BackgroundPitchAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/backgroundpitchalignment","title":"BackgroundPitchAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/flat","title":"static let flat: FillExtrusionBaseAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/terrain","title":"static let terrain: FillExtrusionBaseAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/fillextrusionbasealignment","title":"FillExtrusionBaseAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/flat","title":"static let flat: FillExtrusionHeightAlignment","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/terrain","title":"static let terrain: FillExtrusionHeightAlignment","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/fillextrusionheightalignment","title":"FillExtrusionHeightAlignment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/hdroadbase","title":"static let hdRoadBase: FillElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/hdroadmarkup","title":"static let hdRoadMarkup: FillElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/none","title":"static let none: FillElevationReference","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/fillelevationreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/fillelevationreference\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/fillelevationreference\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/fillelevationreference","title":"FillElevationReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/ground","title":"static let ground: LineElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/hdroadmarkup","title":"static let hdRoadMarkup: LineElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/none","title":"static let none: LineElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/sea","title":"static let sea: LineElevationReference","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/lineelevationreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/lineelevationreference\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/lineelevationreference\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/lineelevationreference","title":"LineElevationReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/meters","title":"static let meters: LineWidthUnit","type":"property"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/pixels","title":"static let pixels: LineWidthUnit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/linewidthunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/linewidthunit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/linewidthunit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/linewidthunit","title":"LineWidthUnit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/ground","title":"static let ground: ModelElevationReference","type":"property"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/sea","title":"static let sea: ModelElevationReference","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/modelelevationreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/modelelevationreference\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/modelelevationreference\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/modelelevationreference","title":"ModelElevationReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/init(left:top:right:bottom:)","title":"init(left: Float, top: Float, right: Float, bottom: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/bottom","title":"var bottom: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/left","title":"var left: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/right","title":"var right: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/top","title":"var top: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagecontent\/isequal(to:)","title":"func isEqual(to: ImageContent) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagecontent","title":"ImageContent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/init(first:second:)","title":"init(first: Float, second: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/first","title":"var first: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/second","title":"var second: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imagestretches\/isequal(to:)","title":"func isEqual(to: ImageStretches) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/imagestretches","title":"ImageStretches","type":"class"}],"path":"\/documentation\/mapboxmaps\/layer-property-values","title":"Layer Property Values","type":"symbol"},{"children":[{"title":"Expressions","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/abs","title":"static let abs: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/accumulated","title":"static let accumulated: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/acos","title":"static let acos: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/all","title":"static let all: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/any","title":"static let any: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/array","title":"static let array: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/asin","title":"static let asin: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/at","title":"static let at: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/atan","title":"static let atan: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/boolean","title":"static let boolean: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/ceil","title":"static let ceil: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/coalesce","title":"static let coalesce: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/collator","title":"static let collator: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/concat","title":"static let concat: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/config","title":"static let config: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/cos","title":"static let cos: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/cubicbezier","title":"static let cubicBezier: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/distance","title":"static let distance: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/distancefromcenter","title":"static let distanceFromCenter: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/division","title":"static let division: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/downcase","title":"static let downcase: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/e","title":"static let e: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/eq","title":"static let eq: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/exponential","title":"static let exponential: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/featurestate","title":"static let featureState: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/floor","title":"static let floor: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/format","title":"static let format: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/geometrytype","title":"static let geometryType: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/get","title":"static let get: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/gt","title":"static let gt: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/gte","title":"static let gte: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/has","title":"static let has: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/heatmapdensity","title":"static let heatmapDensity: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/hsl","title":"static let hsl: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/hsla","title":"static let hsla: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/id","title":"static let id: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/image","title":"static let image: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/inexpression","title":"static let inExpression: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/indexof","title":"static let indexOf: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate","title":"static let interpolate: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/issupportedscript","title":"static let isSupportedScript: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/length","title":"static let length: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/letexpression","title":"static let letExpression: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/lineprogress","title":"static let lineProgress: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/linear","title":"static let linear: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/literal","title":"static let literal: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/ln","title":"static let ln: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/ln2","title":"static let ln2: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/log10","title":"static let log10: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/log2","title":"static let log2: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/lt","title":"static let lt: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/lte","title":"static let lte: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/match","title":"static let match: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/max","title":"static let max: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/measurelight","title":"static let measureLight: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/min","title":"static let min: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/mod","title":"static let mod: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/neq","title":"static let neq: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/not","title":"static let not: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/number","title":"static let number: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/numberformat","title":"static let numberFormat: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/objectexpression","title":"static let objectExpression: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/pi","title":"static let pi: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/pitch","title":"static let pitch: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/pow","title":"static let pow: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/product","title":"static let product: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/properties","title":"static let properties: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/random","title":"static let random: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/rasterparticlespeed","title":"static let rasterParticleSpeed: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/rastervalue","title":"static let rasterValue: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/resolvedlocale","title":"static let resolvedLocale: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/rgb","title":"static let rgb: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/rgba","title":"static let rgba: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/round","title":"static let round: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/sin","title":"static let sin: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/skyradialprogress","title":"static let skyRadialProgress: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/slice","title":"static let slice: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/sqrt","title":"static let sqrt: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/step","title":"static let step: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/string","title":"static let string: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/subtract","title":"static let subtract: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/sum","title":"static let sum: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/switchcase","title":"static let switchCase: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/tan","title":"static let tan: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/toboolean","title":"static let toBoolean: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/tocolor","title":"static let toColor: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/tohsla","title":"static let toHsla: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/tonumber","title":"static let toNumber: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/torgba","title":"static let toRgba: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/tostring","title":"static let toString: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/typeofexpression","title":"static let typeofExpression: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/upcase","title":"static let upcase: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/varexpression","title":"static let varExpression: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/within","title":"static let within: Exp.Operator","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/zoom","title":"static let zoom: Exp.Operator","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","title":"Exp.Operator","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/init(_:)","title":"init(Exp.Operator)","type":"init"},{"path":"\/documentation\/mapboxmaps\/exp\/init(_:_:)","title":"init(Exp.Operator, any ExpressionArgumentConvertible...)","type":"init"},{"path":"\/documentation\/mapboxmaps\/exp\/init(_:content:)","title":"init(Exp.Operator, content: () -> [Exp.Argument])","type":"init"},{"path":"\/documentation\/mapboxmaps\/exp\/init(arguments:)","title":"init(arguments: [Exp.Argument])","type":"init"},{"path":"\/documentation\/mapboxmaps\/exp\/init(content:)","title":"init(content: () -> [Exp.Argument])","type":"init"},{"path":"\/documentation\/mapboxmaps\/exp\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/exp\/init(operator:arguments:)","title":"init(operator: Exp.Operator, arguments: [Exp.Argument])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/arguments","title":"var arguments: [Exp.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/exp\/operator-swift.property","title":"var `operator`: Exp.Operator","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/dictionary(_:)","title":"case dictionary([String : Exp.Argument])","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/expression(_:)","title":"case expression(Exp)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/geojsonobject(_:)","title":"case geoJSONObject(GeoJSONObject)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/null","title":"case null","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/numberarray(_:)","title":"case numberArray([Double])","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/option(_:)","title":"case option(Exp.Option)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/stringarray(_:)","title":"case stringArray([String])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/argument\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/exp\/argument\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/exp\/argument","title":"Exp.Argument","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/element\/==(_:_:)","title":"static func == (Exp.Element, Exp.Element) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/element\/argument(_:)","title":"case argument(Exp.Argument)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/element\/operator(_:)","title":"case `operator`(Exp.Operator)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/element\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/element\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/element\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/element\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/exp\/element\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/exp\/element","title":"Exp.Element","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/option\/collator(_:)","title":"case collator(CollatorOptions)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/option\/format(_:)","title":"case format(FormatOptions)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/option\/image(_:)","title":"case image(ImageOptions)","type":"case"},{"path":"\/documentation\/mapboxmaps\/exp\/option\/numberformat(_:)","title":"case numberFormat(NumberFormatOptions)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/option\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/option\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/option\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/exp\/option\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/exp\/option","title":"Exp.Option","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/exp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/exp\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"}],"path":"\/documentation\/mapboxmaps\/exp\/expressionargumentconvertible-implementations","title":"ExpressionArgumentConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/exp","title":"Exp","type":"struct"},{"path":"\/documentation\/mapboxmaps\/expression","title":"Expression","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/init(fontscale:textfont:textcolor:)","title":"init(fontScale: Value<Double>?, textFont: Value<[String]>?, textColor: Value<StyleColor>?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/fontscale","title":"var fontScale: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/textcolor","title":"var textColor: Value<StyleColor>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/textfont","title":"var textFont: Value<[String]>?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/formatoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/formatoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/formatoptions","title":"FormatOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/init(locale:currency:minfractiondigits:maxfractiondigits:)","title":"init(locale: String?, currency: String?, minFractionDigits: Int?, maxFractionDigits: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/currency","title":"var currency: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/locale","title":"var locale: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/maxfractiondigits","title":"var maxFractionDigits: Int?","type":"property"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/minfractiondigits","title":"var minFractionDigits: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/numberformatoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/numberformatoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/numberformatoptions","title":"NumberFormatOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/init(casesensitive:diacriticsensitive:locale:)","title":"init(caseSensitive: Bool?, diacriticSensitive: Bool?, locale: String?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/casesensitive","title":"var caseSensitive: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/diacriticsensitive","title":"var diacriticSensitive: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/locale","title":"var locale: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/collatoroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/collatoroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/collatoroptions","title":"CollatorOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imageoptions\/init(_:)","title":"init([String : ImageOptions.ColorLike])","type":"init"},{"path":"\/documentation\/mapboxmaps\/imageoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imageoptions\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"},{"path":"\/documentation\/mapboxmaps\/imageoptions\/options","title":"var options: [String : ImageOptions.ColorLike]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imageoptions\/colorlike","title":"ImageOptions.ColorLike","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/imageoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/imageoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/imageoptions","title":"ImageOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expressionargumentconvertible\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"}],"path":"\/documentation\/mapboxmaps\/expressionargumentconvertible","title":"ExpressionArgumentConvertible","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/expressionargumentbuilder\/buildblock(_:)","title":"static func buildBlock(any ExpressionArgumentConvertible...) -> [Exp.Argument]","type":"method"}],"path":"\/documentation\/mapboxmaps\/expressionargumentbuilder","title":"ExpressionArgumentBuilder","type":"struct"}],"path":"\/documentation\/mapboxmaps\/expressions","title":"Expressions","type":"symbol"},{"title":"Annotations","type":"groupMarker"},{"children":[{"title":"Annotations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/annotationmanagersbyid","title":"var annotationManagersById: [String : any AnnotationManager]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makecircleannotationmanager(id:layerposition:)","title":"func makeCircleAnnotationManager(id: String, layerPosition: LayerPosition?) -> CircleAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makepointannotationmanager(id:layerposition:clusteroptions:onclustertap:onclusterlongpress:)","title":"func makePointAnnotationManager(id: String, layerPosition: LayerPosition?, clusterOptions: ClusterOptions?, onClusterTap: ((AnnotationClusterGestureContext) -> Void)?, onClusterLongPress: ((AnnotationClusterGestureContext) -> Void)?) -> PointAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makepolygonannotationmanager(id:layerposition:)","title":"func makePolygonAnnotationManager(id: String, layerPosition: LayerPosition?) -> PolygonAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/makepolylineannotationmanager(id:layerposition:)","title":"func makePolylineAnnotationManager(id: String, layerPosition: LayerPosition?) -> PolylineAnnotationManager","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotationorchestrator\/removeannotationmanager(withid:)","title":"func removeAnnotationManager(withId: String)","type":"method"}],"path":"\/documentation\/mapboxmaps\/annotationorchestrator","title":"AnnotationOrchestrator","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationinteractiondelegate\/annotationmanager(_:diddetecttappedannotations:)","title":"func annotationManager(any AnnotationManager, didDetectTappedAnnotations: [any Annotation])","type":"method"}],"path":"\/documentation\/mapboxmaps\/annotationinteractiondelegate","title":"AnnotationInteractionDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotation\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/annotation","title":"Annotation","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationmanager\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotationmanager\/layerid","title":"var layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotationmanager\/slot","title":"var slot: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotationmanager\/sourceid","title":"var sourceId: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/annotationmanager","title":"AnnotationManager","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/init(id:centercoordinate:isselected:isdraggable:)","title":"init(id: String, centerCoordinate: CLLocationCoordinate2D, isSelected: Bool, isDraggable: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/init(id:point:isselected:isdraggable:)","title":"init(id: String, point: Point, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleblur","title":"var circleBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleblurtransition","title":"var circleBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolor","title":"var circleColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolortransition","title":"var circleColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolorusetheme","title":"var circleColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleopacity","title":"var circleOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleopacitytransition","title":"var circleOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleradius","title":"var circleRadius: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleradiustransition","title":"var circleRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlesortkey","title":"var circleSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolor","title":"var circleStrokeColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolortransition","title":"var circleStrokeColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolorusetheme","title":"var circleStrokeColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokeopacity","title":"var circleStrokeOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokeopacitytransition","title":"var circleStrokeOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokewidth","title":"var circleStrokeWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokewidthtransition","title":"var circleStrokeWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/customdata","title":"var customData: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/dragbeginhandler","title":"var dragBeginHandler: ((inout CircleAnnotation, InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/dragchangehandler","title":"var dragChangeHandler: ((inout CircleAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/dragendhandler","title":"var dragEndHandler: ((inout CircleAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/longpresshandler","title":"var longPressHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/point","title":"var point: Point","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/taphandler","title":"var tapHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleblur(_:)","title":"func circleBlur(Double) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleblurtransition(_:)","title":"func circleBlurTransition(StyleTransition) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolor(_:)-2jbxr","title":"func circleColor(StyleColor) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolor(_:)-6t3y1","title":"func circleColor(UIColor) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolortransition(_:)","title":"func circleColorTransition(StyleTransition) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlecolorusetheme(_:)","title":"func circleColorUseTheme(ColorUseTheme) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleopacity(_:)","title":"func circleOpacity(Double) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleopacitytransition(_:)","title":"func circleOpacityTransition(StyleTransition) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleradius(_:)","title":"func circleRadius(Double) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circleradiustransition(_:)","title":"func circleRadiusTransition(StyleTransition) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlesortkey(_:)","title":"func circleSortKey(Double) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolor(_:)-43q0","title":"func circleStrokeColor(UIColor) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolor(_:)-8a5ha","title":"func circleStrokeColor(StyleColor) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolortransition(_:)","title":"func circleStrokeColorTransition(StyleTransition) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokecolorusetheme(_:)","title":"func circleStrokeColorUseTheme(ColorUseTheme) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokeopacity(_:)","title":"func circleStrokeOpacity(Double) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokeopacitytransition(_:)","title":"func circleStrokeOpacityTransition(StyleTransition) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokewidth(_:)","title":"func circleStrokeWidth(Double) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/circlestrokewidthtransition(_:)","title":"func circleStrokeWidthTransition(StyleTransition) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/onlongpressgesture(handler:)-2nt69","title":"func onLongPressGesture(handler: () -> Void) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/onlongpressgesture(handler:)-5ojjf","title":"func onLongPressGesture(handler: (InteractionContext) -> Bool) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/ontapgesture(handler:)-5bx24","title":"func onTapGesture(handler: (InteractionContext) -> Bool) -> CircleAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/ontapgesture(handler:)-6gtu9","title":"func onTapGesture(handler: () -> Void) -> CircleAnnotation","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/circleannotation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/circleannotation","title":"CircleAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/annotations","title":"var annotations: [CircleAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleblur","title":"var circleBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleblurtransition","title":"var circleBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlecolor","title":"var circleColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlecolortransition","title":"var circleColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlecolorusetheme","title":"var circleColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleemissivestrength","title":"var circleEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleemissivestrengthtransition","title":"var circleEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleopacity","title":"var circleOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleopacitytransition","title":"var circleOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlepitchalignment","title":"var circlePitchAlignment: CirclePitchAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlepitchscale","title":"var circlePitchScale: CirclePitchScale?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleradius","title":"var circleRadius: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circleradiustransition","title":"var circleRadiusTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlesortkey","title":"var circleSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlestrokecolor","title":"var circleStrokeColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlestrokecolortransition","title":"var circleStrokeColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlestrokecolorusetheme","title":"var circleStrokeColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlestrokeopacity","title":"var circleStrokeOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlestrokeopacitytransition","title":"var circleStrokeOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlestrokewidth","title":"var circleStrokeWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circlestrokewidthtransition","title":"var circleStrokeWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circletranslate","title":"var circleTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circletranslateanchor","title":"var circleTranslateAnchor: CircleTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/circletranslatetransition","title":"var circleTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/delegate","title":"var delegate: (any AnnotationInteractionDelegate)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/layerid","title":"var layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/longpressradius","title":"var longPressRadius: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/slot","title":"var slot: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/circleannotationmanager\/tapradius","title":"var tapRadius: CGFloat?","type":"property"}],"path":"\/documentation\/mapboxmaps\/circleannotationmanager","title":"CircleAnnotationManager","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/init(image:name:)","title":"init(image: UIImage, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/image","title":"var image: UIImage","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.struct","title":"PointAnnotation.Image","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/init(id:coordinate:isselected:isdraggable:)","title":"init(id: String, coordinate: CLLocationCoordinate2D, isSelected: Bool, isDraggable: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/init(id:point:isselected:isdraggable:)","title":"init(id: String, point: Point, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/customdata","title":"var customData: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/dragbeginhandler","title":"var dragBeginHandler: ((inout PointAnnotation, InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/dragchangehandler","title":"var dragChangeHandler: ((inout PointAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/dragendhandler","title":"var dragEndHandler: ((inout PointAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconanchor","title":"var iconAnchor: IconAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolor","title":"var iconColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolortransition","title":"var iconColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolorusetheme","title":"var iconColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconemissivestrength","title":"var iconEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconemissivestrengthtransition","title":"var iconEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhaloblur","title":"var iconHaloBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhaloblurtransition","title":"var iconHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolor","title":"var iconHaloColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolortransition","title":"var iconHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolorusetheme","title":"var iconHaloColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalowidth","title":"var iconHaloWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalowidthtransition","title":"var iconHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimage","title":"var iconImage: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimagecrossfade","title":"var iconImageCrossFade: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimagecrossfadetransition","title":"var iconImageCrossFadeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconocclusionopacity","title":"var iconOcclusionOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconocclusionopacitytransition","title":"var iconOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconoffset","title":"var iconOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconopacity","title":"var iconOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconopacitytransition","title":"var iconOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconrotate","title":"var iconRotate: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconsize","title":"var iconSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/icontextfit","title":"var iconTextFit: IconTextFit?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/icontextfitpadding","title":"var iconTextFitPadding: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image-swift.property","title":"var image: PointAnnotation.Image?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/longpresshandler","title":"var longPressHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/point","title":"var point: Point","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/symbolsortkey","title":"var symbolSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/symbolzoffset","title":"var symbolZOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/symbolzoffsettransition","title":"var symbolZOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/taphandler","title":"var tapHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textanchor","title":"var textAnchor: TextAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolor","title":"var textColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolortransition","title":"var textColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolorusetheme","title":"var textColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textemissivestrength","title":"var textEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textemissivestrengthtransition","title":"var textEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textfield","title":"var textField: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthaloblur","title":"var textHaloBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthaloblurtransition","title":"var textHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolor","title":"var textHaloColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolortransition","title":"var textHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolorusetheme","title":"var textHaloColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalowidth","title":"var textHaloWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalowidthtransition","title":"var textHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textjustify","title":"var textJustify: TextJustify?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textletterspacing","title":"var textLetterSpacing: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textlineheight","title":"var textLineHeight: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textmaxwidth","title":"var textMaxWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textocclusionopacity","title":"var textOcclusionOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textocclusionopacitytransition","title":"var textOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textoffset","title":"var textOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textopacity","title":"var textOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textopacitytransition","title":"var textOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textradialoffset","title":"var textRadialOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textrotate","title":"var textRotate: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textsize","title":"var textSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texttransform","title":"var textTransform: TextTransform?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconanchor(_:)","title":"func iconAnchor(IconAnchor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolor(_:)-5ix1l","title":"func iconColor(StyleColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolor(_:)-6sxep","title":"func iconColor(UIColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolortransition(_:)","title":"func iconColorTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconcolorusetheme(_:)","title":"func iconColorUseTheme(ColorUseTheme) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconemissivestrength(_:)","title":"func iconEmissiveStrength(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconemissivestrengthtransition(_:)","title":"func iconEmissiveStrengthTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhaloblur(_:)","title":"func iconHaloBlur(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhaloblurtransition(_:)","title":"func iconHaloBlurTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolor(_:)-4hgyg","title":"func iconHaloColor(UIColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolor(_:)-5zoje","title":"func iconHaloColor(StyleColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolortransition(_:)","title":"func iconHaloColorTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalocolorusetheme(_:)","title":"func iconHaloColorUseTheme(ColorUseTheme) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalowidth(_:)","title":"func iconHaloWidth(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconhalowidthtransition(_:)","title":"func iconHaloWidthTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimage(_:)","title":"func iconImage(String) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimagecrossfade(_:)","title":"func iconImageCrossFade(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconimagecrossfadetransition(_:)","title":"func iconImageCrossFadeTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconocclusionopacity(_:)","title":"func iconOcclusionOpacity(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconocclusionopacitytransition(_:)","title":"func iconOcclusionOpacityTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconoffset(x:y:)","title":"func iconOffset(x: Double, y: Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconopacity(_:)","title":"func iconOpacity(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconopacitytransition(_:)","title":"func iconOpacityTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconrotate(_:)","title":"func iconRotate(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/iconsize(_:)","title":"func iconSize(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/icontextfit(_:)","title":"func iconTextFit(IconTextFit) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/icontextfitpadding(_:)","title":"func iconTextFitPadding(UIEdgeInsets) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image(_:)","title":"func image(PointAnnotation.Image?) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/image(named:)","title":"func image(named: String) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/onlongpressgesture(handler:)-4wbla","title":"func onLongPressGesture(handler: () -> Void) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/onlongpressgesture(handler:)-72d3x","title":"func onLongPressGesture(handler: (InteractionContext) -> Bool) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/ontapgesture(handler:)-45w1k","title":"func onTapGesture(handler: (InteractionContext) -> Bool) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/ontapgesture(handler:)-4ad52","title":"func onTapGesture(handler: () -> Void) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/symbolsortkey(_:)","title":"func symbolSortKey(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/symbolzoffset(_:)","title":"func symbolZOffset(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/symbolzoffsettransition(_:)","title":"func symbolZOffsetTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textanchor(_:)","title":"func textAnchor(TextAnchor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolor(_:)-10feb","title":"func textColor(StyleColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolor(_:)-8u1ax","title":"func textColor(UIColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolortransition(_:)","title":"func textColorTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textcolorusetheme(_:)","title":"func textColorUseTheme(ColorUseTheme) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textemissivestrength(_:)","title":"func textEmissiveStrength(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textemissivestrengthtransition(_:)","title":"func textEmissiveStrengthTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textfield(_:)","title":"func textField(String) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthaloblur(_:)","title":"func textHaloBlur(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthaloblurtransition(_:)","title":"func textHaloBlurTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolor(_:)-62mn4","title":"func textHaloColor(UIColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolor(_:)-8jy96","title":"func textHaloColor(StyleColor) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolortransition(_:)","title":"func textHaloColorTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalocolorusetheme(_:)","title":"func textHaloColorUseTheme(ColorUseTheme) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalowidth(_:)","title":"func textHaloWidth(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texthalowidthtransition(_:)","title":"func textHaloWidthTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textjustify(_:)","title":"func textJustify(TextJustify) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textletterspacing(_:)","title":"func textLetterSpacing(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textlineheight(_:)","title":"func textLineHeight(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textmaxwidth(_:)","title":"func textMaxWidth(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textocclusionopacity(_:)","title":"func textOcclusionOpacity(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textocclusionopacitytransition(_:)","title":"func textOcclusionOpacityTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textoffset(x:y:)","title":"func textOffset(x: Double, y: Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textopacity(_:)","title":"func textOpacity(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textopacitytransition(_:)","title":"func textOpacityTransition(StyleTransition) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textradialoffset(_:)","title":"func textRadialOffset(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textrotate(_:)","title":"func textRotate(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/textsize(_:)","title":"func textSize(Double) -> PointAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/texttransform(_:)","title":"func textTransform(TextTransform) -> PointAnnotation","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/pointannotation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/pointannotation","title":"PointAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/annotations","title":"var annotations: [PointAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/delegate","title":"var delegate: (any AnnotationInteractionDelegate)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconallowoverlap","title":"var iconAllowOverlap: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconanchor","title":"var iconAnchor: IconAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconcolor","title":"var iconColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconcolorsaturation","title":"var iconColorSaturation: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconcolorsaturationtransition","title":"var iconColorSaturationTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconcolortransition","title":"var iconColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconcolorusetheme","title":"var iconColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconemissivestrength","title":"var iconEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconemissivestrengthtransition","title":"var iconEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconhaloblur","title":"var iconHaloBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconhaloblurtransition","title":"var iconHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconhalocolor","title":"var iconHaloColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconhalocolortransition","title":"var iconHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconhalocolorusetheme","title":"var iconHaloColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconhalowidth","title":"var iconHaloWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconhalowidthtransition","title":"var iconHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconignoreplacement","title":"var iconIgnorePlacement: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconimage","title":"var iconImage: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconimagecrossfade","title":"var iconImageCrossFade: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconimagecrossfadetransition","title":"var iconImageCrossFadeTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconkeepupright","title":"var iconKeepUpright: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconocclusionopacity","title":"var iconOcclusionOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconocclusionopacitytransition","title":"var iconOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconoffset","title":"var iconOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconopacity","title":"var iconOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconopacitytransition","title":"var iconOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconoptional","title":"var iconOptional: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconpadding","title":"var iconPadding: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconpitchalignment","title":"var iconPitchAlignment: IconPitchAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconrotate","title":"var iconRotate: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconrotationalignment","title":"var iconRotationAlignment: IconRotationAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconsize","title":"var iconSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/iconsizescalerange","title":"var iconSizeScaleRange: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontextfit","title":"var iconTextFit: IconTextFit?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontextfitpadding","title":"var iconTextFitPadding: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontranslate","title":"var iconTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontranslateanchor","title":"var iconTranslateAnchor: IconTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/icontranslatetransition","title":"var iconTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/layerid","title":"var layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/longpressradius","title":"var longPressRadius: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/onclusterlongpress","title":"var onClusterLongPress: ((AnnotationClusterGestureContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/onclustertap","title":"var onClusterTap: ((AnnotationClusterGestureContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/slot","title":"var slot: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolavoidedges","title":"var symbolAvoidEdges: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolelevationreference","title":"var symbolElevationReference: SymbolElevationReference?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolplacement","title":"var symbolPlacement: SymbolPlacement?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolsortkey","title":"var symbolSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolspacing","title":"var symbolSpacing: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolzelevate","title":"var symbolZElevate: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolzoffset","title":"var symbolZOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolzoffsettransition","title":"var symbolZOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/symbolzorder","title":"var symbolZOrder: SymbolZOrder?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/tapradius","title":"var tapRadius: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textallowoverlap","title":"var textAllowOverlap: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textanchor","title":"var textAnchor: TextAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textcolor","title":"var textColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textcolortransition","title":"var textColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textcolorusetheme","title":"var textColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textemissivestrength","title":"var textEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textemissivestrengthtransition","title":"var textEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textfield","title":"var textField: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textfont","title":"var textFont: [String]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texthaloblur","title":"var textHaloBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texthaloblurtransition","title":"var textHaloBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texthalocolor","title":"var textHaloColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texthalocolortransition","title":"var textHaloColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texthalocolorusetheme","title":"var textHaloColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texthalowidth","title":"var textHaloWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texthalowidthtransition","title":"var textHaloWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textignoreplacement","title":"var textIgnorePlacement: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textjustify","title":"var textJustify: TextJustify?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textkeepupright","title":"var textKeepUpright: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textletterspacing","title":"var textLetterSpacing: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textlineheight","title":"var textLineHeight: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textmaxangle","title":"var textMaxAngle: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textmaxwidth","title":"var textMaxWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textocclusionopacity","title":"var textOcclusionOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textocclusionopacitytransition","title":"var textOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textoffset","title":"var textOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textopacity","title":"var textOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textopacitytransition","title":"var textOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textoptional","title":"var textOptional: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textpadding","title":"var textPadding: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textpitchalignment","title":"var textPitchAlignment: TextPitchAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textradialoffset","title":"var textRadialOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textrotate","title":"var textRotate: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textrotationalignment","title":"var textRotationAlignment: TextRotationAlignment?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textsize","title":"var textSize: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textsizescalerange","title":"var textSizeScaleRange: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texttransform","title":"var textTransform: TextTransform?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texttranslate","title":"var textTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texttranslateanchor","title":"var textTranslateAnchor: TextTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/texttranslatetransition","title":"var textTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textvariableanchor","title":"var textVariableAnchor: [TextAnchor]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/pointannotationmanager\/textwritingmode","title":"var textWritingMode: [TextWritingMode]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/pointannotationmanager","title":"PointAnnotationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/init(id:polygon:isselected:isdraggable:)","title":"init(id: String, polygon: Polygon, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/customdata","title":"var customData: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/dragbeginhandler","title":"var dragBeginHandler: ((inout PolygonAnnotation, InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/dragchangehandler","title":"var dragChangeHandler: ((inout PolygonAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/dragendhandler","title":"var dragEndHandler: ((inout PolygonAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolor","title":"var fillColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolortransition","title":"var fillColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolorusetheme","title":"var fillColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillopacity","title":"var fillOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillopacitytransition","title":"var fillOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolor","title":"var fillOutlineColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolortransition","title":"var fillOutlineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolorusetheme","title":"var fillOutlineColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillpattern","title":"var fillPattern: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillsortkey","title":"var fillSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillzoffset","title":"var fillZOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillzoffsettransition","title":"var fillZOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/longpresshandler","title":"var longPressHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/polygon","title":"var polygon: Polygon","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/taphandler","title":"var tapHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolor(_:)-1nlu6","title":"func fillColor(StyleColor) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolor(_:)-1sh1m","title":"func fillColor(UIColor) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolortransition(_:)","title":"func fillColorTransition(StyleTransition) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillcolorusetheme(_:)","title":"func fillColorUseTheme(ColorUseTheme) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillopacity(_:)","title":"func fillOpacity(Double) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillopacitytransition(_:)","title":"func fillOpacityTransition(StyleTransition) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolor(_:)-33eln","title":"func fillOutlineColor(UIColor) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolor(_:)-83w3m","title":"func fillOutlineColor(StyleColor) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolortransition(_:)","title":"func fillOutlineColorTransition(StyleTransition) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/filloutlinecolorusetheme(_:)","title":"func fillOutlineColorUseTheme(ColorUseTheme) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillpattern(_:)","title":"func fillPattern(String) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillsortkey(_:)","title":"func fillSortKey(Double) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillzoffset(_:)","title":"func fillZOffset(Double) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/fillzoffsettransition(_:)","title":"func fillZOffsetTransition(StyleTransition) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/onlongpressgesture(handler:)-2jveh","title":"func onLongPressGesture(handler: () -> Void) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/onlongpressgesture(handler:)-7qfai","title":"func onLongPressGesture(handler: (InteractionContext) -> Bool) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/ontapgesture(handler:)-7t13r","title":"func onTapGesture(handler: (InteractionContext) -> Bool) -> PolygonAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/ontapgesture(handler:)-9uorw","title":"func onTapGesture(handler: () -> Void) -> PolygonAnnotation","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/polygonannotation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/polygonannotation","title":"PolygonAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/annotations","title":"var annotations: [PolygonAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/delegate","title":"var delegate: (any AnnotationInteractionDelegate)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillantialias","title":"var fillAntialias: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillcolor","title":"var fillColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillcolortransition","title":"var fillColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillcolorusetheme","title":"var fillColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillelevationreference","title":"var fillElevationReference: FillElevationReference?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillemissivestrength","title":"var fillEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillemissivestrengthtransition","title":"var fillEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillopacity","title":"var fillOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillopacitytransition","title":"var fillOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filloutlinecolor","title":"var fillOutlineColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filloutlinecolortransition","title":"var fillOutlineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filloutlinecolorusetheme","title":"var fillOutlineColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillpattern","title":"var fillPattern: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillsortkey","title":"var fillSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filltranslate","title":"var fillTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filltranslateanchor","title":"var fillTranslateAnchor: FillTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/filltranslatetransition","title":"var fillTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillzoffset","title":"var fillZOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/fillzoffsettransition","title":"var fillZOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/layerid","title":"var layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/longpressradius","title":"var longPressRadius: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/slot","title":"var slot: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polygonannotationmanager\/tapradius","title":"var tapRadius: CGFloat?","type":"property"}],"path":"\/documentation\/mapboxmaps\/polygonannotationmanager","title":"PolygonAnnotationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/init(id:linecoordinates:isselected:isdraggable:)","title":"init(id: String, lineCoordinates: [CLLocationCoordinate2D], isSelected: Bool, isDraggable: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/init(id:linestring:isselected:isdraggable:)","title":"init(id: String, lineString: LineString, isSelected: Bool, isDraggable: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/customdata","title":"var customData: JSONObject","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/dragbeginhandler","title":"var dragBeginHandler: ((inout PolylineAnnotation, InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/dragchangehandler","title":"var dragChangeHandler: ((inout PolylineAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/dragendhandler","title":"var dragEndHandler: ((inout PolylineAnnotation, InteractionContext) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/isdraggable","title":"var isDraggable: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineblur","title":"var lineBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineblurtransition","title":"var lineBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolor","title":"var lineBorderColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolortransition","title":"var lineBorderColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolorusetheme","title":"var lineBorderColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineborderwidth","title":"var lineBorderWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineborderwidthtransition","title":"var lineBorderWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolor","title":"var lineColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolortransition","title":"var lineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolorusetheme","title":"var lineColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linegapwidth","title":"var lineGapWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linegapwidthtransition","title":"var lineGapWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linejoin","title":"var lineJoin: LineJoin?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineoffset","title":"var lineOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineoffsettransition","title":"var lineOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineopacity","title":"var lineOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineopacitytransition","title":"var lineOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linepattern","title":"var linePattern: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linesortkey","title":"var lineSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linestring","title":"var lineString: LineString","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linewidth","title":"var lineWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linewidthtransition","title":"var lineWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linezoffset","title":"var lineZOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/longpresshandler","title":"var longPressHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/taphandler","title":"var tapHandler: ((InteractionContext) -> Bool)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/userinfo","title":"var userInfo: [String : Any]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineblur(_:)","title":"func lineBlur(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineblurtransition(_:)","title":"func lineBlurTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolor(_:)-1g9mw","title":"func lineBorderColor(StyleColor) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolor(_:)-3n2se","title":"func lineBorderColor(UIColor) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolortransition(_:)","title":"func lineBorderColorTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linebordercolorusetheme(_:)","title":"func lineBorderColorUseTheme(ColorUseTheme) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineborderwidth(_:)","title":"func lineBorderWidth(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineborderwidthtransition(_:)","title":"func lineBorderWidthTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolor(_:)-2f6cq","title":"func lineColor(StyleColor) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolor(_:)-7kowb","title":"func lineColor(UIColor) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolortransition(_:)","title":"func lineColorTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linecolorusetheme(_:)","title":"func lineColorUseTheme(ColorUseTheme) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linegapwidth(_:)","title":"func lineGapWidth(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linegapwidthtransition(_:)","title":"func lineGapWidthTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linejoin(_:)","title":"func lineJoin(LineJoin) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineoffset(_:)","title":"func lineOffset(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineoffsettransition(_:)","title":"func lineOffsetTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineopacity(_:)","title":"func lineOpacity(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/lineopacitytransition(_:)","title":"func lineOpacityTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linepattern(_:)","title":"func linePattern(String) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linesortkey(_:)","title":"func lineSortKey(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linewidth(_:)","title":"func lineWidth(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linewidthtransition(_:)","title":"func lineWidthTransition(StyleTransition) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/linezoffset(_:)","title":"func lineZOffset(Double) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/onlongpressgesture(handler:)-57x2d","title":"func onLongPressGesture(handler: (InteractionContext) -> Bool) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/onlongpressgesture(handler:)-8v9v9","title":"func onLongPressGesture(handler: () -> Void) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/ontapgesture(handler:)-2e24p","title":"func onTapGesture(handler: (InteractionContext) -> Bool) -> PolylineAnnotation","type":"method"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/ontapgesture(handler:)-tfnm","title":"func onTapGesture(handler: () -> Void) -> PolylineAnnotation","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/polylineannotation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/polylineannotation","title":"PolylineAnnotation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/annotations","title":"var annotations: [PolylineAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/delegate","title":"var delegate: (any AnnotationInteractionDelegate)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/layerid","title":"var layerId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineblur","title":"var lineBlur: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineblurtransition","title":"var lineBlurTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linebordercolor","title":"var lineBorderColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linebordercolortransition","title":"var lineBorderColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linebordercolorusetheme","title":"var lineBorderColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineborderwidth","title":"var lineBorderWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineborderwidthtransition","title":"var lineBorderWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linecap","title":"var lineCap: LineCap?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linecolor","title":"var lineColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linecolortransition","title":"var lineColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linecolorusetheme","title":"var lineColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linecrossslope","title":"var lineCrossSlope: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linedasharray","title":"var lineDasharray: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linedepthocclusionfactor","title":"var lineDepthOcclusionFactor: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linedepthocclusionfactortransition","title":"var lineDepthOcclusionFactorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineelevationreference","title":"var lineElevationReference: LineElevationReference?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineemissivestrength","title":"var lineEmissiveStrength: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineemissivestrengthtransition","title":"var lineEmissiveStrengthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linegapwidth","title":"var lineGapWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linegapwidthtransition","title":"var lineGapWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linejoin","title":"var lineJoin: LineJoin?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linemiterlimit","title":"var lineMiterLimit: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineocclusionopacity","title":"var lineOcclusionOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineocclusionopacitytransition","title":"var lineOcclusionOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineoffset","title":"var lineOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineoffsettransition","title":"var lineOffsetTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineopacity","title":"var lineOpacity: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineopacitytransition","title":"var lineOpacityTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linepattern","title":"var linePattern: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/lineroundlimit","title":"var lineRoundLimit: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linesortkey","title":"var lineSortKey: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetranslate","title":"var lineTranslate: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetranslateanchor","title":"var lineTranslateAnchor: LineTranslateAnchor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetranslatetransition","title":"var lineTranslateTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetrimcolor","title":"var lineTrimColor: StyleColor?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetrimcolortransition","title":"var lineTrimColorTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetrimcolorusetheme","title":"var lineTrimColorUseTheme: ColorUseTheme?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetrimfaderange","title":"var lineTrimFadeRange: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linetrimoffset","title":"var lineTrimOffset: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linewidth","title":"var lineWidth: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linewidthtransition","title":"var lineWidthTransition: StyleTransition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linewidthunit","title":"var lineWidthUnit: LineWidthUnit?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/linezoffset","title":"var lineZOffset: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/longpressradius","title":"var longPressRadius: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/slot","title":"var slot: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/sourceid","title":"var sourceId: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/polylineannotationmanager\/tapradius","title":"var tapRadius: CGFloat?","type":"property"}],"path":"\/documentation\/mapboxmaps\/polylineannotationmanager","title":"PolylineAnnotationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/clusteroptions\/init(circleradius:circlecolor:textcolor:textsize:textfield:clusterradius:clustermaxzoom:clusterminpoints:clusterproperties:)","title":"init(circleRadius: Value<Double>, circleColor: Value<StyleColor>, textColor: Value<StyleColor>, textSize: Value<Double>, textField: Value<String>, clusterRadius: Double, clusterMaxZoom: Double, clusterMinPoints: Double, clusterProperties: [String : Exp]?)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/clusteroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/clusteroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/clusteroptions","title":"ClusterOptions","type":"struct"}],"path":"\/documentation\/mapboxmaps\/layer-annotations","title":"Layer Annotations","type":"symbol"},{"children":[{"title":"View Annotations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/init(annotatedfeature:view:)","title":"init(annotatedFeature: AnnotatedFeature, view: UIView)","type":"init"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/init(coordinate:view:)","title":"convenience init(coordinate: CLLocationCoordinate2D, view: UIView)","type":"init"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/init(layerid:featureid:view:)","title":"convenience init(layerId: String, featureId: String?, view: UIView)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/allowoverlap","title":"var allowOverlap: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/allowoverlapwithpuck","title":"var allowOverlapWithPuck: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/allowzelevate","title":"var allowZElevate: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/anchorconfig","title":"var anchorConfig: ViewAnnotationAnchorConfig?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/anchorcoordinate","title":"var anchorCoordinate: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/annotatedfeature","title":"var annotatedFeature: AnnotatedFeature","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/ignorecamerapadding","title":"var ignoreCameraPadding: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/maxzoom","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/minzoom","title":"var minZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/onanchorchanged","title":"var onAnchorChanged: ((ViewAnnotationAnchorConfig) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/onanchorcoordinatechanged","title":"var onAnchorCoordinateChanged: ((CLLocationCoordinate2D) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/onframechanged","title":"var onFrameChanged: ((CGRect) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/onvisibilitychanged","title":"var onVisibilityChanged: ((Bool) -> Void)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/priority","title":"var priority: Int?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/selected","title":"var selected: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/variableanchors","title":"var variableAnchors: [ViewAnnotationAnchorConfig]","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/view","title":"let view: UIView","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/visible","title":"var visible: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/remove()","title":"func remove()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotation\/setneedsupdatesize()","title":"func setNeedsUpdateSize()","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotation","title":"ViewAnnotation","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/allannotations","title":"var allAnnotations: [ViewAnnotation]","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/annotations","title":"var annotations: [UIView : ViewAnnotationOptions]","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/validatesviews","title":"var validatesViews: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/viewannotationavoidlayers","title":"var viewAnnotationAvoidLayers: Set<String>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/add(_:)","title":"func add(ViewAnnotation)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/add(_:id:options:)","title":"func add(UIView, id: String?, options: ViewAnnotationOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/add(_:options:)","title":"func add(UIView, options: ViewAnnotationOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/addviewannotationupdateobserver(_:)","title":"func addViewAnnotationUpdateObserver(any ViewAnnotationUpdateObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/camera(forannotations:padding:bearing:pitch:)-5oqrz","title":"func camera(forAnnotations: [ViewAnnotation], padding: UIEdgeInsets, bearing: CGFloat?, pitch: CGFloat?) -> CameraOptions?","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/camera(forannotations:padding:bearing:pitch:)-6gqyr","title":"func camera(forAnnotations: [String], padding: UIEdgeInsets, bearing: CGFloat?, pitch: CGFloat?) -> CameraOptions?","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/options(for:)","title":"func options(for: UIView) -> ViewAnnotationOptions?","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/remove(_:)","title":"func remove(UIView)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/removeviewannotationupdateobserver(_:)","title":"func removeViewAnnotationUpdateObserver(any ViewAnnotationUpdateObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/update(_:options:)","title":"func update(UIView, options: ViewAnnotationOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanager\/view(forid:)","title":"func view(forId: String) -> UIView?","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanager","title":"ViewAnnotationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/init(annotatedfeature:width:height:allowoverlap:allowoverlapwithpuck:visible:priority:variableanchors:ignorecamerapadding:minzoom:maxzoom:)","title":"init(annotatedFeature: AnnotatedFeature?, width: CGFloat?, height: CGFloat?, allowOverlap: Bool?, allowOverlapWithPuck: Bool?, visible: Bool?, priority: Int?, variableAnchors: [ViewAnnotationAnchorConfig]?, ignoreCameraPadding: Bool?, minZoom: Double?, maxZoom: Double?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/init(annotatedfeature:width:height:allowoverlap:allowoverlapwithpuck:visible:selected:variableanchors:ignorecamerapadding:minzoom:maxzoom:)","title":"init(annotatedFeature: AnnotatedFeature?, width: CGFloat?, height: CGFloat?, allowOverlap: Bool?, allowOverlapWithPuck: Bool?, visible: Bool?, selected: Bool?, variableAnchors: [ViewAnnotationAnchorConfig]?, ignoreCameraPadding: Bool?, minZoom: Double?, maxZoom: Double?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/init(geometry:width:height:associatedfeatureid:allowoverlap:visible:anchor:offsetx:offsety:selected:)","title":"init(geometry: (any GeometryConvertible)?, width: CGFloat?, height: CGFloat?, associatedFeatureId: String?, allowOverlap: Bool?, visible: Bool?, anchor: ViewAnnotationAnchor?, offsetX: CGFloat?, offsetY: CGFloat?, selected: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/allowoverlap","title":"var allowOverlap: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/allowoverlapwithpuck","title":"var allowOverlapWithPuck: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/allowzelevate","title":"var allowZElevate: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/annotatedfeature","title":"var annotatedFeature: AnnotatedFeature?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/height","title":"var height: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/ignorecamerapadding","title":"var ignoreCameraPadding: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/minzoom","title":"var minZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/priority","title":"var priority: Int?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/selected","title":"var selected: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/variableanchors","title":"var variableAnchors: [ViewAnnotationAnchorConfig]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/visible","title":"var visible: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/width","title":"var width: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewannotationoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewannotationoptions","title":"ViewAnnotationOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/message","title":"let message: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/annotatedfeaturemissing","title":"static let annotatedFeatureMissing: ViewAnnotationManagerError","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/annotationnotfound","title":"static let annotationNotFound: ViewAnnotationManagerError","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/viewisalreadyadded","title":"static let viewIsAlreadyAdded: ViewAnnotationManagerError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewannotationmanagererror","title":"ViewAnnotationManagerError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchorconfig\/anchor","title":"var anchor: ViewAnnotationAnchor","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchorconfig\/offsetx","title":"var offsetX: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchorconfig\/offsety","title":"var offsetY: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchorconfig\/isequal(to:)","title":"func isEqual(to: ViewAnnotationAnchorConfig) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotationanchorconfig","title":"ViewAnnotationAnchorConfig","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/anchorconfig","title":"var anchorConfig: ViewAnnotationAnchorConfig","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/anchorcoordinate","title":"var anchorCoordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/height","title":"var height: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor\/width","title":"var width: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/viewannotationpositiondescriptor","title":"ViewAnnotationPositionDescriptor","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationupdateobserver\/framesdidchange(for:)","title":"func framesDidChange(for: [UIView])","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewannotationupdateobserver\/visibilitydidchange(for:)","title":"func visibilityDidChange(for: [UIView])","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotationupdateobserver","title":"ViewAnnotationUpdateObserver","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/center","title":"case center","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/left","title":"case left","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/right","title":"case right","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/top","title":"case top","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/topright","title":"case topRight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewannotationanchor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewannotationanchor","title":"ViewAnnotationAnchor","type":"enum"}],"path":"\/documentation\/mapboxmaps\/view-annotations","title":"View Annotations","type":"symbol"},{"title":"Advanced","type":"groupMarker"},{"children":[{"title":"Signpost","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/core","title":"static let core: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/disabled","title":"static let disabled: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/enabled","title":"static let enabled: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/environmentvariablename","title":"static let environmentVariableName: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/platform","title":"static let platform: Tracing","type":"property"},{"path":"\/documentation\/mapboxmaps\/tracing\/status","title":"static var status: Tracing","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tracing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/mapboxmaps\/tracing\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tracing\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tracing\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tracing\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/tracing\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tracing","title":"Tracing","type":"struct"},{"title":"Map Recording","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maprecorderoptions\/init(timewindow:loggingenabled:compressed:)","title":"init(timeWindow: Int?, loggingEnabled: Bool, compressed: Bool)","type":"init"}],"path":"\/documentation\/mapboxmaps\/maprecorderoptions","title":"MapRecorderOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapplayeroptions\/init(playbackcount:playbackspeedmultiplier:avoidplaybackpauses:)","title":"init(playbackCount: Int, playbackSpeedMultiplier: Double, avoidPlaybackPauses: Bool)","type":"init"}],"path":"\/documentation\/mapboxmaps\/mapplayeroptions","title":"MapPlayerOptions","type":"struct"},{"title":"Performance recording","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/performancestatistics\/init(collectiondurationmillis:maprenderdurationstatistics:cumulativestatistics:perframestatistics:)","title":"init(collectionDurationMillis: Double, mapRenderDurationStatistics: DurationStatistics, cumulativeStatistics: CumulativeRenderingStatistics?, perFrameStatistics: PerFrameRenderingStatistics?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/performancestatistics\/collectiondurationmillis","title":"var collectionDurationMillis: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/performancestatistics\/cumulativestatistics","title":"var cumulativeStatistics: CumulativeRenderingStatistics?","type":"property"},{"path":"\/documentation\/mapboxmaps\/performancestatistics\/maprenderdurationstatistics","title":"var mapRenderDurationStatistics: DurationStatistics","type":"property"},{"path":"\/documentation\/mapboxmaps\/performancestatistics\/perframestatistics","title":"var perFrameStatistics: PerFrameRenderingStatistics?","type":"property"}],"path":"\/documentation\/mapboxmaps\/performancestatistics","title":"PerformanceStatistics","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cumulativerenderingstatistics\/init(drawcalls:texturebytes:vertexbytes:graphicsprograms:graphicsprogramscreationtimemillis:fboswitchcount:)","title":"init(drawCalls: NSNumber?, textureBytes: NSNumber?, vertexBytes: NSNumber?, graphicsPrograms: NSNumber?, graphicsProgramsCreationTimeMillis: NSNumber?, fboSwitchCount: NSNumber?)","type":"init"}],"path":"\/documentation\/mapboxmaps\/cumulativerenderingstatistics","title":"CumulativeRenderingStatistics","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/durationstatistics\/init(maxmillis:medianmillis:)","title":"init(maxMillis: Double, medianMillis: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/durationstatistics\/maxmillis","title":"var maxMillis: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/durationstatistics\/medianmillis","title":"var medianMillis: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/durationstatistics","title":"DurationStatistics","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/groupperformancestatistics\/init(durationmillis:name:)","title":"init(durationMillis: Double, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/groupperformancestatistics\/durationmillis","title":"var durationMillis: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/groupperformancestatistics\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/groupperformancestatistics","title":"GroupPerformanceStatistics","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perframerenderingstatistics\/init(toprendergroups:toprenderlayers:shadowmapdurationstatistics:uploaddurationstatistics:)","title":"init(topRenderGroups: [GroupPerformanceStatistics], topRenderLayers: [GroupPerformanceStatistics], shadowMapDurationStatistics: DurationStatistics, uploadDurationStatistics: DurationStatistics)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/perframerenderingstatistics\/shadowmapdurationstatistics","title":"var shadowMapDurationStatistics: DurationStatistics","type":"property"},{"path":"\/documentation\/mapboxmaps\/perframerenderingstatistics\/toprendergroups","title":"var topRenderGroups: [GroupPerformanceStatistics]","type":"property"},{"path":"\/documentation\/mapboxmaps\/perframerenderingstatistics\/toprenderlayers","title":"var topRenderLayers: [GroupPerformanceStatistics]","type":"property"},{"path":"\/documentation\/mapboxmaps\/perframerenderingstatistics\/uploaddurationstatistics","title":"var uploadDurationStatistics: DurationStatistics","type":"property"}],"path":"\/documentation\/mapboxmaps\/perframerenderingstatistics","title":"PerFrameRenderingStatistics","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/performancestatisticsoptions\/samplingdurationmillis","title":"var samplingDurationMillis: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/performancestatisticsoptions\/isequal(to:)","title":"func isEqual(to: PerformanceStatisticsOptions) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/performancestatisticsoptions","title":"PerformanceStatisticsOptions","type":"class"},{"path":"\/documentation\/mapboxmaps\/performancestatisticscallback","title":"PerformanceStatisticsCallback","type":"typealias"},{"title":"Logs","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/logconfiguration\/getlogginglevel()","title":"class func getLoggingLevel() -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxcommon\/logconfiguration\/getlogginglevel(forcategory:)","title":"class func getLoggingLevel(forCategory: String) -> NSNumber?","type":"method"},{"path":"\/documentation\/mapboxcommon\/logconfiguration\/registerlogwriterbackend(forlogwriter:)","title":"class func registerLogWriterBackend(forLogWriter: (any LogWriterBackend)?)","type":"method"},{"path":"\/documentation\/mapboxcommon\/logconfiguration\/resetlogginglevel(forcategory:)","title":"class func resetLoggingLevel(forCategory: String)","type":"method"},{"path":"\/documentation\/mapboxcommon\/logconfiguration\/setlogginglevelforcategory(_:upto:)","title":"class func setLoggingLevelForCategory(String, upTo: NSNumber?)","type":"method"},{"path":"\/documentation\/mapboxcommon\/logconfiguration\/setlogginglevelforupto(_:)","title":"class func setLoggingLevelForUpTo(NSNumber?)","type":"method"}],"path":"\/documentation\/mapboxcommon\/logconfiguration","title":"LogConfiguration","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/logwriterbackend\/writelog(for:message:)","title":"func writeLog(for: LoggingLevel, message: String)","type":"method"}],"path":"\/documentation\/mapboxcommon\/logwriterbackend","title":"LogWriterBackend","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/logginglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/logginglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/logginglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/logginglevel","title":"LoggingLevel","type":"enum"},{"title":"Debug","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/camera","title":"static let camera: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/collision","title":"static let collision: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/depthbuffer","title":"static let depthBuffer: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/light","title":"static let light: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/modelbounds","title":"static let modelBounds: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/overdraw","title":"static let overdraw: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/padding","title":"static let padding: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/parsestatus","title":"static let parseStatus: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/stencilclip","title":"static let stencilClip: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/tileborders","title":"static let tileBorders: MapViewDebugOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/timestamps","title":"static let timestamps: MapViewDebugOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapviewdebugoptions","title":"MapViewDebugOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/collision","title":"case collision","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/depthbuffer","title":"case depthBuffer","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/layers2dwireframe","title":"case layers2DWireframe","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/layers3dwireframe","title":"case layers3DWireframe","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/light","title":"case light","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/modelbounds","title":"case modelBounds","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/overdraw","title":"case overdraw","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/parsestatus","title":"case parseStatus","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/stencilclip","title":"case stencilClip","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/terrainwireframe","title":"case terrainWireframe","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/tileborders","title":"case tileBorders","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/timestamps","title":"case timestamps","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapdebugoptions\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapdebugoptions","title":"MapDebugOptions","type":"enum"},{"title":"Crashes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/nsexceptionhandler\/try(callback:)","title":"static func `try`<T>(callback: () throws -> T) throws -> T","type":"method"}],"path":"\/documentation\/mapboxcommon\/nsexceptionhandler","title":"NSExceptionHandler","type":"class"}],"path":"\/documentation\/mapboxmaps\/performance","title":"Performance and investigations","type":"symbol"},{"children":[{"title":"TileStore","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tilestore\/alltileregions(completion:)","title":"func allTileRegions(completion: (Result<[TileRegion], any Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/clearambientcache(completion:)","title":"func clearAmbientCache(completion: (Result<UInt32, any Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/estimatetileregion(forid:loadoptions:estimateoptions:progress:completion:)","title":"func estimateTileRegion(forId: String, loadOptions: TileRegionLoadOptions, estimateOptions: TileRegionEstimateOptions?, progress: TileRegionEstimateProgressCallback, completion: (Result<TileRegionEstimateResult, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/loadtileregion(forid:loadoptions:progress:completion:)","title":"func loadTileRegion(forId: String, loadOptions: TileRegionLoadOptions, progress: TileRegionLoadProgressCallback?, completion: (Result<TileRegion, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/removeregion(forid:completion:)","title":"func removeRegion(forId: String, completion: (Result<TileRegion, any Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/removetileregion(forid:)","title":"func removeTileRegion(forId: String)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/setoptionforkey(_:domain:value:)","title":"func setOptionForKey(String, domain: TileDataDomain, value: Any)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/setoptionforkey(_:value:)","title":"func setOptionForKey(String, value: Any)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/subscribe(_:)","title":"func subscribe(any TileStoreObserver) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/tileregion(forid:completion:)","title":"func tileRegion(forId: String, completion: (Result<TileRegion, any Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/tileregioncontainsdescriptors(forid:descriptors:completion:)","title":"func tileRegionContainsDescriptors(forId: String, descriptors: [TilesetDescriptor], completion: (Result<Bool, any Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/tileregiongeometry(forid:completion:)","title":"func tileRegionGeometry(forId: String, completion: (Result<Geometry, any Error>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/tilestore\/tileregionmetadata(forid:completion:)","title":"func tileRegionMetadata(forId: String, completion: (Result<Any, any Error>) -> Void)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tilestore\/default","title":"static var `default`: TileStore","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tilestore\/shared(for:)","title":"static func shared(for: URL) -> TileStore","type":"method"}],"path":"\/documentation\/mapboxcommon\/tilestore","title":"TileStore","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tilestoreoptions\/diskquota","title":"class var diskQuota: String!","type":"property"},{"path":"\/documentation\/mapboxcommon\/tilestoreoptions\/mapboxapiurl","title":"class var mapboxAPIURL: String!","type":"property"},{"path":"\/documentation\/mapboxcommon\/tilestoreoptions\/tileurltemplate","title":"class var tileURLTemplate: String!","type":"property"}],"path":"\/documentation\/mapboxcommon\/tilestoreoptions","title":"TileStoreOptions","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/type","title":"var type: TileCacheBudgetType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/getinmegabytes()","title":"func getInMegabytes() -> TileCacheBudgetInMegabytes","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/getintiles()","title":"func getInTiles() -> TileCacheBudgetInTiles","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/istilecachebudgetinmegabytes()","title":"func isTileCacheBudgetInMegabytes() -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/istilecachebudgetintiles()","title":"func isTileCacheBudgetInTiles() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/fromtilecachebudget(_:)-6xyvi","title":"class func fromTileCacheBudget(TileCacheBudgetInTiles) -> Self","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilecachebudget\/fromtilecachebudget(_:)-8jmbb","title":"class func fromTileCacheBudget(TileCacheBudgetInMegabytes) -> Self","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudget","title":"TileCacheBudget","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes\/init(size:)","title":"init(size: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes\/size","title":"var size: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes\/isequaltotilecachebudget(_:)","title":"func isEqualToTileCacheBudget(TileCacheBudgetInMegabytes) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetinmegabytes","title":"TileCacheBudgetInMegabytes","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles\/init(size:)","title":"init(size: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles\/size","title":"var size: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles\/isequaltotilecachebudget(_:)","title":"func isEqualToTileCacheBudget(TileCacheBudgetInTiles) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgetintiles","title":"TileCacheBudgetInTiles","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/init(tilesize:minzoom:maxzoom:roundzoom:)","title":"init(tileSize: UInt16?, minZoom: UInt8?, maxZoom: UInt8?, roundZoom: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/maxzoom","title":"var maxZoom: UInt8?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/minzoom","title":"var minZoom: UInt8?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/roundzoom","title":"var roundZoom: Bool?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilecoveroptions\/tilesize","title":"var tileSize: UInt16?","type":"property"}],"path":"\/documentation\/mapboxmaps\/tilecoveroptions","title":"TileCoverOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/init(tolerance:tilesize:buffer:clip:wrap:)","title":"init(tolerance: Double, tileSize: UInt16, buffer: UInt16, clip: Bool, wrap: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/buffer","title":"var buffer: UInt16","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/clip","title":"var clip: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/tilesize","title":"var tileSize: UInt16","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/tolerance","title":"var tolerance: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileoptions\/wrap","title":"var wrap: Bool","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileoptions","title":"TileOptions","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregion\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregion\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregion\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregion\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregion\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxcommon\/tileregion","title":"TileRegion","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/canceled(_:)","title":"case canceled(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/diskfull(_:)","title":"case diskFull(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/doesnotexist(_:)","title":"case doesNotExist(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/other(_:)","title":"case other(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/tilecountexceeded(_:)","title":"case tileCountExceeded(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/tilesetdescriptor(_:)","title":"case tilesetDescriptor(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tileregionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tileregionerror","title":"TileRegionError","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/init(geometry:descriptors:metadata:acceptexpired:networkrestriction:averagebytespersecond:extraoptions:)","title":"convenience init?(geometry: Geometry?, descriptors: [TilesetDescriptor]?, metadata: Any?, acceptExpired: Bool, networkRestriction: NetworkRestriction, averageBytesPerSecond: Int?, extraOptions: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/acceptexpired","title":"var acceptExpired: Bool","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/averagebytespersecond","title":"var averageBytesPerSecond: Int?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/descriptors","title":"var descriptors: [TilesetDescriptor]?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/extraoptions","title":"var extraOptions: Any?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/geometry","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/metadata","title":"var metadata: Any?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadoptions\/networkrestriction","title":"var networkRestriction: NetworkRestriction","type":"property"}],"path":"\/documentation\/mapboxcommon\/tileregionloadoptions","title":"TileRegionLoadOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogress\/init(completedresourcecount:completedresourcesize:erroredresourcecount:requiredresourcecount:loadedresourcecount:loadedresourcesize:)","title":"init(completedResourceCount: UInt64, completedResourceSize: UInt64, erroredResourceCount: UInt64, requiredResourceCount: UInt64, loadedResourceCount: UInt64, loadedResourceSize: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogress\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogress\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogress\/erroredresourcecount","title":"var erroredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogress\/loadedresourcecount","title":"var loadedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogress\/loadedresourcesize","title":"var loadedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogress\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxcommon\/tileregionloadprogress","title":"TileRegionLoadProgress","type":"class"},{"path":"\/documentation\/mapboxcommon\/tilesetdescriptor","title":"TilesetDescriptor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/init(styleuri:minzoom:maxzoom:pixelratio:tilesets:stylepack:extraoptions:)","title":"init(styleURI: String, minZoom: UInt8, maxZoom: UInt8, pixelRatio: Float, tilesets: [String]?, stylePack: StylePackLoadOptions?, extraOptions: Any?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/init(styleuri:minzoom:maxzoom:tilesets:stylepack:extraoptions:)","title":"init(styleURI: String, minZoom: UInt8, maxZoom: UInt8, tilesets: [String]?, stylePack: StylePackLoadOptions?, extraOptions: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/extraoptions","title":"var extraOptions: Any?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/maxzoom","title":"var maxZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/minzoom","title":"var minZoom: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/pixelratio","title":"var pixelRatio: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/stylepackoptions","title":"var stylePackOptions: StylePackLoadOptions?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/styleuri","title":"var styleURI: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions\/tilesets","title":"var tilesets: [String]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/tilesetdescriptoroptions","title":"TilesetDescriptorOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/init(z:x:y:)","title":"init(z: UInt8, x: UInt32, y: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/x","title":"var x: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/y","title":"var y: UInt32","type":"property"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/z","title":"var z: UInt8","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/canonicaltileid\/isequal(to:)","title":"func isEqual(to: CanonicalTileID) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/canonicaltileid","title":"CanonicalTileID","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregiongeometrychanged(forid:geometry:)","title":"func onRegionGeometryChanged(forId: String, geometry: Geometry?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionloadfinished(forid:region:)","title":"func onRegionLoadFinished(forId: String, region: Result<TileRegion, any Error>)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionloadprogress(forid:progress:)","title":"func onRegionLoadProgress(forId: String, progress: TileRegionLoadProgress)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionmetadatachanged(forid:value:)","title":"func onRegionMetadataChanged(forId: String, value: Any)","type":"method"},{"path":"\/documentation\/mapboxmaps\/tilestoreobserver\/onregionremoved(forid:)","title":"func onRegionRemoved(forId: String)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilestoreobserver","title":"TileStoreObserver","type":"protocol"},{"path":"\/documentation\/mapboxcommon\/tileregionloadprogresscallback","title":"TileRegionLoadProgressCallback","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/readandupdate","title":"case readAndUpdate","type":"case"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/readonly","title":"case readOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilestoreusagemode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tilestoreusagemode","title":"TileStoreUsageMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/canceled(_:)","title":"case canceled(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/diskfull(_:)","title":"case diskFull(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/doesnotexist(_:)","title":"case doesNotExist(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/other(_:)","title":"case other(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/tilecountexceeded(_:)","title":"case tileCountExceeded(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/tilesetdescriptor(_:)","title":"case tilesetDescriptor(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tileregionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/tileregionerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/tileregionerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tileregionerror","title":"TileRegionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/adas","title":"case adas","type":"case"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/maps","title":"case maps","type":"case"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/navigation","title":"case navigation","type":"case"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/navigationhd","title":"case navigationHD","type":"case"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/search","title":"case search","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/tiledatadomain\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tiledatadomain\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/tiledatadomain\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/tiledatadomain","title":"TileDataDomain","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/tilecachebudgetinmegabytes","title":"case tileCacheBudgetInMegabytes","type":"case"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/tilecachebudgetintiles","title":"case tileCacheBudgetInTiles","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/tilecachebudgettype","title":"TileCacheBudgetType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions\/init(errormargin:preciseestimationtimeout:timeout:extraoptions:)","title":"init(errorMargin: Float, preciseEstimationTimeout: TimeInterval, timeout: TimeInterval, extraOptions: Any?)","type":"init"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions\/init(extraoptions:)","title":"init(extraOptions: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions\/errormargin","title":"var errorMargin: Float","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions\/extraoptions","title":"var extraOptions: Any?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions\/preciseestimationtimeout","title":"var preciseEstimationTimeout: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions\/timeout","title":"var timeout: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions\/isequal(to:)","title":"func isEqual(to: TileRegionEstimateOptions) -> Bool","type":"method"}],"path":"\/documentation\/mapboxcommon\/tileregionestimateoptions","title":"TileRegionEstimateOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateprogress\/init(requiredresourcecount:erroredresourcecount:completedresourcecount:partialresult:)","title":"init(requiredResourceCount: UInt64, erroredResourceCount: UInt64, completedResourceCount: UInt64, partialResult: TileRegionEstimateResult)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateprogress\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateprogress\/erroredresourcecount","title":"var erroredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateprogress\/partialresult","title":"var partialResult: TileRegionEstimateResult","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateprogress\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateprogress\/isequal(to:)","title":"func isEqual(to: TileRegionEstimateProgress) -> Bool","type":"method"}],"path":"\/documentation\/mapboxcommon\/tileregionestimateprogress","title":"TileRegionEstimateProgress","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateresult\/init(errormargin:transfersize:storagesize:extradata:)","title":"init(errorMargin: Double, transferSize: UInt64, storageSize: UInt64, extraData: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateresult\/errormargin","title":"var errorMargin: Double","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateresult\/extradata","title":"var extraData: Any?","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateresult\/storagesize","title":"var storageSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateresult\/transfersize","title":"var transferSize: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateresult\/isequal(to:)","title":"func isEqual(to: TileRegionEstimateResult) -> Bool","type":"method"}],"path":"\/documentation\/mapboxcommon\/tileregionestimateresult","title":"TileRegionEstimateResult","type":"class"},{"path":"\/documentation\/mapboxcommon\/tileregionestimateprogresscallback","title":"TileRegionEstimateProgressCallback","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerror\/init(type:message:)","title":"init(type: CacheClearingErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerror\/type","title":"var type: CacheClearingErrorType","type":"property"}],"path":"\/documentation\/mapboxcommon\/cacheclearingerror","title":"CacheClearingError","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/databaseerror","title":"case databaseError","type":"case"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/othererror","title":"case otherError","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/cacheclearingerrortype","title":"CacheClearingErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/clearcacheerror\/database(_:)","title":"case database(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/clearcacheerror\/other(_:)","title":"case other(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/clearcacheerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/clearcacheerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/clearcacheerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/clearcacheerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/clearcacheerror","title":"ClearCacheError","type":"enum"},{"title":"Style pack","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleobjectinfo\/init(id:type:)","title":"init(id: String, type: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/styleobjectinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/styleobjectinfo\/type","title":"var type: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/styleobjectinfo","title":"StyleObjectInfo","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepack\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/glyphsrasterizationmode","title":"var glyphsRasterizationMode: GlyphsRasterizationMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepack\/styleuri","title":"var styleURI: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepack","title":"StylePack","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/canceled(_:)","title":"case canceled(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/diskfull(_:)","title":"case diskFull(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/doesnotexist(_:)","title":"case doesNotExist(String)","type":"case"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/other(_:)","title":"case other(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.enum","title":"StylePackError","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/acceptexpired","title":"var acceptExpired: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/extraoptions","title":"var extraOptions: Any?","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadoptions\/metadata","title":"var metadata: Any?","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackloadoptions","title":"StylePackLoadOptions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/init(completedresourcecount:completedresourcesize:erroredresourcecount:requiredresourcecount:loadedresourcecount:loadedresourcesize:)","title":"init(completedResourceCount: UInt64, completedResourceSize: UInt64, erroredResourceCount: UInt64, requiredResourceCount: UInt64, loadedResourceCount: UInt64, loadedResourceSize: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/erroredresourcecount","title":"var erroredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/loadedresourcecount","title":"var loadedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/loadedresourcesize","title":"var loadedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogress\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackloadprogress","title":"StylePackLoadProgress","type":"class"}],"path":"\/documentation\/mapboxmaps\/tilestore-apis","title":"TileStore APIs","type":"symbol"},{"children":[{"title":"MapboxMap","type":"groupMarker"},{"children":[{"title":"Style loading","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstyle(_:transition:completion:)-6icex","title":"func loadStyle(String, transition: TransitionOptions?, completion: (((any Error)?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstyle(_:transition:completion:)-1ilz1","title":"func loadStyle(StyleURI, transition: TransitionOptions?, completion: (((any Error)?) -> Void)?)","type":"method"},{"title":"Map events","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmaploaded","title":"var onMapLoaded: Signal<MapLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmaploadingerror","title":"var onMapLoadingError: Signal<MapLoadingError>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleloaded","title":"var onStyleLoaded: Signal<StyleLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyledataloaded","title":"var onStyleDataLoaded: Signal<StyleDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/oncamerachanged","title":"var onCameraChanged: Signal<CameraChanged>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmapidle","title":"var onMapIdle: Signal<MapIdle>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourceadded","title":"var onSourceAdded: Signal<SourceAdded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourceremoved","title":"var onSourceRemoved: Signal<SourceRemoved>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourcedataloaded","title":"var onSourceDataLoaded: Signal<SourceDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleimagemissing","title":"var onStyleImageMissing: Signal<StyleImageMissing>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleimageremoveunused","title":"var onStyleImageRemoveUnused: Signal<StyleImageRemoveUnused>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onrenderframestarted","title":"var onRenderFrameStarted: Signal<RenderFrameStarted>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onrenderframefinished","title":"var onRenderFrameFinished: Signal<RenderFrameFinished>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onresourcerequest","title":"var onResourceRequest: Signal<ResourceRequest>","type":"property"},{"title":"Prefetching","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/prefetchzoomdelta","title":"var prefetchZoomDelta: UInt8","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/settilecachebudget(size:)","title":"func setTileCacheBudget(size: TileCacheBudgetSize?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/shouldrenderworldcopies","title":"var shouldRenderWorldCopies: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/elevation(at:)","title":"func elevation(at: CLLocationCoordinate2D) -> Double?","type":"method"},{"title":"Camera Fitting","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinatebounds(for:)-54bmw","title":"func coordinateBounds(for: CGRect) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/rect(for:)","title":"func rect(for: CoordinateBounds) -> CGRect","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:padding:bearing:pitch:)-1il0f","title":"func camera(for: Geometry, padding: UIEdgeInsets, bearing: CGFloat?, pitch: CGFloat?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:padding:bearing:pitch:)-5juqy","title":"func camera(for: [CLLocationCoordinate2D], padding: UIEdgeInsets?, bearing: Double?, pitch: Double?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:camera:rect:)","title":"func camera(for: [CLLocationCoordinate2D], camera: CameraOptions, rect: CGRect) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:padding:bearing:pitch:maxzoom:offset:)","title":"func camera(for: CoordinateBounds, padding: UIEdgeInsets?, bearing: Double?, pitch: Double?, maxZoom: Double?, offset: CGPoint?) -> CameraOptions","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camera(for:camera:coordinatespadding:maxzoom:offset:)","title":"func camera(for: [CLLocationCoordinate2D], camera: CameraOptions, coordinatesPadding: UIEdgeInsets?, maxZoom: Double?, offset: CGPoint?) throws -> CameraOptions","type":"method"},{"title":"CameraOptions to CoordinateBounds","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinatebounds(for:)-gs8h","title":"func coordinateBounds(for: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinateboundsunwrapped(for:)","title":"func coordinateBoundsUnwrapped(for: CameraOptions) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinateboundszoom(for:)","title":"func coordinateBoundsZoom(for: CameraOptions) -> CoordinateBoundsZoom","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinateboundszoomunwrapped(for:)","title":"func coordinateBoundsZoomUnwrapped(for: CameraOptions) -> CoordinateBoundsZoom","type":"method"},{"title":"Screen coordinate conversion","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinate(for:)","title":"func coordinate(for: CGPoint) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/point(for:)","title":"func point(for: CLLocationCoordinate2D) -> CGPoint","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinates(for:)","title":"func coordinates(for: [CGPoint]) -> [CLLocationCoordinate2D]","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/points(for:)","title":"func points(for: [CLLocationCoordinate2D]) -> [CGPoint]","type":"method"},{"title":"Camera options setters\/getters","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setcamera(to:)","title":"func setCamera(to: CameraOptions)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camerastate","title":"var cameraState: CameraState","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/freecameraoptions","title":"var freeCameraOptions: FreeCameraOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/camerabounds","title":"var cameraBounds: CameraBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setcamerabounds(with:)","title":"func setCameraBounds(with: CameraBoundsOptions) throws","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/dragcameraoptions(from:to:)","title":"func dragCameraOptions(from: CGPoint, to: CGPoint) -> CameraOptions","type":"method"},{"title":"Gesture and Animation Flags","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/beginanimation()","title":"func beginAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/endanimation()","title":"func endAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/begingesture()","title":"func beginGesture()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/endgesture()","title":"func endGesture()","type":"method"},{"title":"Querying map features","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/queryrenderedfeatures(with:options:completion:)","title":"func queryRenderedFeatures(with: some RenderedQueryGeometryConvertible, options: RenderedQueryOptions?, completion: (Result<[QueriedRenderedFeature], any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterleaves(forsourceid:feature:limit:offset:completion:)","title":"func getGeoJsonClusterLeaves(forSourceId: String, feature: Feature, limit: UInt64, offset: UInt64, completion: (Result<FeatureExtensionValue, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterchildren(forsourceid:feature:completion:)","title":"func getGeoJsonClusterChildren(forSourceId: String, feature: Feature, completion: (Result<FeatureExtensionValue, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterexpansionzoom(forsourceid:feature:completion:)","title":"func getGeoJsonClusterExpansionZoom(forSourceId: String, feature: Feature, completion: (Result<FeatureExtensionValue, any Error>) -> Void) -> any Cancelable","type":"method"},{"title":"Render loop","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/triggerrepaint()","title":"func triggerRepaint()","type":"method"},{"title":"Map data clearing","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/cleardata(completion:)","title":"static func clearData(completion: ((any Error)?) -> Void)","type":"method"},{"title":"Feature state","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getfeaturestate(sourceid:sourcelayerid:featureid:callback:)","title":"func getFeatureState(sourceId: String, sourceLayerId: String?, featureId: String, callback: (Result<[String : Any], any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setfeaturestate(sourceid:sourcelayerid:featureid:state:callback:)","title":"func setFeatureState(sourceId: String, sourceLayerId: String?, featureId: String, state: [String : Any], callback: (Result<NSNull, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/resetfeaturestates(sourceid:sourcelayerid:callback:)","title":"func resetFeatureStates(sourceId: String, sourceLayerId: String?, callback: (Result<NSNull, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/removefeaturestate(sourceid:sourcelayerid:featureid:statekey:callback:)","title":"func removeFeatureState(sourceId: String, sourceLayerId: String?, featureId: String, stateKey: String?, callback: (Result<NSNull, any Error>) -> Void) -> any Cancelable","type":"method"},{"title":"Tile Cover","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/tilecover(for:)","title":"func tileCover(for: TileCoverOptions) -> [CanonicalTileID]","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/centeraltitudemode","title":"var centerAltitudeMode: MapCenterAltitudeMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/debugoptions","title":"var debugOptions: [MapDebugOptions]","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/isanimationinprogress","title":"var isAnimationInProgress: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/isgestureinprogress","title":"var isGestureInProgress: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/options","title":"var options: MapOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/style","title":"var style: StyleManager","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/styleglyphurl","title":"var styleGlyphURL: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/collectperformancestatistics(_:callback:)","title":"func collectPerformanceStatistics(PerformanceStatisticsOptions, callback: (PerformanceStatistics) -> Void) -> AnyCancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinateinfo(for:)","title":"func coordinateInfo(for: CGPoint) -> CoordinateInfo","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/coordinatesinfo(for:)","title":"func coordinatesInfo(for: [CGPoint]) -> [CoordinateInfo]","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getfeaturestate(_:callback:)","title":"func getFeatureState<F>(F, callback: (Result<F.State, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getfeaturestate(featureset:featureid:callback:)","title":"func getFeatureState<T>(featureset: FeaturesetDescriptor<T>, featureId: FeaturesetFeatureId, callback: (Result<T.State, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstylejson(_:completion:)","title":"func loadStyleJSON(String, completion: (((any Error)?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/loadstyleuri(_:completion:)","title":"func loadStyleURI(StyleURI, completion: (((any Error)?) -> Void)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onevery(event:handler:)","title":"func onEvery<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onnext(event:handler:)","title":"func onNext<Payload>(event: MapEventType<Payload>, handler: (Payload) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/queryrenderedfeatures(featureset:filter:completion:)","title":"func queryRenderedFeatures<T>(featureset: FeaturesetDescriptor<T>, filter: Exp?, completion: (Result<[T], any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/queryrenderedfeatures(with:featureset:filter:completion:)","title":"func queryRenderedFeatures<G, T>(with: G, featureset: FeaturesetDescriptor<T>, filter: Exp?, completion: (Result<[T], any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/reducememoryuse()","title":"func reduceMemoryUse()","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/removefeaturestate(_:statekey:callback:)","title":"func removeFeatureState<F>(F, stateKey: F.StateKey?, callback: (((any Error)?) -> Void)?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/resetfeaturestates(featureset:callback:)","title":"func resetFeatureStates<T>(featureset: FeaturesetDescriptor<T>, callback: (((any Error)?) -> Void)?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setconstrainmode(_:)","title":"func setConstrainMode(ConstrainMode)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setfeaturestate(_:state:callback:)","title":"func setFeatureState<T>(T, state: T.State, callback: (((any Error)?) -> Void)?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setnorthorientation(_:)","title":"func setNorthOrientation(NorthOrientation)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/settilecachebudget(_:)","title":"func setTileCacheBudget(TileCacheBudget?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setviewportmode(_:)","title":"func setViewportMode(ViewportMode)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/subscript(_:)","title":"subscript(String) -> Signal<GenericEvent>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterchildren(forsourceid:feature:completion:)","title":"func getGeoJsonClusterChildren(forSourceId: String, feature: Feature, completion: (Result<FeatureExtensionValue, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterexpansionzoom(forsourceid:feature:completion:)","title":"func getGeoJsonClusterExpansionZoom(forSourceId: String, feature: Feature, completion: (Result<FeatureExtensionValue, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/getgeojsonclusterleaves(forsourceid:feature:limit:offset:completion:)","title":"func getGeoJsonClusterLeaves(forSourceId: String, feature: Feature, limit: UInt64, offset: UInt64, completion: (Result<FeatureExtensionValue, any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/querysourcefeatures(for:options:completion:)","title":"func querySourceFeatures(for: String, options: SourceQueryOptions, completion: (Result<[QueriedSourceFeature], any Error>) -> Void) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapboxmap\/mapfeaturequeryable-implementations","title":"MapFeatureQueryable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/oncamerachanged","title":"var onCameraChanged: Signal<CameraChanged>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmapidle","title":"var onMapIdle: Signal<MapIdle>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmaploaded","title":"var onMapLoaded: Signal<MapLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onmaploadingerror","title":"var onMapLoadingError: Signal<MapLoadingError>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onrenderframefinished","title":"var onRenderFrameFinished: Signal<RenderFrameFinished>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onrenderframestarted","title":"var onRenderFrameStarted: Signal<RenderFrameStarted>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onresourcerequest","title":"var onResourceRequest: Signal<ResourceRequest>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourceadded","title":"var onSourceAdded: Signal<SourceAdded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourcedataloaded","title":"var onSourceDataLoaded: Signal<SourceDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onsourceremoved","title":"var onSourceRemoved: Signal<SourceRemoved>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyledataloaded","title":"var onStyleDataLoaded: Signal<StyleDataLoaded>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleimagemissing","title":"var onStyleImageMissing: Signal<StyleImageMissing>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleimageremoveunused","title":"var onStyleImageRemoveUnused: Signal<StyleImageRemoveUnused>","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/onstyleloaded","title":"var onStyleLoaded: Signal<StyleLoaded>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/addinteraction(_:)","title":"func addInteraction(some Interaction) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/queryrenderedfeatures(with:options:completion:)","title":"func queryRenderedFeatures(with: some RenderedQueryGeometryConvertible, options: RenderedQueryOptions?, completion: (Result<[QueriedRenderedFeature], any Error>) -> Void) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/removefeaturestate(featureset:featureid:statekey:callback:)","title":"func removeFeatureState<T>(featureset: FeaturesetDescriptor<T>, featureId: FeaturesetFeatureId, stateKey: T.StateKey?, callback: (((any Error)?) -> Void)?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/setfeaturestate(featureset:featureid:state:callback:)","title":"func setFeatureState<T>(featureset: FeaturesetDescriptor<T>, featureId: FeaturesetFeatureId, state: T.State, callback: (((any Error)?) -> Void)?) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapboxmap\/mapboxmapprotocol-implementations","title":"MapboxMapProtocol Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapboxmap","title":"MapboxMap","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate\/init(center:padding:zoom:bearing:pitch:)","title":"init(center: CLLocationCoordinate2D, padding: UIEdgeInsets, zoom: CGFloat, bearing: CLLocationDirection, pitch: CGFloat)","type":"init"},{"path":"\/documentation\/mapboxmaps\/camerastate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate\/bearing","title":"var bearing: CLLocationDirection","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate\/center","title":"var center: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate\/padding","title":"var padding: UIEdgeInsets","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate\/pitch","title":"var pitch: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerastate\/zoom","title":"var zoom: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerastate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/camerastate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/camerastate","title":"CameraState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/init(camerastate:anchor:)","title":"init(cameraState: CameraState, anchor: CGPoint?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/init(center:padding:anchor:zoom:bearing:pitch:)","title":"init(center: CLLocationCoordinate2D?, padding: UIEdgeInsets?, anchor: CGPoint?, zoom: CGFloat?, bearing: CLLocationDirection?, pitch: CGFloat?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/anchor","title":"var anchor: CGPoint?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/bearing","title":"var bearing: CLLocationDirection?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/center","title":"var center: CLLocationCoordinate2D?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/padding","title":"var padding: UIEdgeInsets?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/pitch","title":"var pitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/zoom","title":"var zoom: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameraoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameraoptions","title":"CameraOptions","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/==(_:_:)","title":"static func == (CameraBounds, CameraBounds) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/bounds","title":"let bounds: CoordinateBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/maxpitch","title":"let maxPitch: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/maxzoom","title":"let maxZoom: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/minpitch","title":"let minPitch: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/minzoom","title":"let minZoom: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/camerabounds\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/camerabounds\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/camerabounds","title":"CameraBounds","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/==(_:_:)","title":"static func == (CameraBoundsOptions, CameraBoundsOptions) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/init(bounds:maxzoom:minzoom:maxpitch:minpitch:)","title":"init(bounds: CoordinateBounds?, maxZoom: CGFloat?, minZoom: CGFloat?, maxPitch: CGFloat?, minPitch: CGFloat?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/init(camerabounds:)","title":"init(cameraBounds: CameraBounds)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/bounds","title":"var bounds: CoordinateBounds?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/maxpitch","title":"var maxPitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/maxzoom","title":"var maxZoom: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/minpitch","title":"var minPitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/minzoom","title":"var minZoom: CGFloat?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameraboundsoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameraboundsoptions","title":"CameraBoundsOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maperror\/errordescription","title":"var errorDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/maperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maperror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maperror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/maperror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxmaps\/maperror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/maperror","title":"MapError","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projection\/latitudemax","title":"static let latitudeMax: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/projection\/latitudemin","title":"static let latitudeMin: CLLocationDegrees","type":"property"},{"path":"\/documentation\/mapboxmaps\/projection\/latituderange","title":"static let latitudeRange: (ClosedRange<CLLocationDegrees>)","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projection\/coordinate(for:)","title":"static func coordinate(for: ProjectedMeters) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection\/metersperpoint(for:zoom:)","title":"static func metersPerPoint(for: CLLocationDegrees, zoom: CGFloat) -> Double","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection\/project(_:zoomscale:)","title":"static func project(CLLocationCoordinate2D, zoomScale: CGFloat) -> MercatorCoordinate","type":"method"},{"path":"\/documentation\/mapboxmaps\/projection\/unproject(_:zoomscale:)","title":"static func unproject(MercatorCoordinate, zoomScale: CGFloat) -> CLLocationCoordinate2D","type":"method"}],"path":"\/documentation\/mapboxmaps\/projection","title":"Projection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/init(southwest:northeast:)","title":"init(southwest: CLLocationCoordinate2D, northeast: CLLocationCoordinate2D)","type":"init"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/init(southwest:northeast:infinitebounds:)","title":"init(southwest: CLLocationCoordinate2D, northeast: CLLocationCoordinate2D, infiniteBounds: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/infinitebounds","title":"var infiniteBounds: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/northeast","title":"var northeast: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/southwest","title":"var southwest: CLLocationCoordinate2D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/constrain(forpoint:)","title":"func constrain(forPoint: CLLocationCoordinate2D) -> CLLocationCoordinate2D","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/contains(forarea:wrappedcoordinates:)","title":"func contains(forArea: CoordinateBounds, wrappedCoordinates: Bool) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/contains(forpoint:wrappedcoordinates:)","title":"func contains(forPoint: CLLocationCoordinate2D, wrappedCoordinates: Bool) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","title":"func containsLatitude(forLatitude: Double) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/containslongitude(forlongitude:)","title":"func containsLongitude(forLongitude: Double) -> Bool","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/extend(forarea:)","title":"func extend(forArea: CoordinateBounds) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/extend(forpoint:)","title":"func extend(forPoint: CLLocationCoordinate2D) -> CoordinateBounds","type":"method"},{"path":"\/documentation\/mapboxmaps\/coordinatebounds\/intersects(forarea:wrappedcoordinates:)","title":"func intersects(forArea: CoordinateBounds, wrappedCoordinates: Bool) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/coordinatebounds","title":"CoordinateBounds","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateboundszoom\/init(bounds:zoom:)","title":"init(bounds: CoordinateBounds, zoom: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateboundszoom\/bounds","title":"var bounds: CoordinateBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinateboundszoom\/zoom","title":"var zoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/coordinateboundszoom","title":"CoordinateBoundsZoom","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateinfo\/init(coordinate:isonsurface:)","title":"init(coordinate: CLLocationCoordinate2D, isOnSurface: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/coordinateinfo\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/coordinateinfo\/isonsurface","title":"var isOnSurface: Bool","type":"property"}],"path":"\/documentation\/mapboxmaps\/coordinateinfo","title":"CoordinateInfo","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/shared","title":"case shared","type":"case"},{"path":"\/documentation\/mapboxmaps\/contextmode\/unique","title":"case unique","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/contextmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/contextmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/contextmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/contextmode","title":"ContextMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/allglyphsrasterizedlocally","title":"case allGlyphsRasterizedLocally","type":"case"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/ideographsrasterizedlocally","title":"case ideographsRasterizedLocally","type":"case"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/noglyphsrasterizedlocally","title":"case noGlyphsRasterizedLocally","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/glyphsrasterizationmode","title":"GlyphsRasterizationMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/sea","title":"case sea","type":"case"},{"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/terrain","title":"case terrain","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/mapcenteraltitudemode","title":"MapCenterAltitudeMode","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/init(boundingbox:)","title":"init(boundingBox: CGRect)","type":"init"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/init(point:)","title":"init(point: CGPoint)","type":"init"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometry\/init(shape:)","title":"init(shape: [CGPoint])","type":"init"}],"path":"\/documentation\/mapboxmaps\/renderedquerygeometry","title":"RenderedQueryGeometry","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedquerygeometryconvertible\/geometry","title":"var geometry: RenderedQueryGeometry","type":"property"}],"path":"\/documentation\/mapboxmaps\/renderedquerygeometryconvertible","title":"RenderedQueryGeometryConvertible","type":"protocol"},{"title":"Camera","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/getorientation()","title":"func getOrientation() -> Vec4?","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/getposition()","title":"func getPosition() -> Vec3?","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/lookatpoint(forlocation:)","title":"func lookAtPoint(forLocation: CLLocationCoordinate2D)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/lookatpoint(forlocation:altitude:)","title":"func lookAtPoint(forLocation: CLLocationCoordinate2D, altitude: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/lookatpoint(forlocation:altitude:upvector:)","title":"func lookAtPoint(forLocation: CLLocationCoordinate2D, altitude: Double, upVector: Vec3)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setlocationforlocation(_:altitude:)","title":"func setLocationForLocation(CLLocationCoordinate2D, altitude: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setorientationfororientation(_:)","title":"func setOrientationForOrientation(Vec4?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setpitchbearingforpitch(_:bearing:)","title":"func setPitchBearingForPitch(Double, bearing: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/freecameraoptions\/setpositionforposition(_:)","title":"func setPositionForPosition(Vec3?)","type":"method"}],"path":"\/documentation\/mapboxmaps\/freecameraoptions","title":"FreeCameraOptions","type":"class"},{"path":"\/documentation\/mapboxmaps\/mapboxmap\/freecameraoptions","title":"var freeCameraOptions: FreeCameraOptions","type":"property"},{"children":[{"title":"Coordinates","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/init(x:y:)","title":"init(x: Double, y: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/y","title":"var y: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/isequal(to:)","title":"func isEqual(to: MercatorCoordinate) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/mercatorcoordinate","title":"MercatorCoordinate","type":"class"},{"title":"Projection","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/init(northing:easting:)","title":"init(northing: Double, easting: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/easting","title":"var easting: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/northing","title":"var northing: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/projectedmeters","title":"ProjectedMeters","type":"class"},{"path":"\/documentation\/mapboxmaps\/projection\/projectedmeters(for:)","title":"static func projectedMeters(for: CLLocationCoordinate2D) -> ProjectedMeters","type":"method"},{"title":"Camera Animations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/cameraanimators","title":"var cameraAnimators: [any CameraAnimator]","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/oncameraanimatorcancelled","title":"var onCameraAnimatorCancelled: Signal<any CameraAnimator>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/oncameraanimatorfinished","title":"var onCameraAnimatorFinished: Signal<any CameraAnimator>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/oncameraanimatorstarted","title":"var onCameraAnimatorStarted: Signal<any CameraAnimator>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/cancelanimations()","title":"func cancelAnimations()","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/ease(to:duration:curve:completion:)","title":"func ease(to: CameraOptions, duration: TimeInterval, curve: UIView.AnimationCurve, completion: AnimationCompletion?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/fly(to:duration:curve:completion:)","title":"func fly(to: CameraOptions, duration: TimeInterval?, curve: TimingCurve, completion: AnimationCompletion?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:controlpoint1:controlpoint2:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, controlPoint1: CGPoint, controlPoint2: CGPoint, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:curve:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, curve: UIView.AnimationCurve, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:dampingratio:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, dampingRatio: CGFloat, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:timingparameters:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, timingParameters: any UITimingCurveProvider, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"}],"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager","title":"CameraAnimationsManager","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/owner","title":"var owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/cameraanimator","title":"CameraAnimator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/fractioncomplete","title":"var fractionComplete: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/isreversed","title":"var isReversed: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/oncancelled","title":"var onCancelled: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/onfinished","title":"var onFinished: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/onstarted","title":"var onStarted: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/owner","title":"var owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/pausesoncompletion","title":"var pausesOnCompletion: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/transition","title":"var transition: CameraTransition?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/addcompletion(_:)","title":"func addCompletion(AnimationCompletion)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/continueanimation(withtimingparameters:durationfactor:)","title":"func continueAnimation(withTimingParameters: (any UITimingCurveProvider)?, durationFactor: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/pauseanimation()","title":"func pauseAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/startanimation()","title":"func startAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/startanimation(afterdelay:)","title":"func startAnimation(afterDelay: TimeInterval)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/basiccameraanimator","title":"BasicCameraAnimator","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/fromvalue","title":"var fromValue: T","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/tovalue","title":"var toValue: T?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/change","title":"CameraTransition.Change","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/anchor","title":"var anchor: CameraTransition.Change<CGPoint>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/bearing","title":"var bearing: CameraTransition.Change<CLLocationDirection>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/center","title":"var center: CameraTransition.Change<CLLocationCoordinate2D>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/padding","title":"var padding: CameraTransition.Change<UIEdgeInsets>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/pitch","title":"var pitch: CameraTransition.Change<CGFloat>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/shouldoptimizebearingpath","title":"var shouldOptimizeBearingPath: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/zoom","title":"var zoom: CameraTransition.Change<CGFloat>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameratransition","title":"CameraTransition","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/duration","title":"let duration: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/oncancelled","title":"var onCancelled: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/onfinished","title":"var onFinished: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/onstarted","title":"var onStarted: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/owner","title":"let owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/flytocameraanimator","title":"FlyToCameraAnimator","type":"class"},{"path":"\/documentation\/mapboxmaps\/animationcompletion","title":"AnimationCompletion","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/rawvalue-swift.property","title":"let rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/rawvalue-swift.typealias","title":"AnimationOwner.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/compass","title":"static let compass: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/animationowner\/gestures","title":"static let gestures: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/animationowner\/unspecified","title":"static let unspecified: AnimationOwner","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/animationowner\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/animationowner","title":"AnimationOwner","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/easein","title":"static let easeIn: TimingCurve","type":"property"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/easeinout","title":"static let easeInOut: TimingCurve","type":"property"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/easeout","title":"static let easeOut: TimingCurve","type":"property"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/linear","title":"static let linear: TimingCurve","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/timingcurve\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/timingcurve","title":"TimingCurve","type":"struct"},{"title":"Viewport","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/defaulttransition","title":"var defaultTransition: any ViewportTransition","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/options","title":"var options: ViewportOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/status","title":"var status: ViewportStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/addstatusobserver(_:)","title":"func addStatusObserver(any ViewportStatusObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/idle()","title":"func idle()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makecameraviewportstate(camera:)","title":"func makeCameraViewportState(camera: CameraOptions) -> any ViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makedefaultviewporttransition(options:)","title":"func makeDefaultViewportTransition(options: DefaultViewportTransitionOptions) -> DefaultViewportTransition","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makefollowpuckviewportstate(options:)","title":"func makeFollowPuckViewportState(options: FollowPuckViewportStateOptions) -> FollowPuckViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makeimmediateviewporttransition()","title":"func makeImmediateViewportTransition() -> ImmediateViewportTransition","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makeoverviewviewportstate(options:)","title":"func makeOverviewViewportState(options: OverviewViewportStateOptions) -> OverviewViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/removestatusobserver(_:)","title":"func removeStatusObserver(any ViewportStatusObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/transition(to:transition:completion:)","title":"func transition(to: any ViewportState, transition: (any ViewportTransition)?, completion: ((Bool) -> Void)?)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportmanager","title":"ViewportManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/init(transitionstoidleuponuserinteraction:)","title":"init(transitionsToIdleUponUserInteraction: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/init(transitionstoidleuponuserinteraction:usessafeareainsetsaspadding:)","title":"init(transitionsToIdleUponUserInteraction: Bool, usesSafeAreaInsetsAsPadding: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/transitionstoidleuponuserinteraction","title":"var transitionsToIdleUponUserInteraction: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/usessafeareainsetsaspadding","title":"var usesSafeAreaInsetsAsPadding: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportoptions","title":"ViewportOptions","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/==(_:_:)","title":"static func == (ViewportStatus, ViewportStatus) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/state(_:)","title":"case state(any ViewportState)","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/transition(_:tostate:)","title":"case transition(any ViewportTransition, toState: any ViewportState)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportstatus","title":"ViewportStatus","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatusobserver\/viewportstatusdidchange(from:to:reason:)","title":"func viewportStatusDidChange(from: ViewportStatus, to: ViewportStatus, reason: ViewportStatusChangeReason)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportstatusobserver","title":"ViewportStatusObserver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/idlerequested","title":"static let idleRequested: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionfailed","title":"static let transitionFailed: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionstarted","title":"static let transitionStarted: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionsucceeded","title":"static let transitionSucceeded: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/userinteraction","title":"static let userInteraction: ViewportStatusChangeReason","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason","title":"ViewportStatusChangeReason","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportstate","title":"ViewportState","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/options","title":"var options: FollowPuckViewportStateOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/viewportstate-implementations","title":"ViewportState Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstate","title":"FollowPuckViewportState","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/init(padding:zoom:bearing:pitch:)","title":"init(padding: UIEdgeInsets?, zoom: CGFloat?, bearing: FollowPuckViewportStateBearing?, pitch: CGFloat?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/bearing","title":"var bearing: FollowPuckViewportStateBearing?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/padding","title":"var padding: UIEdgeInsets?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/pitch","title":"var pitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/zoom","title":"var zoom: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions","title":"FollowPuckViewportStateOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/constant(_:)","title":"case constant(CLLocationDirection)","type":"case"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/course","title":"case course","type":"case"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/heading","title":"case heading","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing","title":"FollowPuckViewportStateBearing","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/options","title":"var options: OverviewViewportStateOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/viewportstate-implementations","title":"ViewportState Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstate","title":"OverviewViewportState","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/init(geometry:geometrypadding:bearing:pitch:padding:maxzoom:offset:animationduration:)","title":"init(geometry: any GeometryConvertible, geometryPadding: UIEdgeInsets, bearing: CLLocationDirection?, pitch: CGFloat?, padding: UIEdgeInsets?, maxZoom: Double?, offset: CGPoint?, animationDuration: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/animationduration","title":"var animationDuration: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/bearing","title":"var bearing: CLLocationDirection?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/geometrypadding","title":"var geometryPadding: UIEdgeInsets","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/offset","title":"var offset: CGPoint?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/padding","title":"var padding: UIEdgeInsets?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/pitch","title":"var pitch: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions","title":"OverviewViewportStateOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewporttransition\/run(to:completion:)","title":"func run(to: any ViewportState, completion: (Bool) -> Void) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewporttransition","title":"ViewportTransition","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/options","title":"var options: DefaultViewportTransitionOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/run(to:completion:)","title":"func run(to: any ViewportState, completion: (Bool) -> Void) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/viewporttransition-implementations","title":"ViewportTransition Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransition","title":"DefaultViewportTransition","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/init(maxduration:)","title":"init(maxDuration: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/maxduration","title":"var maxDuration: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions","title":"DefaultViewportTransitionOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/immediateviewporttransition\/run(to:completion:)","title":"func run(to: any ViewportState, completion: (Bool) -> Void) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/immediateviewporttransition","title":"ImmediateViewportTransition","type":"class"}],"path":"\/documentation\/mapboxmaps\/camera-and-coordinates","title":"Camera and coordinates","type":"symbol"},{"title":"Query features on the map","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcequeryoptions\/init(sourcelayerids:filter:)","title":"init(sourceLayerIds: [String]?, filter: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/sourcequeryoptions\/filter","title":"var filter: Any","type":"property"},{"path":"\/documentation\/mapboxmaps\/sourcequeryoptions\/sourcelayerids","title":"var sourceLayerIds: [String]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/sourcequeryoptions","title":"SourceQueryOptions","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/queriedfeature\/source","title":"var source: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/queriedfeature\/sourcelayer","title":"var sourceLayer: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/queriedfeature\/state","title":"var state: Any","type":"property"}],"path":"\/documentation\/mapboxmaps\/queriedfeature","title":"QueriedFeature","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/queriedrenderedfeature\/layers","title":"var layers: [String]","type":"property"},{"path":"\/documentation\/mapboxmaps\/queriedrenderedfeature\/queriedfeature","title":"var queriedFeature: QueriedFeature","type":"property"}],"path":"\/documentation\/mapboxmaps\/queriedrenderedfeature","title":"QueriedRenderedFeature","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/queriedsourcefeature\/queriedfeature","title":"var queriedFeature: QueriedFeature","type":"property"}],"path":"\/documentation\/mapboxmaps\/queriedsourcefeature","title":"QueriedSourceFeature","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/renderedqueryoptions\/layerids","title":"var layerIds: [String]?","type":"property"}],"path":"\/documentation\/mapboxmaps\/renderedqueryoptions","title":"RenderedQueryOptions","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/layerfeature-swift.struct\/featureid","title":"var featureId: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/layerfeature-swift.struct\/layerid","title":"var layerId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/layerfeature-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/annotatedfeature\/layerfeature-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/annotatedfeature\/layerfeature-swift.struct","title":"AnnotatedFeature.LayerFeature","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/geometry","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/layerfeature-swift.property","title":"var layerFeature: AnnotatedFeature.LayerFeature?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/geometry(_:)","title":"static func geometry(any GeometryConvertible) -> AnnotatedFeature","type":"method"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/layerfeature(layerid:featureid:)","title":"static func layerFeature(layerId: String, featureId: String?) -> AnnotatedFeature","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotatedfeature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/annotatedfeature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/annotatedfeature","title":"AnnotatedFeature","type":"struct"}],"path":"\/documentation\/mapboxmaps\/mapboxmap-apis","title":"MapboxMap","type":"symbol"},{"title":"Other","type":"groupMarker"},{"children":[{"title":"Location","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/latestlocation","title":"var latestLocation: Location?","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/onheadingchange","title":"var onHeadingChange: Signal<Heading>","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/onlocationchange","title":"var onLocationChange: Signal<[Location]>","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/onpuckrender","title":"let onPuckRender: Signal<PuckRenderingData>","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/options","title":"var options: LocationOptions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/override(locationprovider:headingprovider:)-79xkb","title":"func override(locationProvider: Signal<[Location]>, headingProvider: Signal<Heading>?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/override(locationprovider:headingprovider:)-8xcsf","title":"func override(locationProvider: any LocationProvider, headingProvider: (any HeadingProvider)?)","type":"method"},{"path":"\/documentation\/mapboxmaps\/locationmanager\/override(provider:)","title":"func override(provider: any LocationProvider & HeadingProvider)","type":"method"}],"path":"\/documentation\/mapboxmaps\/locationmanager","title":"LocationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/init(pucktype:puckbearing:puckbearingenabled:)","title":"init(puckType: PuckType?, puckBearing: PuckBearing, puckBearingEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/puckbearing","title":"var puckBearing: PuckBearing","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/puckbearingenabled","title":"var puckBearingEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/pucktype","title":"var puckType: PuckType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/locationoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/locationoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/locationoptions","title":"LocationOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pucktype\/puck2d(_:)","title":"case puck2D(Puck2DConfiguration)","type":"case"},{"path":"\/documentation\/mapboxmaps\/pucktype\/puck3d(_:)","title":"case puck3D(Puck3DConfiguration)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/pucktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/pucktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/pucktype","title":"PuckType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/init(color:radius:)","title":"init(color: UIColor, radius: Puck2DConfiguration.Pulsing.Radius)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/color","title":"var color: UIColor","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.property","title":"var radius: Puck2DConfiguration.Pulsing.Radius","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/default","title":"static let `default`: Puck2DConfiguration.Pulsing","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/accuracy","title":"case accuracy","type":"case"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/constant(_:)","title":"case constant(Double)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/radius-swift.enum","title":"Puck2DConfiguration.Pulsing.Radius","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.struct","title":"Puck2DConfiguration.Pulsing","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/init(topimage:bearingimage:shadowimage:scale:pulsing:showsaccuracyring:opacity:)","title":"init(topImage: UIImage?, bearingImage: UIImage?, shadowImage: UIImage?, scale: Value<Double>?, pulsing: Puck2DConfiguration.Pulsing?, showsAccuracyRing: Bool, opacity: Double)","type":"init"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/init(topimage:bearingimage:shadowimage:scale:showsaccuracyring:accuracyringcolor:accuracyringbordercolor:opacity:layerposition:)","title":"init(topImage: UIImage?, bearingImage: UIImage?, shadowImage: UIImage?, scale: Value<Double>?, showsAccuracyRing: Bool, accuracyRingColor: UIColor, accuracyRingBorderColor: UIColor, opacity: Double, layerPosition: LayerPosition?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/accuracyringbordercolor","title":"var accuracyRingBorderColor: UIColor","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/accuracyringcolor","title":"var accuracyRingColor: UIColor","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/bearingimage","title":"var bearingImage: UIImage?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/layerposition","title":"var layerPosition: LayerPosition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/opacity","title":"var opacity: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/pulsing-swift.property","title":"var pulsing: Puck2DConfiguration.Pulsing?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/scale","title":"var scale: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/shadowimage","title":"var shadowImage: UIImage?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/showsaccuracyring","title":"var showsAccuracyRing: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/slot","title":"var slot: Slot?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/topimage","title":"var topImage: UIImage?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/makedefault(showbearing:)","title":"static func makeDefault(showBearing: Bool) -> Puck2DConfiguration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck2dconfiguration","title":"Puck2DConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/init(model:modelscale:modelrotation:modelopacity:layerposition:)","title":"init(model: Model, modelScale: Value<[Double]>?, modelRotation: Value<[Double]>?, modelOpacity: Value<Double>?, layerPosition: LayerPosition?)","type":"init"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/init(model:modelscale:modelrotation:modelopacity:modelcastshadows:modelreceiveshadows:modelscalemode:modelemissivestrength:modelcolorusetheme:layerposition:)","title":"init(model: Model, modelScale: Value<[Double]>?, modelRotation: Value<[Double]>?, modelOpacity: Value<Double>?, modelCastShadows: Value<Bool>?, modelReceiveShadows: Value<Bool>?, modelScaleMode: Value<ModelScaleMode>?, modelEmissiveStrength: Value<Double>, modelColorUseTheme: Value<ColorUseTheme>?, layerPosition: LayerPosition?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/layerposition","title":"var layerPosition: LayerPosition?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/model","title":"var model: Model","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelcastshadows","title":"var modelCastShadows: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelcolorusetheme","title":"var modelColorUseTheme: Value<ColorUseTheme>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelelevationreference","title":"var modelElevationReference: Value<ModelElevationReference>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelemissivestrength","title":"var modelEmissiveStrength: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelopacity","title":"var modelOpacity: Value<Double>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelreceiveshadows","title":"var modelReceiveShadows: Value<Bool>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelrotation","title":"var modelRotation: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelscale","title":"var modelScale: Value<[Double]>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/modelscalemode","title":"var modelScaleMode: Value<ModelScaleMode>?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/slot","title":"var slot: Slot?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puck3dconfiguration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puck3dconfiguration","title":"Puck3DConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/model\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/model\/init(id:uri:position:orientation:)","title":"init(id: String?, uri: URL?, position: [Double]?, orientation: [Double]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/model\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/mapboxmaps\/model\/orientation","title":"var orientation: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/model\/position","title":"var position: [Double]?","type":"property"},{"path":"\/documentation\/mapboxmaps\/model\/uri","title":"var uri: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/model\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/model\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/model","title":"Model","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckbearing\/course","title":"case course","type":"case"},{"path":"\/documentation\/mapboxmaps\/puckbearing\/heading","title":"case heading","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckbearing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puckbearing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puckbearing","title":"PuckBearing","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/location\/init(cllocation:)","title":"init(CLLocation: CLLocation)","type":"init"},{"path":"\/documentation\/mapboxcommon\/location\/init(cllocation:extra:)","title":"init(CLLocation: CLLocation, extra: Any?)","type":"init"},{"path":"\/documentation\/mapboxcommon\/location\/init(coordinate:timestamp:altitude:horizontalaccuracy:verticalaccuracy:speed:speedaccuracy:bearing:bearingaccuracy:floor:source:extra:)","title":"convenience init(coordinate: CLLocationCoordinate2D, timestamp: Date, altitude: CLLocationDistance?, horizontalAccuracy: CLLocationAccuracy?, verticalAccuracy: CLLocationAccuracy?, speed: CLLocationSpeed?, speedAccuracy: CLLocationSpeedAccuracy?, bearing: CLLocationDirection?, bearingAccuracy: CLLocationDirectionAccuracy?, floor: Int?, source: String?, extra: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/location\/altitude","title":"var altitude: CLLocationDistance?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/bearing","title":"var bearing: CLLocationDirection?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/bearingaccuracy","title":"var bearingAccuracy: CLLocationDirectionAccuracy?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/extra","title":"var extra: Any?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/floor","title":"var floor: Int?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/horizontalaccuracy","title":"var horizontalAccuracy: CLLocationAccuracy?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/speed","title":"var speed: CLLocationSpeed?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/speedaccuracy","title":"var speedAccuracy: CLLocationSpeedAccuracy?","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/timestamp","title":"var timestamp: Date","type":"property"},{"path":"\/documentation\/mapboxcommon\/location\/verticalaccuracy","title":"var verticalAccuracy: CLLocationAccuracy?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/location\/isequal(to:)","title":"func isEqual(to: Location) -> Bool","type":"method"}],"path":"\/documentation\/mapboxcommon\/location","title":"Location","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationprovider\/addlocationobserver(for:)","title":"func addLocationObserver(for: any LocationObserver)","type":"method"},{"path":"\/documentation\/mapboxcommon\/locationprovider\/getlastobservedlocation()","title":"func getLastObservedLocation() -> Location?","type":"method"},{"path":"\/documentation\/mapboxcommon\/locationprovider\/removelocationobserver(for:)","title":"func removeLocationObserver(for: any LocationObserver)","type":"method"}],"path":"\/documentation\/mapboxcommon\/locationprovider","title":"LocationProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate\/applelocationprovider(_:didchangeaccuracyauthorization:)","title":"func appleLocationProvider(AppleLocationProvider, didChangeAccuracyAuthorization: CLAccuracyAuthorization)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate\/applelocationprovider(_:didfailwitherror:)","title":"func appleLocationProvider(AppleLocationProvider, didFailWithError: any Error)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate\/applelocationprovidershoulddisplayheadingcalibration(_:)","title":"func appleLocationProviderShouldDisplayHeadingCalibration(AppleLocationProvider) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationproviderdelegate","title":"AppleLocationProviderDelegate","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/init(distancefilter:desiredaccuracy:activitytype:)","title":"init(distanceFilter: CLLocationDistance, desiredAccuracy: CLLocationAccuracy, activityType: CLActivityType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/activitytype","title":"var activityType: CLActivityType","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/desiredaccuracy","title":"var desiredAccuracy: CLLocationAccuracy","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/distancefilter","title":"var distanceFilter: CLLocationDistance","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.struct","title":"AppleLocationProvider.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/init()","title":"convenience init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/delegate","title":"var delegate: (any AppleLocationProviderDelegate)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/latestlocation","title":"var latestLocation: Location?","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/onheadingupdate","title":"var onHeadingUpdate: Signal<Heading>","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/onlocationupdate","title":"var onLocationUpdate: Signal<[Location]>","type":"property"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/options-swift.property","title":"var options: AppleLocationProvider.Options","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/requesttemporaryfullaccuracyauthorization(withpurposekey:)","title":"func requestTemporaryFullAccuracyAuthorization(withPurposeKey: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: any Error)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanager(_:didupdateheading:)","title":"func locationManager(CLLocationManager, didUpdateHeading: CLHeading)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanagerdidchangeauthorization(_:)","title":"func locationManagerDidChangeAuthorization(CLLocationManager)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationmanagershoulddisplayheadingcalibration(_:)","title":"func locationManagerShouldDisplayHeadingCalibration(CLLocationManager) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/cllocationmanagerdelegateproxydelegate-implementations","title":"CLLocationManagerDelegateProxyDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/latestheading","title":"var latestHeading: Heading?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/add(headingobserver:)","title":"func add(headingObserver: any HeadingObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/remove(headingobserver:)","title":"func remove(headingObserver: any HeadingObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/headingprovider-implementations","title":"HeadingProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/addlocationobserver(for:)","title":"func addLocationObserver(for: any LocationObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/getlastobservedlocation()","title":"func getLastObservedLocation() -> Location?","type":"method"},{"path":"\/documentation\/mapboxmaps\/applelocationprovider\/removelocationobserver(for:)","title":"func removeLocationObserver(for: any LocationObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider\/locationprovider-implementations","title":"LocationProvider Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/applelocationprovider","title":"AppleLocationProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationerror\/init(code:message:)","title":"init(code: LocationErrorCode, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationerror\/code","title":"var code: LocationErrorCode","type":"property"},{"path":"\/documentation\/mapboxcommon\/locationerror\/message","title":"var message: String","type":"property"}],"path":"\/documentation\/mapboxcommon\/locationerror","title":"LocationError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/coordinate2d\/init(value:)","title":"init(value: CLLocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/coordinate2d\/value","title":"var value: CLLocationCoordinate2D","type":"property"}],"path":"\/documentation\/mapboxcommon\/coordinate2d","title":"Coordinate2D","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationextrakeys\/isexternal","title":"class var isExternal: String!","type":"property"},{"path":"\/documentation\/mapboxcommon\/locationextrakeys\/ismock","title":"class var isMock: String!","type":"property"}],"path":"\/documentation\/mapboxcommon\/locationextrakeys","title":"LocationExtraKeys","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationproviderrequest\/init(accuracy:displacement:interval:)","title":"init(accuracy: NSNumber?, displacement: NSNumber?, interval: IntervalSettings?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationproviderrequest\/accuracy","title":"var accuracy: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxcommon\/locationproviderrequest\/displacement","title":"var displacement: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxcommon\/locationproviderrequest\/interval","title":"var interval: IntervalSettings?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationproviderrequest\/isequal(to:)","title":"func isEqual(to: LocationProviderRequest) -> Bool","type":"method"}],"path":"\/documentation\/mapboxcommon\/locationproviderrequest","title":"LocationProviderRequest","type":"class"},{"path":"\/documentation\/mapboxcommon\/locationservicefactory","title":"LocationServiceFactory","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/devicelocationprovider\/getname()","title":"func getName() -> String?","type":"method"}],"path":"\/documentation\/mapboxcommon\/devicelocationprovider","title":"DeviceLocationProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/headingobserver\/onheadingupdate(_:)","title":"func onHeadingUpdate(Heading)","type":"method"}],"path":"\/documentation\/mapboxmaps\/headingobserver","title":"HeadingObserver","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/headingprovider\/latestheading","title":"var latestHeading: Heading?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/headingprovider\/add(headingobserver:)","title":"func add(headingObserver: any HeadingObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/headingprovider\/remove(headingobserver:)","title":"func remove(headingObserver: any HeadingObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/headingprovider","title":"HeadingProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationobserver\/onlocationupdatereceived(for:)","title":"func onLocationUpdateReceived(for: [Location])","type":"method"}],"path":"\/documentation\/mapboxcommon\/locationobserver","title":"LocationObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationserviceobserver\/onaccuracyauthorizationchanged(for:)","title":"func onAccuracyAuthorizationChanged(for: AccuracyAuthorization)","type":"method"},{"path":"\/documentation\/mapboxcommon\/locationserviceobserver\/onavailabilitychanged(forisavailable:)","title":"func onAvailabilityChanged(forIsAvailable: Bool)","type":"method"},{"path":"\/documentation\/mapboxcommon\/locationserviceobserver\/onpermissionstatuschanged(forpermission:)","title":"func onPermissionStatusChanged(forPermission: PermissionStatus)","type":"method"}],"path":"\/documentation\/mapboxcommon\/locationserviceobserver","title":"LocationServiceObserver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heading\/init(direction:accuracy:timestamp:)","title":"init(direction: CLLocationDirection, accuracy: CLLocationDirection, timestamp: Date)","type":"init"},{"path":"\/documentation\/mapboxmaps\/heading\/init(from:)","title":"init(from: CLHeading)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heading\/accuracy","title":"var accuracy: CLLocationDirection","type":"property"},{"path":"\/documentation\/mapboxmaps\/heading\/direction","title":"var direction: CLLocationDirection","type":"property"},{"path":"\/documentation\/mapboxmaps\/heading\/timestamp","title":"var timestamp: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/heading\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/heading\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/heading","title":"Heading","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/init(location:heading:)","title":"init(location: Location, heading: Heading?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/heading","title":"var heading: Heading?","type":"property"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/location","title":"var location: Location","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/puckrenderingdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/puckrenderingdata","title":"PuckRenderingData","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/exact","title":"case exact","type":"case"},{"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/inexact","title":"case inexact","type":"case"},{"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/accuracyauthorization\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/accuracyauthorization","title":"AccuracyAuthorization","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/high","title":"case high","type":"case"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/highest","title":"case highest","type":"case"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/low","title":"case low","type":"case"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/passive","title":"case passive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/accuracylevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/accuracylevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/accuracylevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/accuracylevel","title":"AccuracyLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/accessdenied","title":"case accessDenied","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/communicationfailure","title":"case communicationFailure","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/failedtodetectlocation","title":"case failedToDetectLocation","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/invalidargument","title":"case invalidArgument","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/notavailable","title":"case notAvailable","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/notready","title":"case notReady","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/notsupported","title":"case notSupported","type":"case"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/locationerrorcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/locationerrorcode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/locationerrorcode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/locationerrorcode","title":"LocationErrorCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/background","title":"case background","type":"case"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/denied","title":"case denied","type":"case"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/foreground","title":"case foreground","type":"case"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/granted","title":"case granted","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/permissionstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/permissionstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/permissionstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/permissionstatus","title":"PermissionStatus","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/intervalsettings\/init(minimuminterval:maximuminterval:interval:)","title":"init(minimumInterval: NSNumber?, maximumInterval: NSNumber?, interval: NSNumber?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/intervalsettings\/interval","title":"var interval: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxcommon\/intervalsettings\/maximuminterval","title":"var maximumInterval: NSNumber?","type":"property"},{"path":"\/documentation\/mapboxcommon\/intervalsettings\/minimuminterval","title":"var minimumInterval: NSNumber?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/intervalsettings\/isequal(to:)","title":"func isEqual(to: IntervalSettings) -> Bool","type":"method"}],"path":"\/documentation\/mapboxcommon\/intervalsettings","title":"IntervalSettings","type":"class"}],"path":"\/documentation\/mapboxmaps\/location-apis","title":"Location","type":"symbol"},{"children":[{"title":"Coordinates","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/init(x:y:)","title":"init(x: Double, y: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/y","title":"var y: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mercatorcoordinate\/isequal(to:)","title":"func isEqual(to: MercatorCoordinate) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/mercatorcoordinate","title":"MercatorCoordinate","type":"class"},{"title":"Projection","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/init(northing:easting:)","title":"init(northing: Double, easting: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/easting","title":"var easting: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/projectedmeters\/northing","title":"var northing: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/projectedmeters","title":"ProjectedMeters","type":"class"},{"path":"\/documentation\/mapboxmaps\/projection\/projectedmeters(for:)","title":"static func projectedMeters(for: CLLocationCoordinate2D) -> ProjectedMeters","type":"method"},{"title":"Camera Animations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/cameraanimators","title":"var cameraAnimators: [any CameraAnimator]","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/oncameraanimatorcancelled","title":"var onCameraAnimatorCancelled: Signal<any CameraAnimator>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/oncameraanimatorfinished","title":"var onCameraAnimatorFinished: Signal<any CameraAnimator>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/oncameraanimatorstarted","title":"var onCameraAnimatorStarted: Signal<any CameraAnimator>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/cancelanimations()","title":"func cancelAnimations()","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/ease(to:duration:curve:completion:)","title":"func ease(to: CameraOptions, duration: TimeInterval, curve: UIView.AnimationCurve, completion: AnimationCompletion?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/fly(to:duration:curve:completion:)","title":"func fly(to: CameraOptions, duration: TimeInterval?, curve: TimingCurve, completion: AnimationCompletion?) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:controlpoint1:controlpoint2:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, controlPoint1: CGPoint, controlPoint2: CGPoint, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:curve:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, curve: UIView.AnimationCurve, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:dampingratio:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, dampingRatio: CGFloat, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"},{"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager\/makeanimator(duration:timingparameters:animationowner:animations:)","title":"func makeAnimator(duration: TimeInterval, timingParameters: any UITimingCurveProvider, animationOwner: AnimationOwner, animations: (inout CameraTransition) -> Void) -> BasicCameraAnimator","type":"method"}],"path":"\/documentation\/mapboxmaps\/cameraanimationsmanager","title":"CameraAnimationsManager","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/owner","title":"var owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/cameraanimator","title":"CameraAnimator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/fractioncomplete","title":"var fractionComplete: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/isreversed","title":"var isReversed: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/oncancelled","title":"var onCancelled: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/onfinished","title":"var onFinished: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/onstarted","title":"var onStarted: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/owner","title":"var owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/pausesoncompletion","title":"var pausesOnCompletion: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/transition","title":"var transition: CameraTransition?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/addcompletion(_:)","title":"func addCompletion(AnimationCompletion)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/continueanimation(withtimingparameters:durationfactor:)","title":"func continueAnimation(withTimingParameters: (any UITimingCurveProvider)?, durationFactor: Double)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/pauseanimation()","title":"func pauseAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/startanimation()","title":"func startAnimation()","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/startanimation(afterdelay:)","title":"func startAnimation(afterDelay: TimeInterval)","type":"method"},{"path":"\/documentation\/mapboxmaps\/basiccameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/basiccameraanimator","title":"BasicCameraAnimator","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/fromvalue","title":"var fromValue: T","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/tovalue","title":"var toValue: T?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/change\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/change","title":"CameraTransition.Change","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/anchor","title":"var anchor: CameraTransition.Change<CGPoint>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/bearing","title":"var bearing: CameraTransition.Change<CLLocationDirection>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/center","title":"var center: CameraTransition.Change<CLLocationCoordinate2D>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/padding","title":"var padding: CameraTransition.Change<UIEdgeInsets>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/pitch","title":"var pitch: CameraTransition.Change<CGFloat>","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/shouldoptimizebearingpath","title":"var shouldOptimizeBearingPath: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/zoom","title":"var zoom: CameraTransition.Change<CGFloat>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/cameratransition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/cameratransition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/cameratransition","title":"CameraTransition","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/duration","title":"let duration: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/oncancelled","title":"var onCancelled: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/onfinished","title":"var onFinished: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/onstarted","title":"var onStarted: Signal<Void>","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/owner","title":"let owner: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/state","title":"var state: UIViewAnimatingState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/mapboxmaps\/flytocameraanimator\/stopanimation()","title":"func stopAnimation()","type":"method"}],"path":"\/documentation\/mapboxmaps\/flytocameraanimator","title":"FlyToCameraAnimator","type":"class"},{"path":"\/documentation\/mapboxmaps\/animationcompletion","title":"AnimationCompletion","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/rawvalue-swift.property","title":"let rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/rawvalue-swift.typealias","title":"AnimationOwner.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/compass","title":"static let compass: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/animationowner\/gestures","title":"static let gestures: AnimationOwner","type":"property"},{"path":"\/documentation\/mapboxmaps\/animationowner\/unspecified","title":"static let unspecified: AnimationOwner","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/animationowner\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/animationowner\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/animationowner","title":"AnimationOwner","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/easein","title":"static let easeIn: TimingCurve","type":"property"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/easeinout","title":"static let easeInOut: TimingCurve","type":"property"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/easeout","title":"static let easeOut: TimingCurve","type":"property"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/linear","title":"static let linear: TimingCurve","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/timingcurve\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/timingcurve\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/timingcurve","title":"TimingCurve","type":"struct"},{"title":"Viewport","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/defaulttransition","title":"var defaultTransition: any ViewportTransition","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/options","title":"var options: ViewportOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/status","title":"var status: ViewportStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/addstatusobserver(_:)","title":"func addStatusObserver(any ViewportStatusObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/idle()","title":"func idle()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makecameraviewportstate(camera:)","title":"func makeCameraViewportState(camera: CameraOptions) -> any ViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makedefaultviewporttransition(options:)","title":"func makeDefaultViewportTransition(options: DefaultViewportTransitionOptions) -> DefaultViewportTransition","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makefollowpuckviewportstate(options:)","title":"func makeFollowPuckViewportState(options: FollowPuckViewportStateOptions) -> FollowPuckViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makeimmediateviewporttransition()","title":"func makeImmediateViewportTransition() -> ImmediateViewportTransition","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/makeoverviewviewportstate(options:)","title":"func makeOverviewViewportState(options: OverviewViewportStateOptions) -> OverviewViewportState","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/removestatusobserver(_:)","title":"func removeStatusObserver(any ViewportStatusObserver)","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportmanager\/transition(to:transition:completion:)","title":"func transition(to: any ViewportState, transition: (any ViewportTransition)?, completion: ((Bool) -> Void)?)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportmanager","title":"ViewportManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/init(transitionstoidleuponuserinteraction:)","title":"init(transitionsToIdleUponUserInteraction: Bool)","type":"init"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/init(transitionstoidleuponuserinteraction:usessafeareainsetsaspadding:)","title":"init(transitionsToIdleUponUserInteraction: Bool, usesSafeAreaInsetsAsPadding: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/transitionstoidleuponuserinteraction","title":"var transitionsToIdleUponUserInteraction: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/usessafeareainsetsaspadding","title":"var usesSafeAreaInsetsAsPadding: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportoptions","title":"ViewportOptions","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/==(_:_:)","title":"static func == (ViewportStatus, ViewportStatus) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/state(_:)","title":"case state(any ViewportState)","type":"case"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/transition(_:tostate:)","title":"case transition(any ViewportTransition, toState: any ViewportState)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportstatus","title":"ViewportStatus","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatusobserver\/viewportstatusdidchange(from:to:reason:)","title":"func viewportStatusDidChange(from: ViewportStatus, to: ViewportStatus, reason: ViewportStatusChangeReason)","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportstatusobserver","title":"ViewportStatusObserver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/idlerequested","title":"static let idleRequested: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionfailed","title":"static let transitionFailed: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionstarted","title":"static let transitionStarted: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/transitionsucceeded","title":"static let transitionSucceeded: ViewportStatusChangeReason","type":"property"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/userinteraction","title":"static let userInteraction: ViewportStatusChangeReason","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/viewportstatuschangereason","title":"ViewportStatusChangeReason","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/viewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewportstate","title":"ViewportState","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/options","title":"var options: FollowPuckViewportStateOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstate\/viewportstate-implementations","title":"ViewportState Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstate","title":"FollowPuckViewportState","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/init(padding:zoom:bearing:pitch:)","title":"init(padding: UIEdgeInsets?, zoom: CGFloat?, bearing: FollowPuckViewportStateBearing?, pitch: CGFloat?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/bearing","title":"var bearing: FollowPuckViewportStateBearing?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/padding","title":"var padding: UIEdgeInsets?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/pitch","title":"var pitch: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/zoom","title":"var zoom: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstateoptions","title":"FollowPuckViewportStateOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/constant(_:)","title":"case constant(CLLocationDirection)","type":"case"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/course","title":"case course","type":"case"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/heading","title":"case heading","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/followpuckviewportstatebearing","title":"FollowPuckViewportStateBearing","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/options","title":"var options: OverviewViewportStateOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/observedatasource(with:)","title":"func observeDataSource(with: (CameraOptions) -> Bool) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/startupdatingcamera()","title":"func startUpdatingCamera()","type":"method"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/stopupdatingcamera()","title":"func stopUpdatingCamera()","type":"method"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstate\/viewportstate-implementations","title":"ViewportState Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstate","title":"OverviewViewportState","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/init(geometry:geometrypadding:bearing:pitch:padding:maxzoom:offset:animationduration:)","title":"init(geometry: any GeometryConvertible, geometryPadding: UIEdgeInsets, bearing: CLLocationDirection?, pitch: CGFloat?, padding: UIEdgeInsets?, maxZoom: Double?, offset: CGPoint?, animationDuration: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/animationduration","title":"var animationDuration: TimeInterval","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/bearing","title":"var bearing: CLLocationDirection?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/geometrypadding","title":"var geometryPadding: UIEdgeInsets","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/maxzoom","title":"var maxZoom: Double?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/offset","title":"var offset: CGPoint?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/padding","title":"var padding: UIEdgeInsets?","type":"property"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/pitch","title":"var pitch: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/overviewviewportstateoptions","title":"OverviewViewportStateOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/viewporttransition\/run(to:completion:)","title":"func run(to: any ViewportState, completion: (Bool) -> Void) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/viewporttransition","title":"ViewportTransition","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/options","title":"var options: DefaultViewportTransitionOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/run(to:completion:)","title":"func run(to: any ViewportState, completion: (Bool) -> Void) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransition\/viewporttransition-implementations","title":"ViewportTransition Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransition","title":"DefaultViewportTransition","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/init(maxduration:)","title":"init(maxDuration: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/maxduration","title":"var maxDuration: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/defaultviewporttransitionoptions","title":"DefaultViewportTransitionOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/immediateviewporttransition\/run(to:completion:)","title":"func run(to: any ViewportState, completion: (Bool) -> Void) -> any Cancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/immediateviewporttransition","title":"ImmediateViewportTransition","type":"class"}],"path":"\/documentation\/mapboxmaps\/camera-and-coordinates","title":"Camera and coordinates","type":"symbol"},{"children":[{"title":"Ornaments","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/attributionbutton","title":"var attributionButton: UIView","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/compassview","title":"var compassView: UIView","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/logoview","title":"var logoView: UIView","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/options","title":"var options: OrnamentOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentsmanager\/scalebarview","title":"var scaleBarView: UIView","type":"property"}],"path":"\/documentation\/mapboxmaps\/ornamentsmanager","title":"OrnamentsManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/init(scalebar:compass:logo:attributionbutton:)","title":"init(scaleBar: ScaleBarViewOptions, compass: CompassViewOptions, logo: LogoViewOptions, attributionButton: AttributionButtonOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/attributionbutton","title":"var attributionButton: AttributionButtonOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/compass","title":"var compass: CompassViewOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/logo","title":"var logo: LogoViewOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/scalebar","title":"var scaleBar: ScaleBarViewOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/ornamentoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ornamentoptions","title":"OrnamentOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomleading","title":"case bottomLeading","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/bottomtrailing","title":"case bottomTrailing","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/topleading","title":"case topLeading","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/topright","title":"case topRight","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/toptrailing","title":"case topTrailing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/ornamentposition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentposition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/ornamentposition\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ornamentposition","title":"OrnamentPosition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/adaptive","title":"case adaptive","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/hidden","title":"case hidden","type":"case"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/visible","title":"case visible","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/ornamentvisibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/ornamentvisibility","title":"OrnamentVisibility","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/init(position:margins:)","title":"init(position: OrnamentPosition, margins: CGPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/attributionbuttonoptions","title":"AttributionButtonOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/init(position:margins:image:visibility:)","title":"init(position: OrnamentPosition, margins: CGPoint, image: UIImage?, visibility: OrnamentVisibility)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/image","title":"var image: UIImage?","type":"property"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/visibility","title":"var visibility: OrnamentVisibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassviewoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/compassviewoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/compassviewoptions","title":"CompassViewOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/init(position:margins:)","title":"init(position: OrnamentPosition, margins: CGPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/logoviewoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/logoviewoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/logoviewoptions","title":"LogoViewOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/init(position:margins:visibility:usemetricunits:)","title":"init(position: OrnamentPosition, margins: CGPoint, visibility: OrnamentVisibility, useMetricUnits: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/margins","title":"var margins: CGPoint","type":"property"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/position","title":"var position: OrnamentPosition","type":"property"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/usemetricunits","title":"var useMetricUnits: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/visibility","title":"var visibility: OrnamentVisibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/scalebarviewoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/scalebarviewoptions","title":"ScaleBarViewOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.property","title":"var style: CompassDirectionFormatter.Style","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/string(from:)","title":"func string(from: CLLocationDirection) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/long","title":"case long","type":"case"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/short","title":"case short","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/compassdirectionformatter\/style-swift.enum","title":"CompassDirectionFormatter.Style","type":"enum"}],"path":"\/documentation\/mapboxmaps\/compassdirectionformatter","title":"CompassDirectionFormatter","type":"class"}],"path":"\/documentation\/mapboxmaps\/ornaments","title":"Ornaments","type":"symbol"},{"children":[{"title":"Gestures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/delegate","title":"var delegate: (any GestureManagerDelegate)?","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/doubletaptozoomingesturerecognizer","title":"var doubleTapToZoomInGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/doubletouchtozoomoutgesturerecognizer","title":"var doubleTouchToZoomOutGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/longpressgesturerecognizer","title":"var longPressGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/onmaplongpress","title":"var onMapLongPress: Signal<InteractionContext>","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/onmaptap","title":"var onMapTap: Signal<InteractionContext>","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/options","title":"var options: GestureOptions","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/pangesturerecognizer","title":"var panGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/pinchgesturerecognizer","title":"var pinchGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/pitchgesturerecognizer","title":"var pitchGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/quickzoomgesturerecognizer","title":"var quickZoomGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/rotategesturerecognizer","title":"var rotateGestureRecognizer: UIGestureRecognizer","type":"property"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/singletapgesturerecognizer","title":"var singleTapGestureRecognizer: UIGestureRecognizer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/onlayerlongpress(_:handler:)","title":"func onLayerLongPress(String, handler: MapLayerGestureHandler) -> AnyCancelable","type":"method"},{"path":"\/documentation\/mapboxmaps\/gesturemanager\/onlayertap(_:handler:)","title":"func onLayerTap(String, handler: MapLayerGestureHandler) -> AnyCancelable","type":"method"}],"path":"\/documentation\/mapboxmaps\/gesturemanager","title":"GestureManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/init(panenabled:pinchenabled:rotateenabled:simultaneousrotateandpinchzoomenabled:pinchzoomenabled:pinchpanenabled:pitchenabled:doubletaptozoominenabled:doubletouchtozoomoutenabled:quickzoomenabled:panmode:pandecelerationfactor:focalpoint:)","title":"init(panEnabled: Bool, pinchEnabled: Bool, rotateEnabled: Bool, simultaneousRotateAndPinchZoomEnabled: Bool, pinchZoomEnabled: Bool, pinchPanEnabled: Bool, pitchEnabled: Bool, doubleTapToZoomInEnabled: Bool, doubleTouchToZoomOutEnabled: Bool, quickZoomEnabled: Bool, panMode: PanMode, panDecelerationFactor: CGFloat, focalPoint: CGPoint?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/doubletaptozoominenabled","title":"var doubleTapToZoomInEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/doubletouchtozoomoutenabled","title":"var doubleTouchToZoomOutEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/focalpoint","title":"var focalPoint: CGPoint?","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pandecelerationfactor","title":"var panDecelerationFactor: CGFloat","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/panenabled","title":"var panEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/panmode","title":"var panMode: PanMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pinchenabled","title":"var pinchEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pinchpanenabled","title":"var pinchPanEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pinchzoomenabled","title":"var pinchZoomEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/pitchenabled","title":"var pitchEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/quickzoomenabled","title":"var quickZoomEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/rotateenabled","title":"var rotateEnabled: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/simultaneousrotateandpinchzoomenabled","title":"var simultaneousRotateAndPinchZoomEnabled: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gestureoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/gestureoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/gestureoptions","title":"GestureOptions","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/horizontal","title":"case horizontal","type":"case"},{"path":"\/documentation\/mapboxmaps\/panmode\/horizontalandvertical","title":"case horizontalAndVertical","type":"case"},{"path":"\/documentation\/mapboxmaps\/panmode\/vertical","title":"case vertical","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/panmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/panmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/panmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/panmode","title":"PanMode","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate\/gesturemanager(_:didbegin:)","title":"func gestureManager(GestureManager, didBegin: GestureType)","type":"method"},{"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate\/gesturemanager(_:didend:willanimate:)","title":"func gestureManager(GestureManager, didEnd: GestureType, willAnimate: Bool)","type":"method"},{"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate\/gesturemanager(_:didendanimatingfor:)","title":"func gestureManager(GestureManager, didEndAnimatingFor: GestureType)","type":"method"}],"path":"\/documentation\/mapboxmaps\/gesturemanagerdelegate","title":"GestureManagerDelegate","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/doubletaptozoomin","title":"case doubleTapToZoomIn","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/doubletouchtozoomout","title":"case doubleTouchToZoomOut","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/pinch","title":"case pinch","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/pitch","title":"case pitch","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/quickzoom","title":"case quickZoom","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/rotation","title":"case rotation","type":"case"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/singletap","title":"case singleTap","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/gesturetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/gesturetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/gesturetype","title":"GestureType","type":"enum"},{"path":"\/documentation\/mapboxmaps\/mapcontentgesturecontext","title":"MapContentGestureContext","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/interactioncontext\/init(point:coordinate:isonsurface:)","title":"init(point: CGPoint, coordinate: CLLocationCoordinate2D, isOnSurface: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/interactioncontext\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/interactioncontext\/isonsurface","title":"var isOnSurface: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/interactioncontext\/point","title":"var point: CGPoint","type":"property"}],"path":"\/documentation\/mapboxmaps\/interactioncontext","title":"InteractionContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationclustergesturecontext\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotationclustergesturecontext\/expansionzoom","title":"let expansionZoom: CGFloat?","type":"property"},{"path":"\/documentation\/mapboxmaps\/annotationclustergesturecontext\/point","title":"var point: CGPoint","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/annotationclustergesturecontext\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/annotationclustergesturecontext\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/annotationclustergesturecontext","title":"AnnotationClusterGestureContext","type":"struct"},{"path":"\/documentation\/mapboxmaps\/maplayergesturehandler","title":"MapLayerGestureHandler","type":"typealias"}],"path":"\/documentation\/mapboxmaps\/gestures","title":"Gestures","type":"symbol"},{"children":[{"title":"Settings","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/mapboxcommonsettings\/language","title":"class var language: String!","type":"property"},{"path":"\/documentation\/mapboxcommon\/mapboxcommonsettings\/worldview","title":"class var worldview: String!","type":"property"}],"path":"\/documentation\/mapboxcommon\/mapboxcommonsettings","title":"MapboxCommonSettings","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/mapboxoptions\/accesstoken","title":"static var accessToken: String","type":"property"}],"path":"\/documentation\/mapboxcommon\/mapboxoptions","title":"MapboxOptions","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/assetpath","title":"static var assetPath: URL","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/baseurl","title":"static var baseURL: URL","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/datapath","title":"static var dataPath: URL","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/tilestore","title":"static var tileStore: TileStore?","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions\/tilestoreusagemode","title":"static var tileStoreUsageMode: TileStoreUsageMode","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapboxmapsoptions","title":"MapboxMapsOptions","type":"enum"},{"title":"Common Settings","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsservice\/erase(key:)","title":"func erase(key: String) -> Result<Void, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxcommon\/settingsservice\/get(key:type:)","title":"func get<T>(key: String, type: T.Type) -> Result<T, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxcommon\/settingsservice\/get(key:type:defaultvalue:)","title":"func get<T>(key: String, type: T.Type, defaultValue: T) -> Result<T, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxcommon\/settingsservice\/has(key:)","title":"func has(key: String) -> Result<Bool, SettingsServiceError>","type":"method"},{"path":"\/documentation\/mapboxcommon\/settingsservice\/set(key:value:)","title":"func set<T>(key: String, value: T) -> Result<Void, SettingsServiceError>","type":"method"}],"path":"\/documentation\/mapboxcommon\/settingsservice","title":"SettingsService","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsservicefactory\/getinstance(storagetype:)","title":"static func getInstance(storageType: SettingsServiceStorageType) -> SettingsService","type":"method"},{"path":"\/documentation\/mapboxcommon\/settingsservicefactory\/getinstancefor(_:)","title":"class func getInstanceFor(SettingsServiceStorageType) -> SettingsService","type":"method"}],"path":"\/documentation\/mapboxcommon\/settingsservicefactory","title":"SettingsServiceFactory","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/==(_:_:)","title":"static func == (SettingsServiceError, SettingsServiceError) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/init(description:)","title":"init(description: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxcommon\/settingsserviceerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/settingsserviceerror","title":"SettingsServiceError","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/nonpersistent","title":"case nonPersistent","type":"case"},{"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/persistent","title":"case persistent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/settingsservicestoragetype","title":"SettingsServiceStorageType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/sdkinformation\/init(name:version:packagename:)","title":"init(name: String, version: String, packageName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/sdkinformation\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/mapboxcommon\/sdkinformation\/packagename","title":"var packageName: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/sdkinformation\/version","title":"var version: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/sdkinformation\/isequal(to:)","title":"func isEqual(to: SdkInformation) -> Bool","type":"method"}],"path":"\/documentation\/mapboxcommon\/sdkinformation","title":"SdkInformation","type":"class"},{"title":"Constants","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/defaulttransitionduration","title":"class var defaultTransitionDuration: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/maxpitch","title":"class var maxPitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/maxzoom","title":"class var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/minpitch","title":"class var minPitch: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/mapconstants\/minzoom","title":"class var minZoom: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/mapconstants","title":"MapConstants","type":"class"}],"path":"\/documentation\/mapboxmaps\/settings-and-constants","title":"Settings and Constants","type":"symbol"},{"title":"Dependencies","type":"groupMarker"},{"children":[{"title":"Offline","type":"groupMarker"},{"children":[{"title":"Offline","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/createtilesetdescriptor(for:)","title":"func createTilesetDescriptor(for: TilesetDescriptorOptions) -> MBXTilesetDescriptor","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlinemanager\/removestylepack(forstyleuri:)","title":"func removeStylePack(forStyleURI: String)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlinemanager","title":"OfflineManager","type":"class"},{"title":"Deprecated","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/getgeometrydefinition()","title":"func getGeometryDefinition() -> OfflineRegionGeometryDefinition?","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/getidentifier()","title":"func getIdentifier() -> Int64","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/getmetadata()","title":"func getMetadata() -> Data","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/gettilepyramiddefinition()","title":"func getTilePyramidDefinition() -> OfflineRegionTilePyramidDefinition?","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/setofflineregiondownloadstatefor(_:)","title":"func setOfflineRegionDownloadStateFor(OfflineRegionDownloadState)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregion\/setofflineregionobserverfor(_:)","title":"func setOfflineRegionObserverFor(any OfflineRegionObserver)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregion","title":"OfflineRegion","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/init(type:message:isfatal:retryafter:)","title":"init(type: OfflineRegionErrorType, message: String, isFatal: Bool, retryAfter: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/isfatal","title":"var isFatal: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/retryafter","title":"var retryAfter: Date?","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionerror\/type","title":"var type: OfflineRegionErrorType","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregionerror","title":"OfflineRegionError","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/glyphsrasterizationmode","title":"var glyphsRasterizationMode: GlyphsRasterizationMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/maxzoom","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/minzoom","title":"var minZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/pixelratio","title":"var pixelRatio: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition\/styleurl","title":"var styleURL: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregiongeometrydefinition","title":"OfflineRegionGeometryDefinition","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionmanager\/setofflinemapboxtilecountlimitforlimit(_:)","title":"func setOfflineMapboxTileCountLimitForLimit(UInt64)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregionmanager","title":"OfflineRegionManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/init(styleurl:bounds:minzoom:maxzoom:pixelratio:glyphsrasterizationmode:)","title":"init(styleURL: String, bounds: CoordinateBounds, minZoom: Double, maxZoom: Double, pixelRatio: Float, glyphsRasterizationMode: GlyphsRasterizationMode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/bounds","title":"var bounds: CoordinateBounds","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/glyphsrasterizationmode","title":"var glyphsRasterizationMode: GlyphsRasterizationMode","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/maxzoom","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/minzoom","title":"var minZoom: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/pixelratio","title":"var pixelRatio: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition\/styleurl","title":"var styleURL: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregiontilepyramiddefinition","title":"OfflineRegionTilePyramidDefinition","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/init(downloadstate:completedresourcecount:completedresourcesize:completedtilecount:requiredtilecount:completedtilesize:requiredresourcecount:requiredresourcecountisprecise:)","title":"init(downloadState: OfflineRegionDownloadState, completedResourceCount: UInt64, completedResourceSize: UInt64, completedTileCount: UInt64, requiredTileCount: UInt64, completedTileSize: UInt64, requiredResourceCount: UInt64, requiredResourceCountIsPrecise: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedresourcecount","title":"var completedResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedresourcesize","title":"var completedResourceSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedtilecount","title":"var completedTileCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/completedtilesize","title":"var completedTileSize: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/downloadstate","title":"var downloadState: OfflineRegionDownloadState","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/requiredresourcecount","title":"var requiredResourceCount: UInt64","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/requiredresourcecountisprecise","title":"var requiredResourceCountIsPrecise: Bool","type":"property"},{"path":"\/documentation\/mapboxmaps\/offlineregionstatus\/requiredtilecount","title":"var requiredTileCount: UInt64","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineregionstatus","title":"OfflineRegionStatus","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionobserver\/erroroccurred(forerror:)","title":"func errorOccurred(forError: OfflineRegionError)","type":"method"},{"path":"\/documentation\/mapboxmaps\/offlineregionobserver\/statuschanged(for:)","title":"func statusChanged(for: OfflineRegionStatus)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregionobserver","title":"OfflineRegionObserver","type":"protocol"},{"path":"\/documentation\/mapboxmaps\/stylepackloadprogresscallback","title":"StylePackLoadProgressCallback","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/active","title":"case active","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/inactive","title":"case inactive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/offlineregiondownloadstate","title":"OfflineRegionDownloadState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/connection","title":"case connection","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/diskfull","title":"case diskFull","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/other","title":"case other","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/ratelimit","title":"case rateLimit","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/server","title":"case server","type":"case"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/tilecountlimitexceeded","title":"case tileCountLimitExceeded","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/offlineregionerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/offlineregionerrortype","title":"OfflineRegionErrorType","type":"enum"},{"title":"Control network","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineswitch\/ismapboxstackconnected","title":"var isMapboxStackConnected: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/offlineswitch\/shared","title":"static var shared: OfflineSwitch","type":"property"}],"path":"\/documentation\/mapboxmaps\/offlineswitch","title":"OfflineSwitch","type":"class"}],"path":"\/documentation\/mapboxmaps\/offline","title":"Offline Support","type":"symbol"},{"title":"Free Camera","type":"groupMarker"},{"children":[{"title":"Symbols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec3\/init(x:y:z:)","title":"init(x: Double, y: Double, z: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec3\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec3\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec3\/z","title":"var z: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/vec3","title":"Vec3","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec4\/init(x:y:z:w:)","title":"init(x: Double, y: Double, z: Double, w: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/vec4\/w","title":"var w: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec4\/x","title":"var x: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec4\/y","title":"var y: Double","type":"property"},{"path":"\/documentation\/mapboxmaps\/vec4\/z","title":"var z: Double","type":"property"}],"path":"\/documentation\/mapboxmaps\/vec4","title":"Vec4","type":"class"}],"path":"\/documentation\/mapboxmaps\/free-camera","title":"Free Camera","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/coremaps","title":"Core Maps API","type":"symbol"},{"children":[{"title":"GeoJSON","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/feature","title":"Feature","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/geometry","title":"Geometry","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geometrytype\/init(_:)","title":"init(UInt32)","type":"init"},{"path":"\/documentation\/mapboxcommon\/geometrytype\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geometrytype\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geometrytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/geometrytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/geometrytype","title":"GeometryType","type":"struct"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/foreignmembercontainer\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"}],"path":"\/documentation\/turf\/foreignmembercontainer","title":"ForeignMemberContainer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobjectconvertible\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/geojsonobjectconvertible","title":"GeoJSONObjectConvertible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometryconvertible\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/geometryconvertible","title":"GeometryConvertible","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/wktconvertible\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/wktconvertible\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/wktconvertible","title":"WKTConvertible","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/init(from:)-9xec0","title":"init?(from: [LocationCoordinate2D]?)","type":"init"},{"path":"\/documentation\/turf\/boundingbox\/init(southwest:northeast:)","title":"init(southWest: LocationCoordinate2D, northEast: LocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/northeast","title":"var northEast: LocationCoordinate2D","type":"property"},{"path":"\/documentation\/turf\/boundingbox\/southwest","title":"var southWest: LocationCoordinate2D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/init(from:)-4rkw3","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/boundingbox\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/boundingbox\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/turf\/boundingbox\/==(_:_:)","title":"static func == (BoundingBox, BoundingBox) -> Bool","type":"op"}],"path":"\/documentation\/turf\/boundingbox\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/turf\/boundingbox\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/boundingbox","title":"BoundingBox","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/==(_:_:)","title":"static func == (Feature, Feature) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/init(geometry:)-26txa","title":"init(geometry: (any GeometryConvertible)?)","type":"init"},{"path":"\/documentation\/turf\/feature\/init(geometry:)-fxio","title":"init(geometry: Geometry)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/feature\/geometry","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/turf\/feature\/identifier","title":"var identifier: FeatureIdentifier?","type":"property"},{"path":"\/documentation\/turf\/feature\/properties","title":"var properties: JSONObject?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/feature\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/feature\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/feature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/feature\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/feature","title":"Feature","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/==(_:_:)","title":"static func == (FeatureCollection, FeatureCollection) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/init(features:)","title":"init(features: [Feature])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/features","title":"var features: [Feature]","type":"property"},{"path":"\/documentation\/turf\/featurecollection\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/featurecollection\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/featurecollection\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/featurecollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/featurecollection\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/featurecollection","title":"FeatureCollection","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/==(_:_:)","title":"static func == (GeometryCollection, GeometryCollection) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/init(_:)","title":"init(MultiPolygon)","type":"init"},{"path":"\/documentation\/turf\/geometrycollection\/init(geometries:)","title":"init(geometries: [Geometry])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/geometrycollection\/geometries","title":"var geometries: [Geometry]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/geometrycollection\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/geometrycollection\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/geometrycollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/geometrycollection\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/geometrycollection\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/geometrycollection","title":"GeometryCollection","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinate\/coordinate","title":"let coordinate: Array<LocationCoordinate2D>.Element","type":"property"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinate\/distance","title":"let distance: LocationDistance","type":"property"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinate\/index","title":"let index: Array<LocationCoordinate2D>.Index","type":"property"}],"path":"\/documentation\/turf\/linestring\/indexedcoordinate","title":"LineString.IndexedCoordinate","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/==(_:_:)","title":"static func == (LineString, LineString) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/init(_:)-1ds6r","title":"init(Ring)","type":"init"},{"path":"\/documentation\/turf\/linestring\/init(_:)-nl31","title":"init([LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"path":"\/documentation\/turf\/linestring\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/bezier(resolution:sharpness:)","title":"func bezier(resolution: Int, sharpness: Double) -> LineString?","type":"method"},{"path":"\/documentation\/turf\/linestring\/closestcoordinate(to:)","title":"func closestCoordinate(to: LocationCoordinate2D) -> LineString.IndexedCoordinate?","type":"method"},{"path":"\/documentation\/turf\/linestring\/coordinatefromstart(distance:)","title":"func coordinateFromStart(distance: LocationDistance) -> LocationCoordinate2D?","type":"method"},{"path":"\/documentation\/turf\/linestring\/distance(from:to:)","title":"func distance(from: LocationCoordinate2D?, to: LocationCoordinate2D?) -> LocationDistance?","type":"method"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinatefromstart(distance:)","title":"func indexedCoordinateFromStart(distance: LocationDistance) -> LineString.IndexedCoordinate?","type":"method"},{"path":"\/documentation\/turf\/linestring\/intersections(with:)","title":"func intersections(with: LineString) -> [LocationCoordinate2D]","type":"method"},{"path":"\/documentation\/turf\/linestring\/simplified(tolerance:highestquality:)","title":"func simplified(tolerance: Double, highestQuality: Bool) -> LineString","type":"method"},{"path":"\/documentation\/turf\/linestring\/simplify(tolerance:highestquality:)","title":"func simplify(tolerance: Double, highestQuality: Bool)","type":"method"},{"path":"\/documentation\/turf\/linestring\/sliced(from:to:)","title":"func sliced(from: LocationCoordinate2D?, to: LocationCoordinate2D?) -> LineString?","type":"method"},{"path":"\/documentation\/turf\/linestring\/trimmed(from:distance:)","title":"func trimmed(from: LocationCoordinate2D, distance: LocationDistance) -> LineString?","type":"method"},{"path":"\/documentation\/turf\/linestring\/trimmed(from:to:)","title":"func trimmed(from: LocationDistance, to: LocationDistance) -> LineString?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/linestring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/linestring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/linestring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/linestring\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/linestring\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/linestring","title":"LineString","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/==(_:_:)","title":"static func == (MultiLineString, MultiLineString) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/init(_:)-20bqv","title":"init(Polygon)","type":"init"},{"path":"\/documentation\/turf\/multilinestring\/init(_:)-3haud","title":"init([[LocationCoordinate2D]])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/coordinates","title":"var coordinates: [[LocationCoordinate2D]]","type":"property"},{"path":"\/documentation\/turf\/multilinestring\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/multilinestring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/multilinestring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/multilinestring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/multilinestring\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/multilinestring\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/multilinestring","title":"MultiLineString","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/==(_:_:)","title":"static func == (MultiPoint, MultiPoint) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/init(_:)","title":"init([LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"path":"\/documentation\/turf\/multipoint\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/multipoint\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/multipoint\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/multipoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/multipoint\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/multipoint\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/multipoint","title":"MultiPoint","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/==(_:_:)","title":"static func == (MultiPolygon, MultiPolygon) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/init(_:)-1pebz","title":"init([[[LocationCoordinate2D]]])","type":"init"},{"path":"\/documentation\/turf\/multipolygon\/init(_:)-990j","title":"init([Polygon])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/coordinates","title":"var coordinates: [[[LocationCoordinate2D]]]","type":"property"},{"path":"\/documentation\/turf\/multipolygon\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/multipolygon\/polygons","title":"var polygons: [Polygon]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/multipolygon\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/multipolygon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/multipolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/multipolygon\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/multipolygon\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/multipolygon","title":"MultiPolygon","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/==(_:_:)","title":"static func == (Point, Point) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/init(_:)","title":"init(LocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/coordinates","title":"var coordinates: LocationCoordinate2D","type":"property"},{"path":"\/documentation\/turf\/point\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/point\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/point\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/point\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/point\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/point\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/point","title":"Point","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/==(_:_:)","title":"static func == (Polygon, Polygon) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/init(_:)","title":"init([[LocationCoordinate2D]])","type":"init"},{"path":"\/documentation\/turf\/polygon\/init(center:radius:vertices:)","title":"init(center: LocationCoordinate2D, radius: LocationDistance, vertices: Int)","type":"init"},{"path":"\/documentation\/turf\/polygon\/init(outerring:innerrings:)","title":"init(outerRing: Ring, innerRings: [Ring])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/area","title":"var area: Double","type":"property"},{"path":"\/documentation\/turf\/polygon\/center","title":"var center: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/turf\/polygon\/centerofmass","title":"var centerOfMass: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/turf\/polygon\/centroid","title":"var centroid: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/turf\/polygon\/coordinates","title":"var coordinates: [[LocationCoordinate2D]]","type":"property"},{"path":"\/documentation\/turf\/polygon\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/polygon\/innerrings","title":"var innerRings: [Ring]","type":"property"},{"path":"\/documentation\/turf\/polygon\/outerring","title":"var outerRing: Ring","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"path":"\/documentation\/turf\/polygon\/simplified(tolerance:highestquality:)","title":"func simplified(tolerance: Double, highestQuality: Bool) -> Polygon","type":"method"},{"path":"\/documentation\/turf\/polygon\/simplify(tolerance:highestquality:)","title":"func simplify(tolerance: Double, highestQuality: Bool)","type":"method"},{"path":"\/documentation\/turf\/polygon\/smooth(iterations:)","title":"func smooth(iterations: Int) -> Polygon","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/polygon\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/polygon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/polygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/polygon\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/polygon\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/polygon","title":"Polygon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/radiancoordinate2d\/init(_:)","title":"init(LocationCoordinate2D)","type":"init"},{"path":"\/documentation\/turf\/radiancoordinate2d\/init(latitude:longitude:)","title":"init(latitude: LocationRadians, longitude: LocationRadians)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/radiancoordinate2d\/coordinate(at:facing:)","title":"func coordinate(at: RadianDistance, facing: Measurement<UnitAngle>) -> RadianCoordinate2D","type":"method"},{"path":"\/documentation\/turf\/radiancoordinate2d\/direction(to:)","title":"func direction(to: RadianCoordinate2D) -> Measurement<UnitAngle>","type":"method"},{"path":"\/documentation\/turf\/radiancoordinate2d\/distance(to:)","title":"func distance(to: RadianCoordinate2D) -> RadianDistance","type":"method"}],"path":"\/documentation\/turf\/radiancoordinate2d","title":"RadianCoordinate2D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/init(coordinates:)","title":"init(coordinates: [LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/area","title":"var area: Double","type":"property"},{"path":"\/documentation\/turf\/ring\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/ring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/ring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/ring","title":"Ring","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/turf\/intersection(_:_:)","title":"func intersection(LineSegment, LineSegment) -> LocationCoordinate2D?","type":"func"},{"path":"\/documentation\/turf\/mid(_:_:)","title":"func mid(LocationCoordinate2D, LocationCoordinate2D) -> LocationCoordinate2D","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonarray","title":"JSONArray","type":"typealias"},{"path":"\/documentation\/turf\/jsonobject","title":"JSONObject","type":"typealias"},{"path":"\/documentation\/turf\/linesegment","title":"LineSegment","type":"typealias"},{"path":"\/documentation\/turf\/locationcoordinate2d","title":"LocationCoordinate2D","type":"typealias"},{"path":"\/documentation\/turf\/locationdegrees","title":"LocationDegrees","type":"typealias"},{"path":"\/documentation\/turf\/locationdirection","title":"LocationDirection","type":"typealias"},{"path":"\/documentation\/turf\/locationdistance","title":"LocationDistance","type":"typealias"},{"path":"\/documentation\/turf\/locationradians","title":"LocationRadians","type":"typealias"},{"path":"\/documentation\/turf\/radiandistance","title":"RadianDistance","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/==(_:_:)","title":"static func == (Consumer<Label>.Charset, Consumer<Label>.Charset) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/turf\/consumer\/charset\/ranges","title":"var ranges: [CountableClosedRange<UInt32>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/charset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/charset","title":"Consumer.Charset","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.property","title":"var kind: Consumer<Label>.Error.Kind","type":"property"},{"path":"\/documentation\/turf\/consumer\/error\/location","title":"var location: Consumer<Label>.Location?","type":"property"},{"path":"\/documentation\/turf\/consumer\/error\/remaining","title":"var remaining: Substring.UnicodeScalarView?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum\/custom(_:)","title":"case custom(any Error)","type":"case"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum\/expected(_:)","title":"case expected(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum\/unexpectedtoken","title":"case unexpectedToken","type":"case"}],"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum","title":"Consumer.Error.Kind","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/error\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/error","title":"Consumer.Error","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/offset","title":"var offset: (line: Int, column: Int)","type":"property"},{"path":"\/documentation\/turf\/consumer\/location\/range","title":"let range: Range<String.Index>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/at(_:)","title":"static func at(CountableRange<Int>) -> Consumer<Label>.Location","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/location\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/turf\/consumer\/location\/==(_:_:)","title":"static func == (Consumer<Label>.Location, Consumer<Label>.Location) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/location","title":"Consumer.Location","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/==(_:_:)","title":"static func == (Consumer<Label>, Consumer<Label>) -> Bool","type":"op"},{"path":"\/documentation\/turf\/consumer\/_(_:_:)","title":"static func | (Consumer<Label>, Consumer<Label>) -> Consumer<Label>","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/any(_:)","title":"case any([Consumer<Label>])","type":"case"},{"path":"\/documentation\/turf\/consumer\/charset(_:)","title":"case charset(Consumer<Label>.Charset)","type":"case"},{"path":"\/documentation\/turf\/consumer\/discard(_:)","title":"case discard(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/flatten(_:)","title":"case flatten(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/label(_:_:)","title":"case label(Label, Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/not(_:)","title":"case not(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/oneormore(_:)","title":"case oneOrMore(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/optional(_:)","title":"case optional(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/reference(_:)","title":"case reference(Label)","type":"case"},{"path":"\/documentation\/turf\/consumer\/replace(_:_:)","title":"case replace(Consumer<Label>, String)","type":"case"},{"path":"\/documentation\/turf\/consumer\/sequence(_:)","title":"case sequence([Consumer<Label>])","type":"case"},{"path":"\/documentation\/turf\/consumer\/string(_:)","title":"case string(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/isoptional","title":"var isOptional: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match(_:)","title":"func match(String) throws -> Consumer<Label>.Match","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/transform","title":"Consumer.Transform","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/anycharacter(except:)-343y4","title":"static func anyCharacter(except: UnicodeScalar...) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/anycharacter(except:)-4bl6u","title":"static func anyCharacter(except: CharacterSet) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(_:)","title":"static func character(UnicodeScalar) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(in:)-296ct","title":"static func character(in: CharacterSet) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(in:)-4c3fd","title":"static func character(in: ClosedRange<UnicodeScalar>) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(in:)-6sa4d","title":"static func character(in: String) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/ignore(_:in:)","title":"static func ignore(Consumer<Label>, in: Consumer<Label>) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/interleaved(_:_:)","title":"static func interleaved(Consumer<Label>, Consumer<Label>) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/zeroormore(_:)","title":"static func zeroOrMore(Consumer<Label>) -> Consumer<Label>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/==(_:_:)","title":"static func == (Consumer<Label>.Match, Consumer<Label>.Match) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/node(_:_:)","title":"case node(Label?, [Consumer<Label>.Match])","type":"case"},{"path":"\/documentation\/turf\/consumer\/match\/token(_:_:)","title":"case token(String, Consumer<Label>.Location)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/location","title":"var location: Consumer<Label>.Location?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/transform(_:)","title":"func transform((Label, [any Sendable]) throws -> (any Sendable)?) rethrows -> (any Sendable)?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/match\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/match\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/match","title":"Consumer.Match","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(arrayliteral:)","title":"init(arrayLiteral: Consumer<Label>...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/arrayliteralelement","title":"Consumer.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/extendedgraphemeclusterliteraltype","title":"Consumer.ExtendedGraphemeClusterLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/stringliteraltype","title":"Consumer.StringLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/unicodescalarliteraltype","title":"Consumer.UnicodeScalarLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer","title":"Consumer","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/==(_:_:)","title":"static func == (FeatureIdentifier, FeatureIdentifier) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/turf\/featureidentifier\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(_:)-22zh1","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/turf\/featureidentifier\/init(_:)-2g91b","title":"init(String)","type":"init"},{"path":"\/documentation\/turf\/featureidentifier\/init(_:)-4tjj5","title":"init<Source>(Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/turf\/featureidentifier\/number","title":"var number: Double?","type":"property"},{"path":"\/documentation\/turf\/featureidentifier\/string","title":"var string: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/featureidentifier\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/featureidentifier\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/featureidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/extendedgraphemeclusterliteraltype","title":"FeatureIdentifier.ExtendedGraphemeClusterLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(floatliteral:)","title":"init(floatLiteral: FloatLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/floatliteraltype","title":"FeatureIdentifier.FloatLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/integerliteraltype","title":"FeatureIdentifier.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/stringliteraltype","title":"FeatureIdentifier.StringLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/unicodescalarliteraltype","title":"FeatureIdentifier.UnicodeScalarLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(rawvalue:)","title":"init?(rawValue: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/rawvalue-swift.property","title":"var rawValue: Any","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/rawvalue-swift.typealias","title":"FeatureIdentifier.RawValue","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/featureidentifier","title":"FeatureIdentifier","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/==(_:_:)","title":"static func == (GeoJSONObject, GeoJSONObject) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/feature(_:)","title":"case feature(Feature)","type":"case"},{"path":"\/documentation\/turf\/geojsonobject\/featurecollection(_:)","title":"case featureCollection(FeatureCollection)","type":"case"},{"path":"\/documentation\/turf\/geojsonobject\/geometry(_:)","title":"case geometry(Geometry)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/init(_:)","title":"init(any GeoJSONObjectConvertible)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/feature","title":"var feature: Feature?","type":"property"},{"path":"\/documentation\/turf\/geojsonobject\/featurecollection","title":"var featureCollection: FeatureCollection?","type":"property"},{"path":"\/documentation\/turf\/geojsonobject\/geometry","title":"var geometry: Geometry?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/geojsonobject\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/geojsonobject\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/geojsonobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"}],"path":"\/documentation\/turf\/geojsonobject\/expressionargumentconvertible-implementations","title":"ExpressionArgumentConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/geojsonobject\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/geojsonobject","title":"GeoJSONObject","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/==(_:_:)","title":"static func == (Geometry, Geometry) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geometrycollection(_:)","title":"case geometryCollection(GeometryCollection)","type":"case"},{"path":"\/documentation\/turf\/geometry\/linestring(_:)","title":"case lineString(LineString)","type":"case"},{"path":"\/documentation\/turf\/geometry\/multilinestring(_:)","title":"case multiLineString(MultiLineString)","type":"case"},{"path":"\/documentation\/turf\/geometry\/multipoint(_:)","title":"case multiPoint(MultiPoint)","type":"case"},{"path":"\/documentation\/turf\/geometry\/multipolygon(_:)","title":"case multiPolygon(MultiPolygon)","type":"case"},{"path":"\/documentation\/turf\/geometry\/point(_:)","title":"case point(Point)","type":"case"},{"path":"\/documentation\/turf\/geometry\/polygon(_:)","title":"case polygon(Polygon)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/init(_:)","title":"init(any GeometryConvertible)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geometrycollection","title":"var geometryCollection: GeometryCollection?","type":"property"},{"path":"\/documentation\/turf\/geometry\/linestring","title":"var lineString: LineString?","type":"property"},{"path":"\/documentation\/turf\/geometry\/multilinestring","title":"var multiLineString: MultiLineString?","type":"property"},{"path":"\/documentation\/turf\/geometry\/multipoint","title":"var multiPoint: MultiPoint?","type":"property"},{"path":"\/documentation\/turf\/geometry\/multipolygon","title":"var multiPolygon: MultiPolygon?","type":"property"},{"path":"\/documentation\/turf\/geometry\/point","title":"var point: Point?","type":"property"},{"path":"\/documentation\/turf\/geometry\/polygon","title":"var polygon: Polygon?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/geometry\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/geometry\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/geometry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/geometry\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/geometry\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/geometry\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/geometry","title":"Geometry","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/==(_:_:)","title":"static func == (JSONValue, JSONValue) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/array(_:)","title":"case array(JSONArray)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/object(_:)","title":"case object(JSONObject)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-2e69q","title":"init(JSONArray)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-4mwc5","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-6c1tu","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-7bkw0","title":"init(Bool)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-88gx4","title":"init(JSONObject)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-8i3em","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/array","title":"var array: JSONArray?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/boolean","title":"var boolean: Bool?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/number","title":"var number: Double?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/object","title":"var object: JSONObject?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/string","title":"var string: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/jsonvalue\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/jsonvalue\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/jsonvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(arrayliteral:)","title":"init(arrayLiteral: JSONValue.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/arrayliteralelement","title":"JSONValue.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(booleanliteral:)","title":"init(booleanLiteral: BooleanLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/booleanliteraltype","title":"JSONValue.BooleanLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (JSONValue.Key, JSONValue.Value)...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/key","title":"JSONValue.Key","type":"typealias"},{"path":"\/documentation\/turf\/jsonvalue\/value","title":"JSONValue.Value","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/extendedgraphemeclusterliteraltype","title":"JSONValue.ExtendedGraphemeClusterLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(floatliteral:)","title":"init(floatLiteral: FloatLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/floatliteraltype","title":"JSONValue.FloatLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/integerliteraltype","title":"JSONValue.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/stringliteraltype","title":"JSONValue.StringLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/unicodescalarliteraltype","title":"JSONValue.UnicodeScalarLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(rawvalue:)","title":"init?(rawValue: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/rawvalue-swift.property","title":"var rawValue: Any","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/rawvalue-swift.typealias","title":"JSONValue.RawValue","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/jsonvalue","title":"JSONValue","type":"enum"}],"path":"\/documentation\/turf","title":"Turf","type":"module"}],"path":"\/documentation\/mapboxmaps\/turfapi","title":"Turf","type":"symbol"},{"title":"Internal","type":"groupMarker"},{"children":[{"title":"Symbols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/maprecorder\/getplaybackstate()","title":"func getPlaybackState() -> String","type":"method"},{"path":"\/documentation\/mapboxmaps\/maprecorder\/stoprecording()","title":"func stopRecording() -> MBXDataRef","type":"method"},{"path":"\/documentation\/mapboxmaps\/maprecorder\/togglepausereplay()","title":"func togglePauseReplay()","type":"method"}],"path":"\/documentation\/mapboxmaps\/maprecorder","title":"MapRecorder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/featureextensionvalue\/value","title":"var value: Any?","type":"property"}],"path":"\/documentation\/mapboxmaps\/featureextensionvalue","title":"FeatureExtensionValue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/size\/init(width:height:)","title":"init(width: Float, height: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/size\/height","title":"var height: Float","type":"property"},{"path":"\/documentation\/mapboxmaps\/size\/width","title":"var width: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/size\/isequal(to:)","title":"func isEqual(to: Size) -> Bool","type":"method"}],"path":"\/documentation\/mapboxmaps\/size","title":"Size","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.class\/message","title":"var message: String","type":"property"}],"path":"\/documentation\/mapboxmaps\/stylepackerror-swift.class","title":"StylePackError","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/connection","title":"case connection","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/inofflinemode","title":"case inOfflineMode","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/other","title":"case other","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/ratelimit","title":"case rateLimit","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/server","title":"case server","type":"case"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/success","title":"case success","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxmaps\/requesterrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxmaps\/requesterrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxmaps\/requesterrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxmaps\/requesterrortype","title":"RequestErrorType","type":"enum"},{"path":"\/documentation\/mapboxmaps\/mbmmaploadingerrortypetostring(_:)","title":"func MBMMapLoadingErrorTypeToString(MapLoadingErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrendermodetypetostring(_:)","title":"func MBMRenderModeTypeToString(RenderModeType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestdatasourcetypetostring(_:)","title":"func MBMRequestDataSourceTypeToString(RequestDataSourceType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequesterrortypetostring(_:)","title":"func MBMRequestErrorTypeToString(RequestErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestloadingmethodtypetostring(_:)","title":"func MBMRequestLoadingMethodTypeToString(RequestLoadingMethodType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestprioritytypetostring(_:)","title":"func MBMRequestPriorityTypeToString(RequestPriorityType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestprioritytypetostring(_:)","title":"func MBMRequestPriorityTypeToString(RequestPriorityType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmrequestresourcetypetostring(_:)","title":"func MBMRequestResourceTypeToString(RequestResourceType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmresponsesourcetypetostring(_:)","title":"func MBMResponseSourceTypeToString(ResponseSourceType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmsourcedataloadedtypetostring(_:)","title":"func MBMSourceDataLoadedTypeToString(SourceDataLoadedType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmstyledataloadedtypetostring(_:)","title":"func MBMStyleDataLoadedTypeToString(StyleDataLoadedType) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/mbmtilestoreusagemodetostring(_:)","title":"func MBMTileStoreUsageModeToString(TileStoreUsageMode) -> String!","type":"func"},{"path":"\/documentation\/mapboxmaps\/camerachangedcallback","title":"CameraChangedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/genericeventcallback","title":"GenericEventCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/maploadingerrorcallback","title":"MapLoadingErrorCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/renderframefinishedcallback","title":"RenderFrameFinishedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/renderframestartedcallback","title":"RenderFrameStartedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/resourcerequestcallback","title":"ResourceRequestCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/sourceaddedcallback","title":"SourceAddedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/sourcedataloadedcallback","title":"SourceDataLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/sourceremovedcallback","title":"SourceRemovedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styledataloadedcallback","title":"StyleDataLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styleimagemissingcallback","title":"StyleImageMissingCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/mapidlecallback","title":"MapIdleCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/maploadedcallback","title":"MapLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styleimageremoveunusedcallback","title":"StyleImageRemoveUnusedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/styleloadedcallback","title":"StyleLoadedCallback","type":"typealias"},{"path":"\/documentation\/mapboxmaps\/transitionoptions-swift.class","title":"TransitionOptions","type":"class"}],"path":"\/documentation\/mapboxmaps\/coremapsinternal","title":"CoreMaps - Internal","type":"symbol"}],"path":"\/documentation\/mapboxmaps","title":"MapboxMaps","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/dataref\/init(data:)","title":"init(data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/dataref\/data","title":"let data: Data","type":"property"}],"path":"\/documentation\/mapboxcommon\/dataref","title":"DataRef","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/feature\/init(identifier:geometry:properties:)","title":"init(identifier: NSObject, geometry: Geometry, properties: [String : NSObject])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/feature\/geometry","title":"var geometry: Geometry","type":"property"},{"path":"\/documentation\/mapboxcommon\/feature\/identifier","title":"var identifier: NSObject","type":"property"},{"path":"\/documentation\/mapboxcommon\/feature\/properties","title":"var properties: [String : NSObject]","type":"property"}],"path":"\/documentation\/mapboxcommon\/feature","title":"Feature","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingfactory\/getorcreate()","title":"static func getOrCreate() -> any GeofencingService","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingfactory\/reset()","title":"static func reset()","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingfactory\/setuserdefined(custom:)","title":"static func setUserDefined(custom: any GeofencingService)","type":"method"}],"path":"\/documentation\/mapboxcommon\/geofencingfactory","title":"GeofencingFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geometry\/init(geometrycollection:)","title":"init(geometryCollection: [Geometry])","type":"init"},{"path":"\/documentation\/mapboxcommon\/geometry\/init(line:)","title":"init(line: [NSValue])","type":"init"},{"path":"\/documentation\/mapboxcommon\/geometry\/init(multiline:)","title":"init(multiLine: [[NSValue]])","type":"init"},{"path":"\/documentation\/mapboxcommon\/geometry\/init(multipoint:)","title":"init(multiPoint: [NSValue])","type":"init"},{"path":"\/documentation\/mapboxcommon\/geometry\/init(multipolygon:)","title":"init(multiPolygon: [[[NSValue]]])","type":"init"},{"path":"\/documentation\/mapboxcommon\/geometry\/init(point:)","title":"init(point: NSValue)","type":"init"},{"path":"\/documentation\/mapboxcommon\/geometry\/init(polygon:)","title":"init(polygon: [[NSValue]])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geometry\/geometry","title":"var geometry: UnsafeMutableRawPointer","type":"property"},{"path":"\/documentation\/mapboxcommon\/geometry\/geometrytype","title":"var geometryType: GeometryType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geometry\/extractgeometriesarray()","title":"func extractGeometriesArray() -> [Geometry]?","type":"method"},{"path":"\/documentation\/mapboxcommon\/geometry\/extractlocations()","title":"func extractLocations() -> NSValue?","type":"method"},{"path":"\/documentation\/mapboxcommon\/geometry\/extractlocations2darray()","title":"func extractLocations2DArray() -> [[NSValue]]?","type":"method"},{"path":"\/documentation\/mapboxcommon\/geometry\/extractlocations3darray()","title":"func extractLocations3DArray() -> [[[NSValue]]]?","type":"method"},{"path":"\/documentation\/mapboxcommon\/geometry\/extractlocationsarray()","title":"func extractLocationsArray() -> [NSValue]?","type":"method"}],"path":"\/documentation\/mapboxcommon\/geometry","title":"Geometry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequest\/init(method:url:headers:timeout:networkrestriction:sdkinformation:body:flags:)","title":"init(method: HttpMethod, url: String, headers: [String : String], timeout: UInt64, networkRestriction: NetworkRestriction, sdkInformation: SdkInformation, body: Data?, flags: UInt32)","type":"init"},{"path":"\/documentation\/mapboxcommon\/httprequest\/init(url:headers:sdkinformation:body:)","title":"init(url: String, headers: [String : String], sdkInformation: SdkInformation, body: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequest\/body","title":"var body: Data?","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequest\/flags","title":"var flags: UInt32","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequest\/headers","title":"var headers: [String : String]","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequest\/method","title":"var method: HttpMethod","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequest\/networkrestriction","title":"var networkRestriction: NetworkRestriction","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequest\/sdkinformation","title":"var sdkInformation: SdkInformation","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequest\/timeout","title":"var timeout: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequest\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/mapboxcommon\/httprequest","title":"HttpRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/init(type:message:)","title":"init(type: HttpRequestErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/type","title":"var type: HttpRequestErrorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxcommon\/httprequesterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequesterror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapboxcommon\/httprequesterror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/httprequesterror","title":"HttpRequestError","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestflags\/keepcompression","title":"class var keepCompression: UInt32","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequestflags\/none","title":"class var none: UInt32","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequestflags\/pauseinbackground","title":"class var pauseInBackground: UInt32","type":"property"},{"path":"\/documentation\/mapboxcommon\/httprequestflags\/preventcoalescing","title":"class var preventCoalescing: UInt32","type":"property"}],"path":"\/documentation\/mapboxcommon\/httprequestflags","title":"HttpRequestFlags","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponse\/type","title":"var type: HttpRequestOrResponseType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponse\/gethttprequest()","title":"func getHttpRequest() -> HttpRequest","type":"method"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponse\/gethttpresponse()","title":"func getHttpResponse() -> HttpResponse","type":"method"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponse\/ishttprequest()","title":"func isHttpRequest() -> Bool","type":"method"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponse\/ishttpresponse()","title":"func isHttpResponse() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponse\/fromhttprequest(_:)","title":"class func fromHttpRequest(HttpRequest) -> Self","type":"method"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponse\/fromhttpresponse(_:)","title":"class func fromHttpResponse(HttpResponse) -> Self","type":"method"}],"path":"\/documentation\/mapboxcommon\/httprequestorresponse","title":"HttpRequestOrResponse","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpresponse\/init(identifier:request:result:)","title":"convenience init(identifier: UInt64, request: HttpRequest, result: Result<HttpResponseData, HttpRequestError>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpresponse\/request","title":"var request: HttpRequest","type":"property"},{"path":"\/documentation\/mapboxcommon\/httpresponse\/requestid","title":"var requestId: UInt64","type":"property"},{"path":"\/documentation\/mapboxcommon\/httpresponse\/result","title":"var result: Result<HttpResponseData, HttpRequestError>","type":"property"}],"path":"\/documentation\/mapboxcommon\/httpresponse","title":"HttpResponse","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpresponsedata\/init(headers:code:data:)","title":"init(headers: [String : String], code: Int32, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpresponsedata\/code","title":"var code: Int32","type":"property"},{"path":"\/documentation\/mapboxcommon\/httpresponsedata\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/mapboxcommon\/httpresponsedata\/headers","title":"var headers: [String : String]","type":"property"}],"path":"\/documentation\/mapboxcommon\/httpresponsedata","title":"HttpResponseData","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpservicefactory\/setcancellationcallbackforcallback(_:)","title":"class func setCancellationCallbackForCallback(HttpServiceCancellationCallback) -> any Cancelable","type":"method"},{"path":"\/documentation\/mapboxcommon\/httpservicefactory\/sethttpserviceinterceptorforinterceptor(_:)","title":"class func setHttpServiceInterceptorForInterceptor((any HttpServiceInterceptorInterface)?)","type":"method"},{"path":"\/documentation\/mapboxcommon\/httpservicefactory\/setmaxrequestsperhostformax(_:)","title":"class func setMaxRequestsPerHostForMax(UInt8)","type":"method"}],"path":"\/documentation\/mapboxcommon\/httpservicefactory","title":"HttpServiceFactory","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/offlineswitch\/ismapboxstackconnected()","title":"func isMapboxStackConnected() -> Bool","type":"method"},{"path":"\/documentation\/mapboxcommon\/offlineswitch\/setmapboxstackconnectedforconnected(_:)","title":"func setMapboxStackConnectedForConnected(Bool)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/offlineswitch\/getinstance()","title":"class func getInstance() -> OfflineSwitch","type":"method"},{"path":"\/documentation\/mapboxcommon\/offlineswitch\/reset()","title":"class func reset()","type":"method"}],"path":"\/documentation\/mapboxcommon\/offlineswitch","title":"OfflineSwitch","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/sdkinformationquery\/getsdkinformation()","title":"class func getSdkInformation() -> [SdkInformation]","type":"method"},{"path":"\/documentation\/mapboxcommon\/sdkinformationquery\/getsdkinformationbyname(forname:)","title":"class func getSdkInformationByName(forName: String) -> SdkInformation?","type":"method"}],"path":"\/documentation\/mapboxcommon\/sdkinformationquery","title":"SdkInformationQuery","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionerror\/init(type:message:)","title":"init(type: TileRegionErrorType, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionerror\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/mapboxcommon\/tileregionerror\/type","title":"var type: TileRegionErrorType","type":"property"}],"path":"\/documentation\/mapboxcommon\/tileregionerror","title":"TileRegionError","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/valueconverter\/tojson(forvalue:)","title":"class func toJson(forValue: Any) -> String","type":"method"},{"path":"\/documentation\/mapboxcommon\/valueconverter\/tojson(forvalue:indent:)","title":"class func toJson(forValue: Any, indent: UInt32) -> String","type":"method"}],"path":"\/documentation\/mapboxcommon\/valueconverter","title":"ValueConverter","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingobserver\/ondwell(event:)","title":"func onDwell(event: GeofencingEvent)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingobserver\/onentry(event:)","title":"func onEntry(event: GeofencingEvent)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingobserver\/onerror(error:)","title":"func onError(error: GeofencingError)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingobserver\/onexit(event:)","title":"func onExit(event: GeofencingEvent)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingobserver\/onuserconsentchanged(isconsentgiven:)","title":"func onUserConsentChanged(isConsentGiven: Bool)","type":"method"}],"path":"\/documentation\/mapboxcommon\/geofencingobserver","title":"GeofencingObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/addfeature(feature:callback:)","title":"func addFeature(feature: Feature, callback: (Result<String, GeofencingError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/addobserver(observer:callback:)","title":"func addObserver(observer: any GeofencingObserver, callback: (Result<Void, GeofencingError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/clearfeatures(callback:)","title":"func clearFeatures(callback: (Result<UInt32, GeofencingError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/configure(options:callback:)","title":"func configure(options: GeofencingOptions, callback: (Result<Void, GeofencingError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/getfeature(identifier:callback:)","title":"func getFeature(identifier: String, callback: (Result<GeofenceState, GeofencingError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/getoptions(callback:)","title":"func getOptions(callback: (Result<GeofencingOptions, GeofencingError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/removefeature(identifier:callback:)","title":"func removeFeature(identifier: String, callback: (Result<Void, GeofencingError>) -> Void)","type":"method"},{"path":"\/documentation\/mapboxcommon\/geofencingservice\/removeobserver(observer:callback:)","title":"func removeObserver(observer: any GeofencingObserver, callback: (Result<Void, GeofencingError>) -> Void)","type":"method"}],"path":"\/documentation\/mapboxcommon\/geofencingservice","title":"GeofencingService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpserviceinterceptorinterface\/onrequest(for:continuation:)","title":"func onRequest(for: HttpRequest, continuation: HttpServiceInterceptorRequestContinuation)","type":"method"},{"path":"\/documentation\/mapboxcommon\/httpserviceinterceptorinterface\/onresponse(for:continuation:)","title":"func onResponse(for: HttpResponse, continuation: HttpServiceInterceptorResponseContinuation)","type":"method"}],"path":"\/documentation\/mapboxcommon\/httpserviceinterceptorinterface","title":"HttpServiceInterceptorInterface","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencestate\/feature","title":"var feature: Feature","type":"property"},{"path":"\/documentation\/mapboxcommon\/geofencestate\/timestamp","title":"var timestamp: Optional<Date>","type":"property"}],"path":"\/documentation\/mapboxcommon\/geofencestate","title":"GeofenceState","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapboxcommon\/geofencingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/geofencingerror","title":"GeofencingError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingevent\/feature","title":"var feature: Feature","type":"property"},{"path":"\/documentation\/mapboxcommon\/geofencingevent\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/mapboxcommon\/geofencingevent","title":"GeofencingEvent","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingoptions\/maximummonitoredfeatures","title":"var maximumMonitoredFeatures: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/geofencingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/geofencingoptions","title":"GeofencingOptions","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geometrytype_empty","title":"var GeometryType_Empty: GeometryType","type":"var"},{"path":"\/documentation\/mapboxcommon\/geometrytype_geometrycollection","title":"var GeometryType_GeometryCollection: GeometryType","type":"var"},{"path":"\/documentation\/mapboxcommon\/geometrytype_line","title":"var GeometryType_Line: GeometryType","type":"var"},{"path":"\/documentation\/mapboxcommon\/geometrytype_multiline","title":"var GeometryType_MultiLine: GeometryType","type":"var"},{"path":"\/documentation\/mapboxcommon\/geometrytype_multipoint","title":"var GeometryType_MultiPoint: GeometryType","type":"var"},{"path":"\/documentation\/mapboxcommon\/geometrytype_multipolygon","title":"var GeometryType_MultiPolygon: GeometryType","type":"var"},{"path":"\/documentation\/mapboxcommon\/geometrytype_point","title":"var GeometryType_Point: GeometryType","type":"var"},{"path":"\/documentation\/mapboxcommon\/geometrytype_polygon","title":"var GeometryType_Polygon: GeometryType","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/mbxaccuracyauthorizationtostring(_:)","title":"func MBXAccuracyAuthorizationToString(AccuracyAuthorization) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxcacheclearingerrortypetostring(_:)","title":"func MBXCacheClearingErrorTypeToString(CacheClearingErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxhttpmethodtostring(_:)","title":"func MBXHttpMethodToString(HttpMethod) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxhttprequesterrortypetostring(_:)","title":"func MBXHttpRequestErrorTypeToString(HttpRequestErrorType) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxlocationerrorcodetostring(_:)","title":"func MBXLocationErrorCodeToString(LocationErrorCode) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxloggingleveltostring(_:)","title":"func MBXLoggingLevelToString(LoggingLevel) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxpermissionstatustostring(_:)","title":"func MBXPermissionStatusToString(PermissionStatus) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxtiledatadomaintostring(_:)","title":"func MBXTileDataDomainToString(TileDataDomain) -> String!","type":"func"},{"path":"\/documentation\/mapboxcommon\/mbxtileregionerrortypetostring(_:)","title":"func MBXTileRegionErrorTypeToString(TileRegionErrorType) -> String!","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/getlocationcallback","title":"GetLocationCallback","type":"typealias"},{"path":"\/documentation\/mapboxcommon\/httpresponsecallback","title":"HttpResponseCallback","type":"typealias"},{"path":"\/documentation\/mapboxcommon\/httpservicecancellationcallback","title":"HttpServiceCancellationCallback","type":"typealias"},{"path":"\/documentation\/mapboxcommon\/httpserviceinterceptorrequestcontinuation","title":"HttpServiceInterceptorRequestContinuation","type":"typealias"},{"path":"\/documentation\/mapboxcommon\/httpserviceinterceptorresponsecontinuation","title":"HttpServiceInterceptorResponseContinuation","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/defaultradiustoolarge","title":"case defaultRadiusTooLarge","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/devicelocationprovidererror","title":"case deviceLocationProviderError","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/featurealreadyadded","title":"case featureAlreadyAdded","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/featureinvalid","title":"case featureInvalid","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/featurenotfound","title":"case featureNotFound","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/featurenotstored","title":"case featureNotStored","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/generic","title":"case generic","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/locationserviceinaccurate","title":"case locationServiceInaccurate","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/locationserviceunauthorized","title":"case locationServiceUnauthorized","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/locationserviceunavailable","title":"case locationServiceUnavailable","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/monitoredfeatureslimitreached","title":"case monitoredFeaturesLimitReached","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/notavailable","title":"case notAvailable","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/observeralreadyadded","title":"case observerAlreadyAdded","type":"case"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/observernotfound","title":"case observerNotFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/geofencingerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/geofencingerrortype","title":"GeofencingErrorType","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/geofencingpropertieskeys\/dwelltimekey","title":"static let dwellTimeKey: String","type":"property"},{"path":"\/documentation\/mapboxcommon\/geofencingpropertieskeys\/pointradiuskey","title":"static let pointRadiusKey: String","type":"property"}],"path":"\/documentation\/mapboxcommon\/geofencingpropertieskeys","title":"GeofencingPropertiesKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/mapboxcommon\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/mapboxcommon\/httpmethod\/post","title":"case post","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/httpmethod","title":"HttpMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/connectionerror","title":"case connectionError","type":"case"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/othererror","title":"case otherError","type":"case"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/rangeerror","title":"case rangeError","type":"case"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/requestcancelled","title":"case requestCancelled","type":"case"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/requesttimedout","title":"case requestTimedOut","type":"case"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/sslerror","title":"case sslError","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/httprequesterrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/httprequesterrortype","title":"HttpRequestErrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/httprequest","title":"case httpRequest","type":"case"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/httpresponse","title":"case httpResponse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/httprequestorresponsetype","title":"HttpRequestOrResponseType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/networkrestriction\/disallowall","title":"case disallowAll","type":"case"},{"path":"\/documentation\/mapboxcommon\/networkrestriction\/disallowexpensive","title":"case disallowExpensive","type":"case"},{"path":"\/documentation\/mapboxcommon\/networkrestriction\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/networkrestriction\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/networkrestriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/networkrestriction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/networkrestriction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/networkrestriction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/networkrestriction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/networkrestriction","title":"NetworkRestriction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/diskfull","title":"case diskFull","type":"case"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/doesnotexist","title":"case doesNotExist","type":"case"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/other","title":"case other","type":"case"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/tilecountexceeded","title":"case tileCountExceeded","type":"case"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/tilesetdescriptor","title":"case tilesetDescriptor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapboxcommon\/tileregionerrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapboxcommon\/tileregionerrortype","title":"TileRegionErrorType","type":"enum"}],"path":"\/documentation\/mapboxcommon","title":"MapboxCommon","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/foreignmembercontainer\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"}],"path":"\/documentation\/turf\/foreignmembercontainer","title":"ForeignMemberContainer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobjectconvertible\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/geojsonobjectconvertible","title":"GeoJSONObjectConvertible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometryconvertible\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/geometryconvertible","title":"GeometryConvertible","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/wktconvertible\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/wktconvertible\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/wktconvertible","title":"WKTConvertible","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/init(from:)-9xec0","title":"init?(from: [LocationCoordinate2D]?)","type":"init"},{"path":"\/documentation\/turf\/boundingbox\/init(southwest:northeast:)","title":"init(southWest: LocationCoordinate2D, northEast: LocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/northeast","title":"var northEast: LocationCoordinate2D","type":"property"},{"path":"\/documentation\/turf\/boundingbox\/southwest","title":"var southWest: LocationCoordinate2D","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/init(from:)-4rkw3","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/boundingbox\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/boundingbox\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/turf\/boundingbox\/==(_:_:)","title":"static func == (BoundingBox, BoundingBox) -> Bool","type":"op"}],"path":"\/documentation\/turf\/boundingbox\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/boundingbox\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/turf\/boundingbox\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/boundingbox","title":"BoundingBox","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/==(_:_:)","title":"static func == (Feature, Feature) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/init(geometry:)-26txa","title":"init(geometry: (any GeometryConvertible)?)","type":"init"},{"path":"\/documentation\/turf\/feature\/init(geometry:)-fxio","title":"init(geometry: Geometry)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/feature\/geometry","title":"var geometry: Geometry?","type":"property"},{"path":"\/documentation\/turf\/feature\/identifier","title":"var identifier: FeatureIdentifier?","type":"property"},{"path":"\/documentation\/turf\/feature\/properties","title":"var properties: JSONObject?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/feature\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/feature\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/feature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/feature\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/feature\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/feature","title":"Feature","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/==(_:_:)","title":"static func == (FeatureCollection, FeatureCollection) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/init(features:)","title":"init(features: [Feature])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/features","title":"var features: [Feature]","type":"property"},{"path":"\/documentation\/turf\/featurecollection\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/featurecollection\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/featurecollection\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/featurecollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featurecollection\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/featurecollection\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/featurecollection","title":"FeatureCollection","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/==(_:_:)","title":"static func == (GeometryCollection, GeometryCollection) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/init(_:)","title":"init(MultiPolygon)","type":"init"},{"path":"\/documentation\/turf\/geometrycollection\/init(geometries:)","title":"init(geometries: [Geometry])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/geometrycollection\/geometries","title":"var geometries: [Geometry]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/geometrycollection\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/geometrycollection\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/geometrycollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/geometrycollection\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometrycollection\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/geometrycollection\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/geometrycollection","title":"GeometryCollection","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinate\/coordinate","title":"let coordinate: Array<LocationCoordinate2D>.Element","type":"property"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinate\/distance","title":"let distance: LocationDistance","type":"property"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinate\/index","title":"let index: Array<LocationCoordinate2D>.Index","type":"property"}],"path":"\/documentation\/turf\/linestring\/indexedcoordinate","title":"LineString.IndexedCoordinate","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/==(_:_:)","title":"static func == (LineString, LineString) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/init(_:)-1ds6r","title":"init(Ring)","type":"init"},{"path":"\/documentation\/turf\/linestring\/init(_:)-nl31","title":"init([LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"path":"\/documentation\/turf\/linestring\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/bezier(resolution:sharpness:)","title":"func bezier(resolution: Int, sharpness: Double) -> LineString?","type":"method"},{"path":"\/documentation\/turf\/linestring\/closestcoordinate(to:)","title":"func closestCoordinate(to: LocationCoordinate2D) -> LineString.IndexedCoordinate?","type":"method"},{"path":"\/documentation\/turf\/linestring\/coordinatefromstart(distance:)","title":"func coordinateFromStart(distance: LocationDistance) -> LocationCoordinate2D?","type":"method"},{"path":"\/documentation\/turf\/linestring\/distance(from:to:)","title":"func distance(from: LocationCoordinate2D?, to: LocationCoordinate2D?) -> LocationDistance?","type":"method"},{"path":"\/documentation\/turf\/linestring\/indexedcoordinatefromstart(distance:)","title":"func indexedCoordinateFromStart(distance: LocationDistance) -> LineString.IndexedCoordinate?","type":"method"},{"path":"\/documentation\/turf\/linestring\/intersections(with:)","title":"func intersections(with: LineString) -> [LocationCoordinate2D]","type":"method"},{"path":"\/documentation\/turf\/linestring\/simplified(tolerance:highestquality:)","title":"func simplified(tolerance: Double, highestQuality: Bool) -> LineString","type":"method"},{"path":"\/documentation\/turf\/linestring\/simplify(tolerance:highestquality:)","title":"func simplify(tolerance: Double, highestQuality: Bool)","type":"method"},{"path":"\/documentation\/turf\/linestring\/sliced(from:to:)","title":"func sliced(from: LocationCoordinate2D?, to: LocationCoordinate2D?) -> LineString?","type":"method"},{"path":"\/documentation\/turf\/linestring\/trimmed(from:distance:)","title":"func trimmed(from: LocationCoordinate2D, distance: LocationDistance) -> LineString?","type":"method"},{"path":"\/documentation\/turf\/linestring\/trimmed(from:to:)","title":"func trimmed(from: LocationDistance, to: LocationDistance) -> LineString?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/linestring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/linestring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/linestring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/linestring\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/linestring\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/linestring\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/linestring","title":"LineString","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/==(_:_:)","title":"static func == (MultiLineString, MultiLineString) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/init(_:)-20bqv","title":"init(Polygon)","type":"init"},{"path":"\/documentation\/turf\/multilinestring\/init(_:)-3haud","title":"init([[LocationCoordinate2D]])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/coordinates","title":"var coordinates: [[LocationCoordinate2D]]","type":"property"},{"path":"\/documentation\/turf\/multilinestring\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/multilinestring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/multilinestring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/multilinestring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/multilinestring\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multilinestring\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/multilinestring\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/multilinestring","title":"MultiLineString","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/==(_:_:)","title":"static func == (MultiPoint, MultiPoint) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/init(_:)","title":"init([LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"path":"\/documentation\/turf\/multipoint\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/multipoint\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/multipoint\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/multipoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/multipoint\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipoint\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/multipoint\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/multipoint","title":"MultiPoint","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/==(_:_:)","title":"static func == (MultiPolygon, MultiPolygon) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/init(_:)-1pebz","title":"init([[[LocationCoordinate2D]]])","type":"init"},{"path":"\/documentation\/turf\/multipolygon\/init(_:)-990j","title":"init([Polygon])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/coordinates","title":"var coordinates: [[[LocationCoordinate2D]]]","type":"property"},{"path":"\/documentation\/turf\/multipolygon\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/multipolygon\/polygons","title":"var polygons: [Polygon]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/multipolygon\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/multipolygon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/multipolygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/multipolygon\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/multipolygon\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/multipolygon\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/multipolygon","title":"MultiPolygon","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/==(_:_:)","title":"static func == (Point, Point) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/init(_:)","title":"init(LocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/coordinates","title":"var coordinates: LocationCoordinate2D","type":"property"},{"path":"\/documentation\/turf\/point\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/point\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/point\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/point\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/point\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/point\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/point\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/point","title":"Point","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/==(_:_:)","title":"static func == (Polygon, Polygon) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/init(_:)","title":"init([[LocationCoordinate2D]])","type":"init"},{"path":"\/documentation\/turf\/polygon\/init(center:radius:vertices:)","title":"init(center: LocationCoordinate2D, radius: LocationDistance, vertices: Int)","type":"init"},{"path":"\/documentation\/turf\/polygon\/init(outerring:innerrings:)","title":"init(outerRing: Ring, innerRings: [Ring])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/area","title":"var area: Double","type":"property"},{"path":"\/documentation\/turf\/polygon\/center","title":"var center: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/turf\/polygon\/centerofmass","title":"var centerOfMass: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/turf\/polygon\/centroid","title":"var centroid: LocationCoordinate2D?","type":"property"},{"path":"\/documentation\/turf\/polygon\/coordinates","title":"var coordinates: [[LocationCoordinate2D]]","type":"property"},{"path":"\/documentation\/turf\/polygon\/foreignmembers","title":"var foreignMembers: JSONObject","type":"property"},{"path":"\/documentation\/turf\/polygon\/innerrings","title":"var innerRings: [Ring]","type":"property"},{"path":"\/documentation\/turf\/polygon\/outerring","title":"var outerRing: Ring","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"path":"\/documentation\/turf\/polygon\/simplified(tolerance:highestquality:)","title":"func simplified(tolerance: Double, highestQuality: Bool) -> Polygon","type":"method"},{"path":"\/documentation\/turf\/polygon\/simplify(tolerance:highestquality:)","title":"func simplify(tolerance: Double, highestQuality: Bool)","type":"method"},{"path":"\/documentation\/turf\/polygon\/smooth(iterations:)","title":"func smooth(iterations: Int) -> Polygon","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/polygon\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/polygon\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/polygon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/polygon\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/polygon\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/polygon\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/polygon","title":"Polygon","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/radiancoordinate2d\/init(_:)","title":"init(LocationCoordinate2D)","type":"init"},{"path":"\/documentation\/turf\/radiancoordinate2d\/init(latitude:longitude:)","title":"init(latitude: LocationRadians, longitude: LocationRadians)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/radiancoordinate2d\/coordinate(at:facing:)","title":"func coordinate(at: RadianDistance, facing: Measurement<UnitAngle>) -> RadianCoordinate2D","type":"method"},{"path":"\/documentation\/turf\/radiancoordinate2d\/direction(to:)","title":"func direction(to: RadianCoordinate2D) -> Measurement<UnitAngle>","type":"method"},{"path":"\/documentation\/turf\/radiancoordinate2d\/distance(to:)","title":"func distance(to: RadianCoordinate2D) -> RadianDistance","type":"method"}],"path":"\/documentation\/turf\/radiancoordinate2d","title":"RadianCoordinate2D","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/init(coordinates:)","title":"init(coordinates: [LocationCoordinate2D])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/area","title":"var area: Double","type":"property"},{"path":"\/documentation\/turf\/ring\/coordinates","title":"var coordinates: [LocationCoordinate2D]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/contains(_:ignoreboundary:)","title":"func contains(LocationCoordinate2D, ignoreBoundary: Bool) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/ring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/ring\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/ring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/ring","title":"Ring","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/turf\/intersection(_:_:)","title":"func intersection(LineSegment, LineSegment) -> LocationCoordinate2D?","type":"func"},{"path":"\/documentation\/turf\/mid(_:_:)","title":"func mid(LocationCoordinate2D, LocationCoordinate2D) -> LocationCoordinate2D","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonarray","title":"JSONArray","type":"typealias"},{"path":"\/documentation\/turf\/jsonobject","title":"JSONObject","type":"typealias"},{"path":"\/documentation\/turf\/linesegment","title":"LineSegment","type":"typealias"},{"path":"\/documentation\/turf\/locationcoordinate2d","title":"LocationCoordinate2D","type":"typealias"},{"path":"\/documentation\/turf\/locationdegrees","title":"LocationDegrees","type":"typealias"},{"path":"\/documentation\/turf\/locationdirection","title":"LocationDirection","type":"typealias"},{"path":"\/documentation\/turf\/locationdistance","title":"LocationDistance","type":"typealias"},{"path":"\/documentation\/turf\/locationradians","title":"LocationRadians","type":"typealias"},{"path":"\/documentation\/turf\/radiandistance","title":"RadianDistance","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/==(_:_:)","title":"static func == (Consumer<Label>.Charset, Consumer<Label>.Charset) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/turf\/consumer\/charset\/ranges","title":"var ranges: [CountableClosedRange<UInt32>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/charset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/charset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/charset","title":"Consumer.Charset","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.property","title":"var kind: Consumer<Label>.Error.Kind","type":"property"},{"path":"\/documentation\/turf\/consumer\/error\/location","title":"var location: Consumer<Label>.Location?","type":"property"},{"path":"\/documentation\/turf\/consumer\/error\/remaining","title":"var remaining: Substring.UnicodeScalarView?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum\/custom(_:)","title":"case custom(any Error)","type":"case"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum\/expected(_:)","title":"case expected(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum\/unexpectedtoken","title":"case unexpectedToken","type":"case"}],"path":"\/documentation\/turf\/consumer\/error\/kind-swift.enum","title":"Consumer.Error.Kind","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/error\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/error","title":"Consumer.Error","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/offset","title":"var offset: (line: Int, column: Int)","type":"property"},{"path":"\/documentation\/turf\/consumer\/location\/range","title":"let range: Range<String.Index>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/at(_:)","title":"static func at(CountableRange<Int>) -> Consumer<Label>.Location","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/location\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/turf\/consumer\/location\/==(_:_:)","title":"static func == (Consumer<Label>.Location, Consumer<Label>.Location) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/location","title":"Consumer.Location","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/==(_:_:)","title":"static func == (Consumer<Label>, Consumer<Label>) -> Bool","type":"op"},{"path":"\/documentation\/turf\/consumer\/_(_:_:)","title":"static func | (Consumer<Label>, Consumer<Label>) -> Consumer<Label>","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/any(_:)","title":"case any([Consumer<Label>])","type":"case"},{"path":"\/documentation\/turf\/consumer\/charset(_:)","title":"case charset(Consumer<Label>.Charset)","type":"case"},{"path":"\/documentation\/turf\/consumer\/discard(_:)","title":"case discard(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/flatten(_:)","title":"case flatten(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/label(_:_:)","title":"case label(Label, Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/not(_:)","title":"case not(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/oneormore(_:)","title":"case oneOrMore(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/optional(_:)","title":"case optional(Consumer<Label>)","type":"case"},{"path":"\/documentation\/turf\/consumer\/reference(_:)","title":"case reference(Label)","type":"case"},{"path":"\/documentation\/turf\/consumer\/replace(_:_:)","title":"case replace(Consumer<Label>, String)","type":"case"},{"path":"\/documentation\/turf\/consumer\/sequence(_:)","title":"case sequence([Consumer<Label>])","type":"case"},{"path":"\/documentation\/turf\/consumer\/string(_:)","title":"case string(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/isoptional","title":"var isOptional: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match(_:)","title":"func match(String) throws -> Consumer<Label>.Match","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/transform","title":"Consumer.Transform","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/anycharacter(except:)-343y4","title":"static func anyCharacter(except: UnicodeScalar...) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/anycharacter(except:)-4bl6u","title":"static func anyCharacter(except: CharacterSet) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(_:)","title":"static func character(UnicodeScalar) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(in:)-296ct","title":"static func character(in: CharacterSet) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(in:)-4c3fd","title":"static func character(in: ClosedRange<UnicodeScalar>) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/character(in:)-6sa4d","title":"static func character(in: String) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/ignore(_:in:)","title":"static func ignore(Consumer<Label>, in: Consumer<Label>) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/interleaved(_:_:)","title":"static func interleaved(Consumer<Label>, Consumer<Label>) -> Consumer<Label>","type":"method"},{"path":"\/documentation\/turf\/consumer\/zeroormore(_:)","title":"static func zeroOrMore(Consumer<Label>) -> Consumer<Label>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/==(_:_:)","title":"static func == (Consumer<Label>.Match, Consumer<Label>.Match) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/node(_:_:)","title":"case node(Label?, [Consumer<Label>.Match])","type":"case"},{"path":"\/documentation\/turf\/consumer\/match\/token(_:_:)","title":"case token(String, Consumer<Label>.Location)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/location","title":"var location: Consumer<Label>.Location?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/transform(_:)","title":"func transform((Label, [any Sendable]) throws -> (any Sendable)?) rethrows -> (any Sendable)?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/match\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/match\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/match\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer\/match","title":"Consumer.Match","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/turf\/consumer\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/consumer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(arrayliteral:)","title":"init(arrayLiteral: Consumer<Label>...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/arrayliteralelement","title":"Consumer.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/extendedgraphemeclusterliteraltype","title":"Consumer.ExtendedGraphemeClusterLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/stringliteraltype","title":"Consumer.StringLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/consumer\/unicodescalarliteraltype","title":"Consumer.UnicodeScalarLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/consumer\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/turf\/consumer","title":"Consumer","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/==(_:_:)","title":"static func == (FeatureIdentifier, FeatureIdentifier) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/turf\/featureidentifier\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(_:)-22zh1","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/turf\/featureidentifier\/init(_:)-2g91b","title":"init(String)","type":"init"},{"path":"\/documentation\/turf\/featureidentifier\/init(_:)-4tjj5","title":"init<Source>(Source)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/turf\/featureidentifier\/number","title":"var number: Double?","type":"property"},{"path":"\/documentation\/turf\/featureidentifier\/string","title":"var string: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/featureidentifier\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/featureidentifier\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/featureidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/extendedgraphemeclusterliteraltype","title":"FeatureIdentifier.ExtendedGraphemeClusterLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(floatliteral:)","title":"init(floatLiteral: FloatLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/floatliteraltype","title":"FeatureIdentifier.FloatLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/integerliteraltype","title":"FeatureIdentifier.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/stringliteraltype","title":"FeatureIdentifier.StringLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/unicodescalarliteraltype","title":"FeatureIdentifier.UnicodeScalarLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/init(rawvalue:)","title":"init?(rawValue: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/rawvalue-swift.property","title":"var rawValue: Any","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/featureidentifier\/rawvalue-swift.typealias","title":"FeatureIdentifier.RawValue","type":"typealias"}],"path":"\/documentation\/turf\/featureidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/featureidentifier","title":"FeatureIdentifier","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/==(_:_:)","title":"static func == (GeoJSONObject, GeoJSONObject) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/feature(_:)","title":"case feature(Feature)","type":"case"},{"path":"\/documentation\/turf\/geojsonobject\/featurecollection(_:)","title":"case featureCollection(FeatureCollection)","type":"case"},{"path":"\/documentation\/turf\/geojsonobject\/geometry(_:)","title":"case geometry(Geometry)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/init(_:)","title":"init(any GeoJSONObjectConvertible)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/feature","title":"var feature: Feature?","type":"property"},{"path":"\/documentation\/turf\/geojsonobject\/featurecollection","title":"var featureCollection: FeatureCollection?","type":"property"},{"path":"\/documentation\/turf\/geojsonobject\/geometry","title":"var geometry: Geometry?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/geojsonobject\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/geojsonobject\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/geojsonobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/expressionarguments","title":"var expressionArguments: [Exp.Argument]","type":"property"}],"path":"\/documentation\/turf\/geojsonobject\/expressionargumentconvertible-implementations","title":"ExpressionArgumentConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geojsonobject\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/geojsonobject\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/geojsonobject","title":"GeoJSONObject","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/==(_:_:)","title":"static func == (Geometry, Geometry) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geometrycollection(_:)","title":"case geometryCollection(GeometryCollection)","type":"case"},{"path":"\/documentation\/turf\/geometry\/linestring(_:)","title":"case lineString(LineString)","type":"case"},{"path":"\/documentation\/turf\/geometry\/multilinestring(_:)","title":"case multiLineString(MultiLineString)","type":"case"},{"path":"\/documentation\/turf\/geometry\/multipoint(_:)","title":"case multiPoint(MultiPoint)","type":"case"},{"path":"\/documentation\/turf\/geometry\/multipolygon(_:)","title":"case multiPolygon(MultiPolygon)","type":"case"},{"path":"\/documentation\/turf\/geometry\/point(_:)","title":"case point(Point)","type":"case"},{"path":"\/documentation\/turf\/geometry\/polygon(_:)","title":"case polygon(Polygon)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/init(_:)","title":"init(any GeometryConvertible)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geometrycollection","title":"var geometryCollection: GeometryCollection?","type":"property"},{"path":"\/documentation\/turf\/geometry\/linestring","title":"var lineString: LineString?","type":"property"},{"path":"\/documentation\/turf\/geometry\/multilinestring","title":"var multiLineString: MultiLineString?","type":"property"},{"path":"\/documentation\/turf\/geometry\/multipoint","title":"var multiPoint: MultiPoint?","type":"property"},{"path":"\/documentation\/turf\/geometry\/multipolygon","title":"var multiPolygon: MultiPolygon?","type":"property"},{"path":"\/documentation\/turf\/geometry\/point","title":"var point: Point?","type":"property"},{"path":"\/documentation\/turf\/geometry\/polygon","title":"var polygon: Polygon?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/geometry\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/geometry\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/geometry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geojsonobject","title":"var geoJSONObject: GeoJSONObject","type":"property"}],"path":"\/documentation\/turf\/geometry\/geojsonobjectconvertible-implementations","title":"GeoJSONObjectConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/geometry","title":"var geometry: Geometry","type":"property"}],"path":"\/documentation\/turf\/geometry\/geometryconvertible-implementations","title":"GeometryConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/init(wkt:)","title":"init(wkt: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/geometry\/wkt","title":"var wkt: String","type":"property"}],"path":"\/documentation\/turf\/geometry\/wktconvertible-implementations","title":"WKTConvertible Implementations","type":"symbol"}],"path":"\/documentation\/turf\/geometry","title":"Geometry","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/==(_:_:)","title":"static func == (JSONValue, JSONValue) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/array(_:)","title":"case array(JSONArray)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/number(_:)","title":"case number(Double)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/object(_:)","title":"case object(JSONObject)","type":"case"},{"path":"\/documentation\/turf\/jsonvalue\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-2e69q","title":"init(JSONArray)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-4mwc5","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-6c1tu","title":"init<Source>(Source)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-7bkw0","title":"init(Bool)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-88gx4","title":"init(JSONObject)","type":"init"},{"path":"\/documentation\/turf\/jsonvalue\/init(_:)-8i3em","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/array","title":"var array: JSONArray?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/boolean","title":"var boolean: Bool?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/number","title":"var number: Double?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/object","title":"var object: JSONObject?","type":"property"},{"path":"\/documentation\/turf\/jsonvalue\/string","title":"var string: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/turf\/jsonvalue\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/turf\/jsonvalue\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/turf\/jsonvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(arrayliteral:)","title":"init(arrayLiteral: JSONValue.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/arrayliteralelement","title":"JSONValue.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(booleanliteral:)","title":"init(booleanLiteral: BooleanLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/booleanliteraltype","title":"JSONValue.BooleanLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (JSONValue.Key, JSONValue.Value)...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/key","title":"JSONValue.Key","type":"typealias"},{"path":"\/documentation\/turf\/jsonvalue\/value","title":"JSONValue.Value","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/extendedgraphemeclusterliteraltype","title":"JSONValue.ExtendedGraphemeClusterLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(floatliteral:)","title":"init(floatLiteral: FloatLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/floatliteraltype","title":"JSONValue.FloatLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/integerliteraltype","title":"JSONValue.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/stringliteraltype","title":"JSONValue.StringLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/unicodescalarliteraltype","title":"JSONValue.UnicodeScalarLiteralType","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/init(rawvalue:)","title":"init?(rawValue: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/rawvalue-swift.property","title":"var rawValue: Any","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/turf\/jsonvalue\/rawvalue-swift.typealias","title":"JSONValue.RawValue","type":"typealias"}],"path":"\/documentation\/turf\/jsonvalue\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/turf\/jsonvalue","title":"JSONValue","type":"enum"}],"path":"\/documentation\/turf","title":"Turf","type":"module"}],"path":"\/documentation\/overview","title":"MapboxMaps Documentation","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}