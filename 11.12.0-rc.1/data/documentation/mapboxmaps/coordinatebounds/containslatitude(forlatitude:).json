{"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"metadata":{"symbolKind":"method","title":"containsLatitude(forLatitude:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"forLatitude"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"MapboxMaps"}],"navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","role":"symbol"},"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"type":"text","text":" or not."}],"kind":"symbol","identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"forLatitude"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"latitude","content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","role":"collection","url":"\/documentation\/mapboxmaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","abstract":[],"kind":"article","role":"collection","url":"\/documentation\/overview","title":"MapboxMaps Documentation","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","kind":"symbol","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":" or not.","type":"text"}],"type":"topic","title":"containsLatitude(forLatitude:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"url":"\/documentation\/mapboxmaps\/mapboxmap-apis","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","title":"MapboxMap","role":"collectionGroup","abstract":[],"type":"topic","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"role":"symbol","url":"\/documentation\/mapboxmaps\/coordinatebounds","navigatorTitle":[{"kind":"identifier","text":"CoordinateBounds"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CoordinateBounds","kind":"identifier"}],"title":"CoordinateBounds","type":"topic"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"op":"replace","path":"\/metadata\/title","value":"containsLatitudeForLatitude:"},{"op":"replace","value":"method","path":"\/metadata\/symbolKind"},{"path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"op":"replace"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"BOOL","preciseIdentifier":"c:@T@BOOL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"},{"text":"(","kind":"text"},{"text":"double","preciseIdentifier":"c:d","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"kind":"text","text":";"}]}]},"op":"replace","path":"\/primaryContentSections\/0"},{"path":"\/primaryContentSections\/1","value":{"kind":"parameters","parameters":[{"name":"latitude","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}]}]}]},"op":"replace"},{"value":{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}],"kind":"content"},"op":"replace","path":"\/primaryContentSections\/2"},{"value":"containsLatitudeForLatitude:","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title"},{"op":"replace","value":[{"kind":"text","text":"- "},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments"},{"value":"MBMCoordinateBounds","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","value":[{"kind":"identifier","text":"MBMCoordinateBounds"}]},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","op":"replace","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}