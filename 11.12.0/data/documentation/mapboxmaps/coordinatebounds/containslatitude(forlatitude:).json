{"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"containsLatitude(forLatitude:)","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","modules":[{"name":"MapboxMaps"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}],"name":"latitude"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"code":"true","type":"codeVoice"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}],"type":"paragraph"}]}],"kind":"symbol","abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"text":" or not.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"role":"symbol","title":"CoordinateBounds","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CoordinateBounds","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","navigatorTitle":[{"kind":"identifier","text":"CoordinateBounds"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","type":"topic","navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"title":"containsLatitude(forLatitude:)","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}]},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"role":"collection","title":"MapboxMaps Documentation","url":"\/documentation\/overview","type":"topic","kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","abstract":[]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","role":"collection","title":"MapboxMaps","url":"\/documentation\/mapboxmaps","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"title":"MapboxMap","abstract":[],"kind":"article","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"path":"\/metadata\/fragments"},{"op":"add","value":null,"path":"\/topicSections"},{"path":"\/relationshipsSections","op":"add","value":null},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"op":"replace","value":{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL","text":"BOOL"},{"text":") ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"double","kind":"typeIdentifier","preciseIdentifier":"c:d"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"latitude"},{"text":";","kind":"text"}]}]},"path":"\/primaryContentSections\/0"},{"op":"replace","path":"\/primaryContentSections\/1","value":{"kind":"parameters","parameters":[{"name":"latitude","content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}]}]}},{"path":"\/primaryContentSections\/2","value":{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"code":"true","type":"codeVoice"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}]}]},"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","value":"MBMCoordinateBounds"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","value":"containsLatitudeForLatitude:"},{"value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments","op":"replace"}]}]}