{"metadata":{"roleHeading":"Instance Method","modules":[{"name":"MapboxMaps"}],"title":"containsLatitude(forLatitude:)","symbolKind":"method","externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":" "},{"text":"latitude","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"latitude","content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"code":"true","type":"codeVoice"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"type":"topic","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"title":"CoordinateBounds","url":"\/documentation\/mapboxmaps\/coordinatebounds","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","role":"symbol","navigatorTitle":[{"text":"CoordinateBounds","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CoordinateBounds","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"type":"topic","title":"MapboxMaps","role":"collection","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","url":"\/documentation\/mapboxmaps","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"containsLatitude(forLatitude:)","type":"topic","url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":" or not.","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","navigatorTitle":[{"kind":"identifier","text":"containsLatitudeForLatitude:"}]},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"url":"\/documentation\/overview","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","kind":"article","role":"collection","abstract":[],"type":"topic","title":"MapboxMaps Documentation"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"type":"topic","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","abstract":[],"role":"collectionGroup","title":"MapboxMap","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","kind":"article"}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"containsLatitudeForLatitude:"},{"value":"method","path":"\/metadata\/symbolKind","op":"replace"},{"path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"op":"replace"},{"value":null,"op":"add","path":"\/topicSections"},{"path":"\/relationshipsSections","op":"add","value":null},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"op":"replace","path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:@T@BOOL","text":"BOOL","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"identifier","text":"containsLatitudeForLatitude:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"double","preciseIdentifier":"c:d"},{"kind":"text","text":") "},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"}},{"path":"\/primaryContentSections\/1","op":"replace","value":{"kind":"parameters","parameters":[{"name":"latitude","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}]}]}]}},{"value":{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}],"type":"paragraph"}]},"path":"\/primaryContentSections\/2","op":"replace"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","value":"MBMCoordinateBounds","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}]},{"value":[{"kind":"identifier","text":"MBMCoordinateBounds"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}