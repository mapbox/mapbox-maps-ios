{"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"containsLatitude(forLatitude:)","modules":[{"name":"MapboxMaps"}],"role":"symbol","externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","interfaceLanguage":"swift"},"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"kind":"text","text":" "},{"text":"latitude","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}],"name":"latitude"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"codeVoice","code":"true"},{"text":" if the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"text":", ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"code":"latitude","type":"codeVoice"},{"type":"text","text":" or not."}],"title":"containsLatitude(forLatitude:)","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"containsLatitude","kind":"identifier"},{"kind":"text","text":"("},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","title":"MapboxMap","abstract":[]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","url":"\/documentation\/mapboxmaps","type":"topic","role":"collection","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"title":"MapboxMaps"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"title":"CoordinateBounds","kind":"symbol","role":"symbol","abstract":[{"text":"A rectangular area as measured on a two-dimensional map projection.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"CoordinateBounds","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CoordinateBounds"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","title":"MapboxMaps Documentation","role":"collection","abstract":[],"kind":"article","url":"\/documentation\/overview"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"value":"Instance Method","op":"replace","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","value":"containsLatitudeForLatitude:","op":"replace"},{"value":"method","op":"replace","path":"\/metadata\/symbolKind"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"path":"\/metadata\/fragments"},{"value":null,"op":"add","path":"\/topicSections"},{"path":"\/relationshipsSections","value":null,"op":"add"},{"op":"add","path":"\/seeAlsoSections","value":null},{"path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL","text":"BOOL"},{"kind":"text","text":") "},{"kind":"identifier","text":"containsLatitudeForLatitude:"},{"kind":"text","text":"("},{"preciseIdentifier":"c:d","text":"double","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},"op":"replace"},{"op":"replace","path":"\/primaryContentSections\/1","value":{"parameters":[{"content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}],"name":"latitude"}],"kind":"parameters"}},{"path":"\/primaryContentSections\/2","op":"replace","value":{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"code":"true","type":"codeVoice"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}]}],"kind":"content"}},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","value":"containsLatitudeForLatitude:","op":"replace"},{"value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments"},{"value":"MBMCoordinateBounds","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title"},{"op":"replace","value":[{"kind":"identifier","text":"MBMCoordinateBounds"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","op":"replace","value":[{"text":"MBMCoordinateBounds","kind":"identifier"}]}]}]}