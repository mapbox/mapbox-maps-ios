{"abstract":[{"type":"text","text":"Simplify runtime style manipulation with declarative syntax."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Article","title":"Declarative Map Styling","modules":[{"name":"MapboxMaps"}],"role":"article"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Migrate-to-v11","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SwiftUI-User-Guide","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Map-Content-Gestures-User-Guide","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Work-with-visionOS"],"title":"Articles","anchor":"Articles"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Declarative-Map-Styling"},"sections":[],"kind":"article","primaryContentSections":[{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Starting from version ","type":"text"},{"code":"11.4.0-beta.1","type":"codeVoice"},{"text":" of Mapbox Maps SDK you can now use a declarative approach to add or update style primitives such as Sources, Layers, Images, and Lights at runtime. This paradigm simplifies working with all Mapbox styles at runtime and works well in SwiftUI and UIKit applications.","type":"text"}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Declarative styling is available starting from iOS 13.","type":"text"}]}],"type":"aside"},{"text":"Getting Started","level":2,"type":"heading","anchor":"Getting-Started"},{"inlineContent":[{"type":"text","text":"In UIKit applications you can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/StyleManager\/setMapStyleContent(content:)"},{"type":"text","text":" method, which is available in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Snapshotter"},{"type":"text","text":" instances."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ UIKit","let mapView = MapView()","mapView.mapboxMap.setMapStyleContent {","    VectorSource(id: \"traffic-source\")","        .tiles([\"...\"])","","    LineLayer(id: \"traffic-layer\", source: \"traffic-source\")","        .lineColor(.red)","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In SwiftUI applications, simply place the style primitives inside the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Map"},{"type":"text","text":" content:"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ SwiftUI","Map {","    VectorSource(id: \"traffic\")","        .tiles([\"...\"])","","    LineLayer(id: \"traffic-layer\", source: \"traffic\")","        .lineColor(.red)","}"],"type":"codeListing"},{"name":"Important","style":"important","content":[{"inlineContent":[{"text":"You donâ€™t need to observe any events to modify the map style. Changes will be automatically applied when the map style is loaded.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"text":"Styling Primitives","level":2,"type":"heading","anchor":"Styling-Primitives"},{"inlineContent":[{"type":"text","text":"Style primitives are pieces of "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent","isActive":true},{"type":"text","text":" that can be added, updated, and removed at runtime. These primitives represent the data sources and visualization choices for your map:"}],"type":"paragraph"},{"rows":[[[{"inlineContent":[{"type":"text","text":"Category"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Types supported"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"Source","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/VectorSource","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterSource","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterDemSource","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/GeoJSONSource","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ImageSource","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Model","isActive":true},{"text":", ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CustomGeometrySource","isActive":true,"type":"reference"},{"text":" (partial), ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CustomRasterSource","isActive":true,"type":"reference"},{"text":" (partial)","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"Layer"}],"type":"paragraph"}],[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/FillLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/LineLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SymbolLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CircleLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/HeatmapLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/FillExtrusionLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/HillshadeLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/BackgroundLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/LocationIndicatorLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SkyLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ModelLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CustomLayer"},{"type":"text","text":" (partial), "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ClipLayer"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterParticleLayer"},{"type":"text","text":"."}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"Lights","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/FlatLight"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/AmbientLight"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/DirectionalLight"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"Map properties","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Projection","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Atmosphere","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Terrain","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/TransitionOptions-swift.struct","type":"reference"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"Fragments","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/StyleImport"}],"type":"paragraph"}]]],"header":"row","type":"table"},{"inlineContent":[{"text":"All of them can be used inside of ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContentBuilder","isActive":true,"type":"reference"},{"text":" (UIKit) or ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapContentBuilder","isActive":true,"type":"reference"},{"text":" (SwiftUI). You can use declarative syntax to modify the properties of your style primitives when you add them to your map. If you update these properties the changes will be reflected on your map.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/\/ Create an atmosphere primitive and set properties for range, start intensity, and color","Atmosphere()","    .range(start: 0, end: 12)","    .horizonBlend(0.1)","    .starIntensity(0.2)","    .color(StyleColor(red: 240, green: 196, blue: 152, alpha: 1)!)","    .highColor(StyleColor(red: 221, green: 209, blue: 197, alpha: 1)!)","    .spaceColor(StyleColor(red: 153, green: 180, blue: 197, alpha: 1)!)"],"type":"codeListing"},{"text":"Using Style Primitives Conditionally","level":3,"type":"heading","anchor":"Using-Style-Primitives-Conditionally"},{"inlineContent":[{"text":"You can also use conditionals to add and remove map style primitives. In the example below, ","type":"text"},{"type":"codeVoice","code":"useTerrain"},{"text":" is a variable controlled by your code, perhaps toggled when a user selects a button or changes a setting. When true, the Style Projection is set to Globe, terrain data is added to a RasterDem source and visualized with a Terrain map content. When toggled false, the terrain source and content are removed and the project is set to Mercator. Other content on the map is not affected by this change so updates are lightweight.","type":"text"}],"type":"paragraph"},{"tabs":[{"title":"Swift UI","content":[{"syntax":"swift","code":["@State var useTerrain = true","","var body: some View {","    Map {","        if useTerrain {","            StyleProjection(name: .globe)","            RasterDemSource(id: \"mapbox-dem\")","                .url(\"mapbox:\/\/mapbox.mapbox-terrain-dem-v1\")","                .maxzoom(14.0)","            Terrain(sourceId: \"mapbox-dem\")","                .exaggeration(5)","        } else {","            StyleProjection(name: .mercator)","        }","    }","}"],"type":"codeListing"}]},{"title":"UI Kit","content":[{"type":"codeListing","syntax":"swift","code":["var useTerrain = true","","\/\/ To change your style content you should set new map primitives using","\/\/ ``StyleManager\/setMapStyleContent(content:)`` like below.","\/\/ This will fully change the displayed style content,","\/\/ so be sure to include all the content you want.","func updateStyle(useTerrain: Bool) {","    mapView.mapboxMap.setMapStyleContent {","        if useTerrain {","            StyleProjection(name: .globe)","            RasterDemSource(id: \"mapbox-dem\")","                .url(\"mapbox:\/\/mapbox.mapbox-terrain-dem-v1\")","                .maxzoom(14.0)","            Terrain(sourceId: \"mapbox-dem\")","                .exaggeration(5)","        } else {","            StyleProjection(name: .mercator)","        }","    }","}"]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It is totally fine to call the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/StyleManager\/setMapStyleContent(content:)"},{"type":"text","text":" every time you need to update just a part of the content. All updates are made incrementally, meaning that elements which havenâ€™t changed wonâ€™t be re-added unnecessarily. If you experience a performance issue, please refer to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Declarative-Map-Styling#Performance-Optimization"},{"type":"text","text":" section."}]}],"name":"Tip"}]}],"type":"tabNavigator"},{"text":"Building Custom Style Components","level":3,"type":"heading","anchor":"Building-Custom-Style-Components"},{"inlineContent":[{"type":"text","text":"You can create your own style components in addition to build-in styling primitives. Defining your own components gives you greater control over when the content is updated, and allows for cleaner organization of your code."}],"type":"paragraph"},{"name":"Tip","style":"tip","content":[{"inlineContent":[{"type":"text","text":"If you are familiar with SwiftUI principles, the custom style components follow the same pattern."}],"type":"paragraph"}],"type":"aside"},{"inlineContent":[{"type":"text","text":"To create a custom style component, declare a new struct which conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent"},{"type":"text","text":" and add your primitives to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent\/body-swift.property"},{"type":"text","text":" property."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/\/ A custom style component","struct CarModel: MapStyleContent {","    var body: some MapStyleContent {","        GeoJSONSource(id: \"models-geojson\")","            .data(.featureCollection(carFeatureCollection))","","        Model(","            id: \"car\",","            uri: Bundle.main.url(forResource: \"sportcar\", withExtension: \"glb\")!","        )","","        ModelLayer(id: \"models\", source: \"models-geojson\")","            .modelId(Exp(.get) { \"model\" })","            .modelType(.common3d)","            .modelScale([40, 40, 40])","            .modelTranslation([0, 0, 0])","            .modelRotation([0, 0, 90])","            .modelOpacity(0.7)","    }","}","","\/\/\/ Usage:","Map {","    CarModel()","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The code above creates a "},{"type":"codeVoice","code":"CarModel"},{"type":"text","text":" component which in turn contains all primitives to display a sport care Model on your map: the "},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/GeoJSONSource","type":"reference"},{"type":"text","text":" for the data, the "},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Model","type":"reference"},{"type":"text","text":" to display, and the "},{"isActive":true,"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ModelLayer","type":"reference"},{"type":"text","text":" used to position the model. Add your "},{"type":"codeVoice","code":"CarModelPrimitive"},{"type":"text","text":" to your style body just like Mapbox style primitives."}],"type":"paragraph"},{"name":"Warning","style":"warning","content":[{"type":"paragraph","inlineContent":[{"text":"We donâ€™ recommend to use ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" or "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" in your custom component. Instead, use "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" in the SwiftUI views and pass data to custom components as properties."}]}],"type":"aside"},{"text":"Content positioning","level":2,"type":"heading","anchor":"Content-positioning"},{"inlineContent":[{"type":"text","text":"One of the most important properties of declarative styling is stable content ordering. Essentially, this means that all layers defined in the declarative description will be positioned on the map relative to each other, following a similar pattern as "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/zstack","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let coordinate = CLLocationCoordinate2D(latitude: 60.167488, longitude: 24.942747)","","var body: some View {","    Map(initialViewport: .camera(center: .init(latitude: 27.2, longitude: -26.9), zoom: 1.53, bearing: 0, pitch: 0)) {","        MapViewAnnotation(coordinate: coordinate) {","            Circle()","                .fill(.purple)","                .frame(width: 40, height: 40)","        }","","        if showYellowPolygon {","            PolygonAnnotation(polygon: Polygon(center: coordinate, radius: 8 * 100, vertices: 60))","                .fillColor(StyleColor(.yellow))","        }","","","        GeoJSONSource(id: \"source\")","            .data(.geometry(.polygon(Polygon(center: coordinate, radius: 4 * 100, vertices: 60))))","","        \/\/\/ The green polygon is displayed on top of the yellow polygon.","        FillLayer(id: \"green\", source: \"source\")","            .fillColor(.green)","            .fillOpacity(0.7)","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"In the example above, the position will be the following:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["Basemap (Standard Style layers) <-- bottom","Yellow polygon","Green Polygon","Purple circle <-- top"],"type":"codeListing"},{"inlineContent":[{"text":"The purple circle displayed on top of all content because View Annotations are always rendered on top of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Map","isActive":true},{"text":" view.  The yellow polygon is always displayed below the green one, even if the ","type":"text"},{"type":"codeVoice","code":"showYellowPolygon"},{"text":" property was toggled.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"In the declarative API thereâ€™s no ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/LayerPosition","type":"reference","isActive":true},{"text":" to override the positioning. Instead, use new ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Slot","type":"reference","isActive":true},{"text":" constants to have a finer control.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, the Standard Style is shipped with pre-defined slots, such as "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Slot\/middle","type":"reference","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["Map {","    \/\/\/ The green polygon is displayd in the middle of Standard Style layers.","    FillLayer(id: \"green\", source: \"green-source\")","        .fillColor(.green)","        .slot(.middle)","","    \/\/\/ By default, this layer id displayed on top of other layers.","    FillLayer(id: \"purple\", source: \"purple-source\")","        .fillColor(.purple)","}"],"type":"codeListing"},{"inlineContent":[{"text":"Using the custom slots let you alter the ordering:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Map {","    SlotLayer(id: \"my-custom-slot\")","","    FillLayer(id: \"green\", source: \"green-source\")","        .fillColor(.green)","","    FillLayer(id: \"purple\", source: \"purple-source\")","        .fillColor(.purple)","        .slot(\"my-custom-slot\")","}"],"type":"codeListing"},{"inlineContent":[{"text":"In the example above, the purple layer will be displayed below the green one, because it is assigned to the custom ","type":"text"},{"type":"codeVoice","code":"my-custom-slot"},{"text":" that comes before the green polygon.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"In general, the ordering rule is as follows:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"First, the slot matters the most. All layers on the map are ordered by their slot position.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If there is more than one layer in the slot, they are ordered following the order in the code."}],"type":"paragraph"}]}]},{"text":"Using Layer Position","level":3,"type":"heading","anchor":"Using-Layer-Position"},{"inlineContent":[{"type":"text","text":"In some rare use-cases you may want to use "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/LayerPosition","isActive":true},{"type":"text","text":" with declarative styling. The "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer","isActive":true},{"type":"text","text":" is the only layer that has layer position in the declarative styling API. This effectively resolves the scenario where you need to insert a runtime-added layer between style layers that are part of the Style JSON."},{"type":"text","text":" "},{"type":"text","text":"Please note that setting both "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer\/slot(_:)","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer\/position(_:)","isActive":true},{"type":"text","text":" in "},{"type":"codeVoice","code":"SlotLayer"},{"type":"text","text":" is incorrect and the "},{"type":"codeVoice","code":"slot"},{"type":"text","text":" will always have priority over the "},{"type":"codeVoice","code":"position"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["Map {","    \/\/\/ The \"roads\" layer id comes from the Streets Style.","    SlotLayer(id: \"below-roads\")","        .position(.below(\"roads\"))","","    FillLayer(id: \"square\", source: \"square-data\")","        .fillColor(.systemPink)","        .slot(Slot(rawValue: \"below-roads\")","}",".mapStyle(.streets)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In the example above the "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/FillLayer","isActive":true},{"type":"text","text":" will be placed below the "},{"type":"codeVoice","code":"roads"},{"type":"text","text":" layer from the Streets Style."}],"type":"paragraph"},{"text":"Performance Optimization","level":2,"type":"heading","anchor":"Performance-Optimization"},{"inlineContent":[{"type":"text","text":"To achieve the best performance, it is recommended to use custom components of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapContent"},{"type":"text","text":" to isolate components updates."}],"type":"paragraph"},{"inlineContent":[{"text":"This is because whenever you update the ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent","isActive":true,"type":"reference"},{"text":" (via ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/StyleManager\/setMapStyleContent(content:)","isActive":true,"type":"reference"},{"text":") or ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapContent","isActive":true,"type":"reference"},{"text":" (via SwiftUI ","type":"text"},{"code":"@State","type":"codeVoice"},{"text":" change) internally the full content tree must be compared with its previous version to perform the most efficient update. Having a larger tree of components instead a flat list makes internal caching to be more efficient.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is very important if you use a large json arrays inside of styling primitives. Lets consider the following example:"}],"type":"paragraph"},{"syntax":"swift","code":["struct MyView: View {","    @State var features: FeatureCollection?","    @State var counter = 0","","    var body: some View {","        Map {","            if let features {","                LineLayer(id: \"route\", source: \"route-source\")","                GeoJSONSource(id: \"route-source\")","                    \/\/\/ WARNING: This code may be not optimal for large feature collection.","                    .data(.featureCollection(features))","            }","        }","        .onAppear {","            features = loadHeavyGeojson()","        }","        Button(\"Trigger update \\(counter)\") {","            \/\/\/ Counter updates here will trigger the `body` re-evaluation. This in turn","            \/\/\/ triggers the Map update that need to check if the `features` are changed.","            \/\/\/ This may be a costly operation.","            counter += 1","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This code may not be optimal, because on every "},{"type":"codeVoice","code":"View.body"},{"type":"text","text":" re-evaluation, the large feature set needs to be re-evaluated too."}],"type":"paragraph"},{"inlineContent":[{"text":"To optimize it, create a custom component that will consume data by a reference type instead. In the example below, the ","type":"text"},{"code":"RouteComponent.body","type":"codeVoice"},{"text":" will be re-evaluated only when the actual ","type":"text"},{"code":"RouteData","type":"codeVoice"},{"text":" object is changed. If only the ","type":"text"},{"code":"counter","type":"codeVoice"},{"text":" is updated, the large route JSON wonâ€™t be re-evaluated.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct MyView: View {","    \/\/\/ A simple reference wrapper around FeatureCollection.","    private class RouteData {","        let features: FeatureCollection","        init(features: FeatureCollection) { self.features = features }","    }","","    \/\/\/ A custom route component that renders the line layer and creates the data source for it.","    private struct RouteComponent: MapContent {","        \/\/\/ The `body` is called only when component's properties are changed.","        \/\/\/ In this case the `route` is a reference type, which guarantees the fast equality check.","        let route: RouteData","","        var body: some MapContent {","            LineLayer(id: \"route\", source: \"route-source\")","            GeoJSONSource(id: \"route-source\")","                .data(.featureCollection(route.features))","        }","    }","","    @State private var routeData: RouteData?","    @State private var counter = 0","","    var body: some View {","        Map {","            if let routeData {","                RouteComponent(route: routeData)","            }","        }","        .onAppear {","            routeData = RouteData(features: loadHeavyGeojson())","        }","","        Button(\"Trigger update \\(counter)\") {","            \/\/\/ Update of the counter state won't trigger the RouteComponent.body evaluation because","            \/\/\/ routeData points to the same data.","            counter += 1","        }","","        Button(\"Update the route\") {","            \/\/\/ This will correctly update the rendered route, only once.","            routeData = RouteData(features: loadANewVersionOfRoute())","        }","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"For reference, see the "},{"identifier":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/blob\/main\/Sources\/Examples\/Swift%20UI%20Examples\/DynamicStyleExample.swift","isActive":true,"type":"reference"},{"type":"text","text":" in the Examples application."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/TransitionOptions-swift.struct":{"role":"symbol","navigatorTitle":[{"text":"TransitionOptions","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/TransitionOptions-swift.struct","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TransitionOptions"},{"type":"text","text":" control timing for the interpolation between a transitionable style"},{"type":"text","text":" "},{"type":"text","text":"propertyâ€™s previous value and new value. These can be used to define the style default property"},{"type":"text","text":" "},{"type":"text","text":"transition behavior. Also, any transitionable style property may also have its own "},{"type":"codeVoice","code":"-transition"},{"type":"text","text":" "},{"type":"text","text":"property that defines specific transition timing for that specific layer property, overriding"},{"type":"text","text":" "},{"type":"text","text":"the global transition values."}],"type":"topic","url":"\/documentation\/mapboxmaps\/transitionoptions-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TransitionOptions","kind":"identifier"}],"title":"TransitionOptions"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Model":{"type":"topic","abstract":[{"type":"text","text":"A structure represeting a Model"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Model","url":"\/documentation\/mapboxmaps\/model","role":"symbol","kind":"symbol","title":"Model","navigatorTitle":[{"text":"Model","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Model","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CustomRasterSource":{"tags":[{"type":"spi","text":"SPI"}],"navigatorTitle":[{"kind":"identifier","text":"CustomRasterSource"}],"title":"CustomRasterSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomRasterSource"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CustomRasterSource","url":"\/documentation\/mapboxmaps\/customrastersource","abstract":[{"text":"Describes a Custom Raster Source to be used in the style.","type":"text"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/LayerPosition":{"type":"topic","url":"\/documentation\/mapboxmaps\/layerposition","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayerPosition","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/LayerPosition","abstract":[{"text":"Specifies the position at which a layer will be added when using ","type":"text"},{"code":"Style.addLayer","type":"codeVoice"},{"text":".","type":"text"}],"title":"LayerPosition","navigatorTitle":[{"text":"LayerPosition","kind":"identifier"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/VectorSource":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VectorSource","kind":"identifier"}],"navigatorTitle":[{"text":"VectorSource","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/vectorsource","title":"VectorSource","abstract":[{"type":"text","text":"A vector tile source."}],"role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/VectorSource"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CustomLayer":{"abstract":[{"text":"Layer with custom rendering implementation","type":"text"}],"type":"topic","title":"CustomLayer","url":"\/documentation\/mapboxmaps\/customlayer","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CustomLayer","navigatorTitle":[{"text":"CustomLayer","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomLayer","kind":"identifier"}],"tags":[{"text":"SPI","type":"spi"}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Atmosphere":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Atmosphere","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Atmosphere","title":"Atmosphere","url":"\/documentation\/mapboxmaps\/atmosphere","kind":"symbol","abstract":[{"text":"A styleâ€™s fog property is a global effect that improves depth perception by fading out distant objects.","type":"text"}],"navigatorTitle":[{"text":"Atmosphere","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/HillshadeLayer":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/HillshadeLayer","navigatorTitle":[{"text":"HillshadeLayer","kind":"identifier"}],"kind":"symbol","title":"HillshadeLayer","abstract":[{"type":"text","text":"Client-side hillshading visualization based on DEM data. Currently, the implementation only supports Mapbox Terrain RGB and Mapzen Terrarium tiles."}],"type":"topic","role":"symbol","url":"\/documentation\/mapboxmaps\/hillshadelayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HillshadeLayer","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/SlotLayer/position(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"position","kind":"identifier"},{"text":"(","kind":"text"},{"text":"LayerPosition","kind":"typeIdentifier","preciseIdentifier":"s:14MapboxCoreMaps13LayerPositionO"},{"text":") -> ","kind":"text"},{"text":"LayerAtPosition","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps15LayerAtPositionV"},{"text":"<","kind":"text"},{"text":"SlotLayer","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps9SlotLayerV"},{"text":">","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer\/position(_:)","title":"position(_:)","abstract":[{"type":"text","text":"Positions this layer at a specified position."}],"type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/slotlayer\/position(_:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Projection":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Projection"}],"abstract":[{"type":"text","text":"A collection of "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Web_Mercator_projection"},{"type":"text","text":" projection methods."}],"url":"\/documentation\/mapboxmaps\/projection","title":"Projection","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Projection","navigatorTitle":[{"kind":"identifier","text":"Projection"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Declarative-Map-Styling":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Declarative-Map-Styling","type":"topic","abstract":[{"type":"text","text":"Simplify runtime style manipulation with declarative syntax."}],"role":"article","url":"\/documentation\/mapboxmaps\/declarative-map-styling","kind":"article","title":"Declarative Map Styling"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Work-with-visionOS":{"type":"topic","role":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Work-with-visionOS","abstract":[{"type":"text","text":"Use Mapbox Maps in native applications for Apple Vision Pro."}],"title":"Work with visionOS","kind":"article","url":"\/documentation\/mapboxmaps\/work-with-visionos"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/SwiftUI-User-Guide":{"abstract":[{"text":"Use Mapbox Maps in SwiftUI applications.","type":"text"}],"url":"\/documentation\/mapboxmaps\/swiftui-user-guide","type":"topic","kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SwiftUI-User-Guide","role":"article","title":"SwiftUI User Guide"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/SkyLayer":{"url":"\/documentation\/mapboxmaps\/skylayer","title":"SkyLayer","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SkyLayer","kind":"identifier"}],"navigatorTitle":[{"text":"SkyLayer","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SkyLayer","abstract":[{"type":"text","text":"A spherical dome around the map that is always rendered behind all other layers."},{"type":"text","text":" "},{"type":"text","text":"Warning: As of v10.6.0, "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Atmosphere","isActive":true},{"type":"text","text":" is the preferred method for atmospheric styling. Sky layer is not supported by the globe projection, and will be phased out in future major release."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Migrate-to-v11":{"url":"\/documentation\/mapboxmaps\/migrate-to-v11","role":"article","kind":"article","type":"topic","title":"Migrate to v11 from v10","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Migrate-to-v11","abstract":[{"text":"The Mapbox Maps SDK v11 introduces improvements to how Mapbox works on iOS platforms, as well as changes to how developers use the SDK. This document summarizes the most important changes - such as new features, deprecated APIs, and breaking changes - and walks you through how to upgrade an application using v10 of the Mapbox Maps SDK to v11.","type":"text"}]},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"url":"\/documentation\/overview","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","abstract":[],"kind":"article","role":"collection","title":"MapboxMaps Documentation"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/RasterParticleLayer":{"abstract":[{"type":"text","text":"Particle animation driven by textures such as wind maps."}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RasterParticleLayer","kind":"identifier"}],"navigatorTitle":[{"text":"RasterParticleLayer","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/rasterparticlelayer","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterParticleLayer","title":"RasterParticleLayer","tags":[{"text":"SPI","type":"spi"}],"type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/SymbolLayer":{"title":"SymbolLayer","url":"\/documentation\/mapboxmaps\/symbollayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SymbolLayer","kind":"identifier"}],"navigatorTitle":[{"text":"SymbolLayer","kind":"identifier"}],"abstract":[{"type":"text","text":"An icon or a text label."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SymbolLayer","kind":"symbol","type":"topic","role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/LineLayer":{"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/LineLayer","url":"\/documentation\/mapboxmaps\/linelayer","role":"symbol","title":"LineLayer","navigatorTitle":[{"text":"LineLayer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A stroked line."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LineLayer","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/FlatLight":{"url":"\/documentation\/mapboxmaps\/flatlight","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatLight","kind":"identifier"}],"title":"FlatLight","abstract":[{"text":"A global directional light source which is only applied on 3D and hillshade layers. Using this type disables other light sources.","type":"text"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/FlatLight","navigatorTitle":[{"text":"FlatLight","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapStyleContentBuilder":{"role":"symbol","abstract":[{"type":"text","text":"A result builder that creates map style content from closures you provide."}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/mapstylecontentbuilder","navigatorTitle":[{"kind":"identifier","text":"MapStyleContentBuilder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapStyleContentBuilder"}],"title":"MapStyleContentBuilder","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContentBuilder"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap","type":"topic","title":"MapboxMap","url":"\/documentation\/mapboxmaps\/mapboxmap","abstract":[{"text":"Provides access to the map model, including the camera, style, observable map events,","type":"text"},{"text":" ","type":"text"},{"text":"and querying rendered features.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapboxMap","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"MapboxMap","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/SlotLayer":{"type":"topic","role":"symbol","url":"\/documentation\/mapboxmaps\/slotlayer","navigatorTitle":[{"text":"SlotLayer","kind":"identifier"}],"abstract":[{"text":"Marks the position of a slot.","type":"text"}],"kind":"symbol","title":"SlotLayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SlotLayer","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/SlotLayer/slot(_:)":{"role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SlotLayer\/slot(_:)","url":"\/documentation\/mapboxmaps\/slotlayer\/slot(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"slot","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Slot","preciseIdentifier":"s:10MapboxMaps4SlotV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"SlotLayer","preciseIdentifier":"s:10MapboxMaps9SlotLayerV","kind":"typeIdentifier"}],"title":"slot(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The slot this layer is assigned to."},{"type":"text","text":" "},{"type":"text","text":"If specified, and a slot with that name exists, it will be placed at that position in the layer order."}]},"https://github.com/mapbox/mapbox-maps-ios/blob/main/Sources/Examples/Swift%20UI%20Examples/DynamicStyleExample.swift":{"title":"DynamicStylingExample","identifier":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/blob\/main\/Sources\/Examples\/Swift%20UI%20Examples\/DynamicStyleExample.swift","url":"https:\/\/github.com\/mapbox\/mapbox-maps-ios\/blob\/main\/Sources\/Examples\/Swift%20UI%20Examples\/DynamicStyleExample.swift","titleInlineContent":[{"type":"text","text":"DynamicStylingExample"}],"type":"link"},"https://en.wikipedia.org/wiki/Web_Mercator_projection":{"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Web_Mercator_projection","title":"Spherical Mercator","titleInlineContent":[{"type":"text","text":"Spherical Mercator"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Web_Mercator_projection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Slot":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Slot"}],"role":"symbol","title":"Slot","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Slot"}],"abstract":[{"type":"text","text":"A pre-specified location in the style where layer will be added to"},{"type":"text","text":" "},{"type":"text","text":"(such as on top of existing land layers, but below all labels)."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Slot","url":"\/documentation\/mapboxmaps\/slot"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapContentBuilder":{"url":"\/documentation\/mapboxmaps\/mapcontentbuilder","title":"MapContentBuilder","type":"topic","navigatorTitle":[{"text":"MapContentBuilder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapContentBuilder","kind":"identifier"}],"abstract":[{"text":"A result builder that creates map and style content from closures you provide.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to mix content which is used in  StyleDSL API ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Declarative-Map-Styling","isActive":true,"type":"reference"},{"text":" and in SwiftUI API ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/SwiftUI-User-Guide","isActive":true,"type":"reference"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapContentBuilder","role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Slot/middle":{"type":"topic","title":"middle","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middle","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Slot","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps4SlotV"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Slot\/middle","abstract":[{"type":"text","text":"Above lines (roads, etc.) and behind 3D buildings"}],"url":"\/documentation\/mapboxmaps\/slot\/middle"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/StyleManager/setMapStyleContent(content:)":{"abstract":[{"type":"text","text":"Sets style content to the map."}],"title":"setMapStyleContent(content:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setMapStyleContent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": () -> some ","kind":"text"},{"text":"MapStyleContent","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps15MapStyleContentP"},{"text":")","kind":"text"}],"url":"\/documentation\/mapboxmaps\/stylemanager\/setmapstylecontent(content:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/StyleManager\/setMapStyleContent(content:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ClipLayer":{"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClipLayer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClipLayer"}],"title":"ClipLayer","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ClipLayer","url":"\/documentation\/mapboxmaps\/cliplayer","abstract":[{"type":"text","text":"Layer that removes 3D content from map."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/FillLayer":{"title":"FillLayer","abstract":[{"type":"text","text":"A filled polygon with an optional stroked border."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FillLayer"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/FillLayer","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FillLayer"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/filllayer"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ImageSource":{"abstract":[{"type":"text","text":"An image data source."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageSource"}],"navigatorTitle":[{"kind":"identifier","text":"ImageSource"}],"title":"ImageSource","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ImageSource","kind":"symbol","url":"\/documentation\/mapboxmaps\/imagesource"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"kind":"symbol","title":"MapboxMaps","url":"\/documentation\/mapboxmaps","role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/RasterSource":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RasterSource"}],"navigatorTitle":[{"kind":"identifier","text":"RasterSource"}],"title":"RasterSource","role":"symbol","url":"\/documentation\/mapboxmaps\/rastersource","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterSource","type":"topic","abstract":[{"type":"text","text":"A raster tile source."}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Declarative-Map-Styling#Performance-Optimization":{"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Declarative-Map-Styling#Performance-Optimization","title":"Performance Optimization","url":"\/documentation\/mapboxmaps\/declarative-map-styling#Performance-Optimization","abstract":[],"kind":"section"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ModelLayer":{"kind":"symbol","type":"topic","abstract":[{"text":"A layer to render 3D Models.","type":"text"}],"url":"\/documentation\/mapboxmaps\/modellayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ModelLayer","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ModelLayer","navigatorTitle":[{"text":"ModelLayer","kind":"identifier"}],"title":"ModelLayer","tags":[{"text":"SPI","type":"spi"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/StyleImport":{"abstract":[{"type":"text","text":"Map style import."}],"kind":"symbol","role":"symbol","url":"\/documentation\/mapboxmaps\/styleimport","title":"StyleImport","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/StyleImport","navigatorTitle":[{"kind":"identifier","text":"StyleImport"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StyleImport"}],"type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/RasterDemSource":{"abstract":[{"text":"A RGB-encoded raster DEM source","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RasterDemSource"}],"url":"\/documentation\/mapboxmaps\/rasterdemsource","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterDemSource","kind":"symbol","title":"RasterDemSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RasterDemSource"}],"role":"symbol","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/LocationIndicatorLayer":{"title":"LocationIndicatorLayer","url":"\/documentation\/mapboxmaps\/locationindicatorlayer","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/LocationIndicatorLayer","navigatorTitle":[{"kind":"identifier","text":"LocationIndicatorLayer"}],"kind":"symbol","abstract":[{"type":"text","text":"Location Indicator layer."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocationIndicatorLayer"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/FillExtrusionLayer":{"abstract":[{"text":"An extruded (3D) polygon.","type":"text"}],"title":"FillExtrusionLayer","type":"topic","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/FillExtrusionLayer","url":"\/documentation\/mapboxmaps\/fillextrusionlayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FillExtrusionLayer","kind":"identifier"}],"navigatorTitle":[{"text":"FillExtrusionLayer","kind":"identifier"}],"kind":"symbol"},"https://developer.apple.com/documentation/swiftui/zstack":{"title":"SwiftUIâ€™s ZStack","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/zstack","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/zstack","titleInlineContent":[{"type":"text","text":"SwiftUIâ€™s ZStack"}],"type":"link"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapStyleContent":{"type":"topic","kind":"symbol","title":"MapStyleContent","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent","navigatorTitle":[{"text":"MapStyleContent","kind":"identifier"}],"abstract":[{"text":"A protocol used to create any type of  map style content, such as layers, sources, lighting and others.","type":"text"}],"url":"\/documentation\/mapboxmaps\/mapstylecontent","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapStyleContent","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Map-Content-Gestures-User-Guide":{"url":"\/documentation\/mapboxmaps\/map-content-gestures-user-guide","type":"topic","kind":"article","abstract":[{"type":"text","text":"Handle Tap and Long Press gestures on Map, Annotations, and Layers."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Map-Content-Gestures-User-Guide","role":"article","title":"Map Content Gestures User Guide"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapStyleContent/body-swift.property":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapStyleContent\/body-swift.property","required":true,"title":"body","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Body","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps15MapStyleContentP4BodyQa"}],"abstract":[{"type":"text","text":"Provides the children style contents."}],"url":"\/documentation\/mapboxmaps\/mapstylecontent\/body-swift.property"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/AmbientLight":{"navigatorTitle":[{"text":"AmbientLight","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/AmbientLight","role":"symbol","title":"AmbientLight","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AmbientLight","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/ambientlight","abstract":[{"text":"An indirect light affecting all objects in the map adding a constant amount of light on them. It has no explicit direction and cannot cast shadows.","type":"text"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Map":{"navigatorTitle":[{"kind":"identifier","text":"Map"}],"title":"Map","role":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Map","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"url":"\/documentation\/mapboxmaps\/map","abstract":[{"text":"A SwiftUI view that displays a Mapbox Map.","type":"text"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CircleLayer":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CircleLayer","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/circlelayer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircleLayer"}],"abstract":[{"type":"text","text":"A filled circle."}],"navigatorTitle":[{"kind":"identifier","text":"CircleLayer"}],"role":"symbol","title":"CircleLayer"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Terrain":{"url":"\/documentation\/mapboxmaps\/terrain","type":"topic","title":"Terrain","abstract":[{"type":"text","text":"The global terrain source."}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Terrain","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Terrain","navigatorTitle":[{"text":"Terrain","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/HeatmapLayer":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/mapboxmaps\/heatmaplayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HeatmapLayer","kind":"identifier"}],"abstract":[{"type":"text","text":"A heatmap."}],"title":"HeatmapLayer","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/HeatmapLayer","navigatorTitle":[{"text":"HeatmapLayer","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Snapshotter":{"title":"Snapshotter","role":"symbol","navigatorTitle":[{"text":"Snapshotter","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Snapshotter","kind":"symbol","url":"\/documentation\/mapboxmaps\/snapshotter","type":"topic","abstract":[{"text":"A utility class for capturing styled map snapshots.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Snapshotter","kind":"identifier"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/DirectionalLight":{"kind":"symbol","title":"DirectionalLight","role":"symbol","navigatorTitle":[{"text":"DirectionalLight","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/directionallight","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/DirectionalLight","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DirectionalLight","kind":"identifier"}],"abstract":[{"type":"text","text":"A light that has a direction and is located at infinite distance, so its rays are parallel. It simulates the sun light and can cast shadows."}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CustomGeometrySource":{"title":"CustomGeometrySource","url":"\/documentation\/mapboxmaps\/customgeometrysource","abstract":[{"type":"text","text":"Describes a Custom Geometry Source to be used in the style"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CustomGeometrySource","navigatorTitle":[{"kind":"identifier","text":"CustomGeometrySource"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomGeometrySource"}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/BackgroundLayer":{"role":"symbol","url":"\/documentation\/mapboxmaps\/backgroundlayer","type":"topic","title":"BackgroundLayer","abstract":[{"text":"The background color or pattern of the map.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackgroundLayer"}],"navigatorTitle":[{"kind":"identifier","text":"BackgroundLayer"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/BackgroundLayer","kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/GeoJSONSource":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GeoJSONSource"}],"abstract":[{"text":"A GeoJSON data source.","type":"text"}],"title":"GeoJSONSource","kind":"symbol","url":"\/documentation\/mapboxmaps\/geojsonsource","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GeoJSONSource"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/GeoJSONSource"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapContent":{"navigatorTitle":[{"text":"MapContent","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/mapcontent","role":"symbol","abstract":[{"type":"text","text":"A protocol used to create any type of "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Map","isActive":true},{"type":"text","text":" content, such as annotations, location indicator, layers, sources, lights, and more."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapContent","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapContent","kind":"identifier"}],"title":"MapContent","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/RasterLayer":{"url":"\/documentation\/mapboxmaps\/rasterlayer","kind":"symbol","abstract":[{"text":"Raster map textures such as satellite imagery.","type":"text"}],"role":"symbol","title":"RasterLayer","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/RasterLayer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RasterLayer","kind":"identifier"}],"navigatorTitle":[{"text":"RasterLayer","kind":"identifier"}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"}]}]}