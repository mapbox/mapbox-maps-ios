{"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"kind":"text","text":" "},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}],"name":"latitude"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}]}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"MapboxMaps"}],"externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","title":"containsLatitude(forLatitude:)"},"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"text":" or not.","type":"text"}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal."}],"url":"\/documentation\/mapboxmaps","title":"MapboxMaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoordinateBounds"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds","navigatorTitle":[{"kind":"identifier","text":"CoordinateBounds"}],"title":"CoordinateBounds","abstract":[{"type":"text","text":"A rectangular area as measured on a two-dimensional map projection."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","type":"topic","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"containsLatitude(forLatitude:)","abstract":[{"text":"Returns whether the bounds contains ","type":"text"},{"code":"latitude","type":"codeVoice"},{"text":" or not.","type":"text"}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","kind":"article","type":"topic","title":"MapboxMaps Documentation","abstract":[],"url":"\/documentation\/overview","role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"url":"\/documentation\/mapboxmaps\/mapboxmap-apis","role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","abstract":[],"type":"topic","title":"MapboxMap","kind":"article"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"path":"\/metadata\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"path":"\/metadata\/symbolKind","op":"replace","value":"method"},{"path":"\/metadata\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}]},{"path":"\/topicSections","op":"add","value":null},{"path":"\/relationshipsSections","op":"add","value":null},{"path":"\/seeAlsoSections","op":"add","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"text":"BOOL","kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"double","kind":"typeIdentifier","preciseIdentifier":"c:d"},{"text":") ","kind":"text"},{"text":"latitude","kind":"internalParam"},{"text":";","kind":"text"}],"platforms":["iOS"]}]}},{"path":"\/primaryContentSections\/1","op":"replace","value":{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The latitude to be checked against the bounds."}],"type":"paragraph"}],"name":"latitude"}]}},{"path":"\/primaryContentSections\/2","op":"replace","value":{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}]}]}},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","op":"replace","value":"MBMCoordinateBounds"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","op":"replace","value":[{"kind":"identifier","text":"MBMCoordinateBounds"}]},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"MBMCoordinateBounds"}]},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace","value":"containsLatitudeForLatitude:"},{"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"containsLatitudeForLatitude:"}]}]}]}