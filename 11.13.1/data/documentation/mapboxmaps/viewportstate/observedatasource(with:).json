{"sections":[],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState"],["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState"]]},"abstract":[{"text":"Registers a ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" to receive the cameras being generated by this ","type":"text"},{"code":"ViewportState","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observeDataSource","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","text":"CameraOptions","kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CameraOptions"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> any ","kind":"text"},{"preciseIdentifier":"c:objc(pl)MBXCancelable","text":"Cancelable","kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/Cancelable"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is invoked by the state whenever its camera changes. Returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" to stay subscribed and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" to unsubscribe. "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" must be"},{"type":"text","text":" "},{"type":"text","text":"invoked on the main queue."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"Cancelable","type":"codeVoice"},{"text":" that the caller can use to unsubscribe.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method is commonly used by ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","isActive":true,"type":"reference"},{"text":" implementations to obtain the","type":"text"},{"text":" ","type":"text"},{"text":"target camera for transition animations. Transitions typically cannot start their animations until after","type":"text"},{"text":" ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" is invoked for the first time, so it’s a good idea for states to invoke ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" with","type":"text"},{"text":" ","type":"text"},{"text":"the current camera if it’s not too stale rather than waiting for the next camera change to occur. To","type":"text"},{"text":" ","type":"text"},{"text":"increase the likelihood that a valid camera exists when a handler is registered, design","type":"text"},{"text":" ","type":"text"},{"code":"ViewportState","type":"codeVoice"},{"text":" implementations so that they start updating their internal state prior to when","type":"text"},{"text":" ","type":"text"},{"text":"they are passed to ","type":"text"},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The caller may either cancel the returned ","type":"text"},{"code":"Cancelable","type":"codeVoice"},{"text":" ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"or"}]},{"text":" return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" from","type":"text"},{"text":" ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" to indicate that it wishes to stop receiving updates. Following either of these events,","type":"text"},{"text":" ","type":"text"},{"text":"implemenations must no longer invoke ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" and must release all strong references to it.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"observeDataSource(with:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:10MapboxMaps13ViewportStateP17observeDataSource4withSo13MBXCancelable_pSbAA13CameraOptionsVc_tF","modules":[{"name":"MapboxMaps"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"observeDataSource","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"CameraOptions","kind":"typeIdentifier","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> any ","kind":"text"},{"text":"Cancelable","kind":"typeIdentifier","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"required":true,"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)"]}],"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","kind":"article","role":"collectionGroup","url":"\/documentation\/mapboxmaps\/mapboxmap-apis","title":"MapboxMap"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","role":"collection","url":"\/documentation\/overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportManager":{"kind":"symbol","title":"ViewportManager","navigatorTitle":[{"kind":"identifier","text":"ViewportManager"}],"url":"\/documentation\/mapboxmaps\/viewportmanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewportManager"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","type":"topic","abstract":[{"code":"Viewport","type":"codeVoice"},{"type":"text","text":" provides a structured approach to organizing camera management logic into states and"},{"type":"text","text":" "},{"type":"text","text":"transitions between them."}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportManager/transition(to:transition:completion:)":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager\/transition(to:transition:completion:)","title":"transition(to:transition:completion:)","abstract":[{"text":"Executes a transition to the requested state.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps13ViewportStateP","text":"ViewportState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"transition","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps18ViewportTransitionP","text":"ViewportTransition","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/viewportmanager\/transition(to:transition:completion:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportState":{"url":"\/documentation\/mapboxmaps\/viewportstate","abstract":[{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":" is a protocol that "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager"},{"type":"text","text":" depends on as it orchestrates transitions to and"},{"type":"text","text":" "},{"type":"text","text":"from different states."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewportState"}],"title":"ViewportState","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState","navigatorTitle":[{"kind":"identifier","text":"ViewportState"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Camera-and-coordinates":{"role":"collectionGroup","type":"topic","title":"Camera and coordinates","abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Camera-and-coordinates","url":"\/documentation\/mapboxmaps\/camera-and-coordinates","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportState/observeDataSource(with:)":{"required":true,"url":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)","title":"observeDataSource(with:)","abstract":[{"type":"text","text":"Registers a "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" to receive the cameras being generated by this "},{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeDataSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"CameraOptions","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> any "},{"kind":"typeIdentifier","text":"Cancelable","preciseIdentifier":"c:objc(pl)MBXCancelable"}],"type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ViewportTransition":{"navigatorTitle":[{"text":"ViewportTransition","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewportTransition","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ViewportTransition"},{"type":"text","text":" is a protocol that "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportManager","isActive":true},{"type":"text","text":" depends on as it orchestrates transitions"},{"type":"text","text":" "},{"type":"text","text":"to and from different "},{"type":"reference","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ViewportState","isActive":true},{"type":"text","text":"s."}],"type":"topic","url":"\/documentation\/mapboxmaps\/viewporttransition","title":"ViewportTransition","role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","url":"\/documentation\/mapboxmaps","kind":"symbol","type":"topic","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CameraOptions":{"abstract":[],"title":"CameraOptions","navigatorTitle":[{"kind":"identifier","text":"CameraOptions"}],"type":"topic","url":"\/documentation\/mapboxmaps\/cameraoptions","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CameraOptions","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CameraOptions"}],"role":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxCommon/Cancelable":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/Cancelable","title":"Cancelable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancelable"}],"url":"\/documentation\/mapboxcommon\/cancelable","navigatorTitle":[{"kind":"identifier","text":"Cancelable"}],"abstract":[{"type":"text","text":"Allows to cancel the associated asynchronous operation"}],"kind":"symbol","role":"symbol","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"MBXCancelable","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1Cancelable\/title","op":"replace"},{"value":[{"kind":"identifier","text":"MBXCancelable"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1Cancelable\/fragments","op":"replace"},{"value":[{"text":"MBXCancelable","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1Cancelable\/navigatorTitle","op":"replace"}]}]}