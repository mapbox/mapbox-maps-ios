{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"expressionArguments"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Argument","text":"Argument","preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO"},{"kind":"text","text":"] { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/expressionargumentconvertible\/expressionarguments"]}],"abstract":[{"type":"text","text":":nodoc:"}],"kind":"symbol","metadata":{"symbolKind":"property","role":"symbol","required":true,"roleHeading":"Instance Property","modules":[{"name":"MapboxMaps"}],"title":"expressionArguments","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expressionArguments","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO","text":"Argument","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"externalID":"s:10MapboxMaps29ExpressionArgumentConvertibleP19expressionArgumentsSayAA3ExpV0D0OGvp"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentConvertible"]]},"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentConvertible\/expressionArguments","interfaceLanguage":"swift"},"references":{"doc://com.mapbox.MapboxMaps/documentation/Overview":{"title":"MapboxMaps Documentation","abstract":[],"url":"\/documentation\/overview","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","role":"collection","type":"topic","kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ExpressionArgumentConvertible/expressionArguments":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"expressionArguments"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Argument","preciseIdentifier":"s:10MapboxMaps3ExpV8ArgumentO"},{"kind":"text","text":"]"}],"title":"expressionArguments","type":"topic","kind":"symbol","required":true,"abstract":[{"text":":nodoc:","type":"text"}],"role":"symbol","url":"\/documentation\/mapboxmaps\/expressionargumentconvertible\/expressionarguments","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentConvertible\/expressionArguments"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/ExpressionArgumentConvertible":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/ExpressionArgumentConvertible","title":"ExpressionArgumentConvertible","url":"\/documentation\/mapboxmaps\/expressionargumentconvertible","abstract":[{"text":":nodoc:","type":"text"},{"text":" ","type":"text"},{"text":"This API enables the Expressions DSL syntax and is not designed to be called directly.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExpressionArgumentConvertible"}],"navigatorTitle":[{"kind":"identifier","text":"ExpressionArgumentConvertible"}],"type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"type":"topic","navigatorTitle":[{"text":"Exp","kind":"identifier"}],"title":"Exp","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","type":"reference","isActive":true},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Exp","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/exp"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","type":"topic","url":"\/documentation\/mapboxmaps\/expressions","title":"Expressions","abstract":[],"kind":"article"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"type":"topic","role":"collection","title":"MapboxMaps","url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}]},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Argument":{"url":"\/documentation\/mapboxmaps\/exp\/argument","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Argument","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Argument","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Argument","title":"Exp.Argument","abstract":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"Exp.Argument"},{"text":" is either a literal (associated with a double, string, boolean, or null value)","type":"text"},{"text":" ","type":"text"},{"text":"or another ","type":"text"},{"type":"codeVoice","code":"Exp"}],"role":"symbol"}}}