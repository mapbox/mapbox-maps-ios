{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolate"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier","text":"Exp","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","kind":"typeIdentifier","text":"Operator","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"}]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Interpolation types:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"[\"linear\"]","type":"codeVoice"},{"text":": Interpolates linearly between the pair of stops just less than and just greater than the input.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"[\"exponential\", base]","type":"codeVoice"},{"text":": Interpolates exponentially between the stops just less than and just greater than the input. ","type":"text"},{"code":"base","type":"codeVoice"},{"text":" controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"[\"cubic-bezier\", x1, y1, x2, y2]","type":"codeVoice"},{"type":"text","text":": Interpolates using the cubic bezier curve defined by the given control points."}]}]}]}],"kind":"content"}],"sections":[],"metadata":{"modules":[{"name":"MapboxMaps"}],"roleHeading":"Type Property","externalID":"s:10MapboxMaps3ExpV8OperatorV11interpolateAEvpZ","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV","text":"Exp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","text":"Operator","kind":"typeIdentifier"}],"title":"interpolate","symbolKind":"property"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate"},"kind":"symbol","abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"type":"codeVoice","code":"input"},{"type":"text","text":" may be any numeric expression (e.g., "},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"type":"text","text":", or "},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"]]},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct/interpolate":{"role":"symbol","abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"type":"codeVoice","code":"input"},{"type":"text","text":" may be any numeric expression (e.g., "},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"type":"text","text":", or "},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"type":"topic","title":"interpolate","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interpolate","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Exp","preciseIdentifier":"s:10MapboxMaps3ExpV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Operator","preciseIdentifier":"s:10MapboxMaps3ExpV8OperatorV","kind":"typeIdentifier"}],"url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct\/interpolate","kind":"symbol","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct\/interpolate"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp/Operator-swift.struct":{"title":"Exp.Operator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operator","kind":"identifier"}],"navigatorTitle":[{"text":"Operator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mapboxmaps\/exp\/operator-swift.struct","type":"topic","abstract":[],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp\/Operator-swift.struct"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Expressions":{"kind":"article","type":"topic","url":"\/documentation\/mapboxmaps\/expressions","title":"Expressions","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Expressions"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/Exp":{"role":"symbol","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","isActive":true,"type":"reference"},{"type":"text","text":"(expression) defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/Exp","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Exp","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Exp","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/exp","title":"Exp"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"abstract":[],"url":"\/documentation\/overview","kind":"article","role":"collection","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","title":"MapboxMaps Documentation","type":"topic"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"url":"\/documentation\/mapboxmaps","type":"topic","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","title":"MapboxMaps","kind":"symbol","role":"collection"}}}