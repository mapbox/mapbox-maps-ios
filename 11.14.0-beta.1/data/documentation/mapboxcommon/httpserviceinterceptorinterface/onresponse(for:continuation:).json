{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onResponse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"response","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)MBXHttpResponse","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpResponse","text":"HttpResponse","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"continuation","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" "},{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpServiceInterceptorResponseContinuation","kind":"typeIdentifier","preciseIdentifier":"c:MBXHttpServiceInterceptorResponseContinuation.h@T@MBXHttpServiceInterceptorResponseContinuation","text":"HttpServiceInterceptorResponseContinuation"},{"kind":"text","text":")"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The original HttpResponse object to be modified. Note: certain requests have their response body"},{"type":"text","text":" "},{"type":"text","text":"written to disk. In that case, the field HttpResponseData.body will be empty."}]}],"name":"response"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Callback to be invoked once the interceptor has finished processing the response.","type":"text"}]}],"name":"continuation"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpServiceInterceptorInterface"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxcommon\/httpserviceinterceptorinterface\/onresponse(for:continuation:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapboxcommon\/httpserviceinterceptorinterface\/onresponse(for:continuation:)"]}],"sections":[],"metadata":{"title":"onResponse(for:continuation:)","required":true,"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MBXHttpResponse","text":"HttpResponse"},{"kind":"text","text":", "},{"kind":"externalParam","text":"continuation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:MBXHttpServiceInterceptorResponseContinuation.h@T@MBXHttpServiceInterceptorResponseContinuation","text":"HttpServiceInterceptorResponseContinuation"},{"kind":"text","text":")"}],"navigatorTitle":[{"kind":"identifier","text":"onResponseForResponse:continuation:"}],"modules":[{"name":"MapboxCommon"}],"role":"symbol","externalID":"c:objc(pl)MBXHttpServiceInterceptorInterface(im)onResponseForResponse:continuation:"},"abstract":[{"type":"text","text":"The function to intercept HTTP responses with."}],"identifier":{"url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpServiceInterceptorInterface\/onResponse(for:continuation:)","interfaceLanguage":"swift"},"references":{"doc://com.mapbox.MapboxMaps/documentation/MapboxCommon":{"url":"\/documentation\/mapboxcommon","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon","role":"collection","title":"MapboxCommon","type":"topic","kind":"symbol","abstract":[]},"doc://com.mapbox.MapboxMaps/documentation/MapboxCommon/HttpResponse":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpResponse","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HttpResponse"}],"url":"\/documentation\/mapboxcommon\/httpresponse","navigatorTitle":[{"kind":"identifier","text":"HttpResponse"}],"title":"HttpResponse","abstract":[{"text":"Record which is used to report HTTP response to the caller.","type":"text"}],"kind":"symbol"},"doc://com.mapbox.MapboxMaps/documentation/MapboxCommon/HttpServiceInterceptorResponseContinuation":{"title":"HttpServiceInterceptorResponseContinuation","abstract":[{"type":"text","text":"Continuation to be invoked once the interceptor is done processing a requestâ€™s response."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HttpServiceInterceptorResponseContinuation"}],"kind":"symbol","url":"\/documentation\/mapboxcommon\/httpserviceinterceptorresponsecontinuation","navigatorTitle":[{"kind":"identifier","text":"HttpServiceInterceptorResponseContinuation"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpServiceInterceptorResponseContinuation"},"doc://com.mapbox.MapboxMaps/documentation/MapboxCommon/HttpServiceInterceptorInterface":{"type":"topic","url":"\/documentation\/mapboxcommon\/httpserviceinterceptorinterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HttpServiceInterceptorInterface"}],"role":"symbol","kind":"symbol","title":"HttpServiceInterceptorInterface","abstract":[{"type":"text","text":"Interface for intercepting and modifying HttpService function calls."}],"navigatorTitle":[{"kind":"identifier","text":"HttpServiceInterceptorInterface"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpServiceInterceptorInterface"},"doc://com.mapbox.MapboxMaps/documentation/Overview":{"url":"\/documentation\/overview","role":"collection","type":"topic","abstract":[],"title":"MapboxMaps Documentation","kind":"article","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview"},"doc://com.mapbox.MapboxMaps/documentation/MapboxCommon/HttpServiceInterceptorInterface/onResponse(for:continuation:)":{"title":"onResponse(for:continuation:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HttpResponse","preciseIdentifier":"c:objc(cs)MBXHttpResponse"},{"kind":"text","text":", "},{"kind":"externalParam","text":"continuation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HttpServiceInterceptorResponseContinuation","preciseIdentifier":"c:MBXHttpServiceInterceptorResponseContinuation.h@T@MBXHttpServiceInterceptorResponseContinuation"},{"kind":"text","text":")"}],"navigatorTitle":[{"kind":"identifier","text":"onResponseForResponse:continuation:"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpServiceInterceptorInterface\/onResponse(for:continuation:)","role":"symbol","url":"\/documentation\/mapboxcommon\/httpserviceinterceptorinterface\/onresponse(for:continuation:)","abstract":[{"type":"text","text":"The function to intercept HTTP responses with."}],"type":"topic","kind":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":"Instance Method","op":"replace","path":"\/metadata\/roleHeading"},{"value":"onResponseForResponse:continuation:","op":"replace","path":"\/metadata\/title"},{"value":"method","op":"replace","path":"\/metadata\/symbolKind"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onResponseForResponse:continuation:"}],"op":"replace","path":"\/metadata\/fragments"},{"value":null,"op":"add","path":"\/topicSections"},{"value":null,"op":"add","path":"\/relationshipsSections"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"value":{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"onResponseForResponse:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MBXHttpResponse","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MBXHttpResponse","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxCommon\/HttpResponse"},{"text":" *) ","kind":"text"},{"text":"response","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"continuation:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void (^)(MBXHttpResponse *)","preciseIdentifier":"c:BFv(#*$objc(cs)MBXHttpResponse)","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"continuation","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},"op":"replace","path":"\/primaryContentSections\/0"},{"value":{"parameters":[{"content":[{"inlineContent":[{"text":"The original HttpResponse object to be modified. Note: certain requests have their response body","type":"text"},{"text":" ","type":"text"},{"text":"written to disk. In that case, the field HttpResponseData.body will be empty.","type":"text"}],"type":"paragraph"}],"name":"response"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Callback to be invoked once the interceptor has finished processing the response."}]}],"name":"continuation"}],"kind":"parameters"},"op":"replace","path":"\/primaryContentSections\/1"},{"value":"MBXHttpResponse","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpResponse\/title"},{"value":[{"text":"MBXHttpResponse","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpResponse\/fragments"},{"value":[{"text":"MBXHttpResponse","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpResponse\/navigatorTitle"},{"value":"MBXHttpServiceInterceptorResponseContinuation","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorResponseContinuation\/title"},{"value":[{"text":"MBXHttpServiceInterceptorResponseContinuation","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorResponseContinuation\/fragments"},{"value":[{"text":"MBXHttpServiceInterceptorResponseContinuation","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorResponseContinuation\/navigatorTitle"},{"value":"MBXHttpServiceInterceptorInterface","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorInterface\/title"},{"value":[{"text":"MBXHttpServiceInterceptorInterface","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorInterface\/fragments"},{"value":[{"kind":"identifier","text":"MBXHttpServiceInterceptorInterface"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorInterface\/navigatorTitle"},{"value":"onResponseForResponse:continuation:","op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorInterface~1onResponse(for:continuation:)\/title"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onResponseForResponse:continuation:"}],"op":"replace","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxCommon~1HttpServiceInterceptorInterface~1onResponse(for:continuation:)\/fragments"}]}]}