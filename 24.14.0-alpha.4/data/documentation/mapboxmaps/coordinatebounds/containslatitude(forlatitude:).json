{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)"]}],"abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":" or not."}],"metadata":{"modules":[{"name":"MapboxMaps"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"containsLatitude(forLatitude:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"c:objc(cs)MBMCoordinateBounds(im)containsLatitudeForLatitude:","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)"},"hierarchy":{"paths":[["doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"containsLatitude"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forLatitude"},{"kind":"text","text":" "},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}]}],"name":"latitude"}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the bounds contains "},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}]}],"kind":"content"}],"references":{"doc://com.mapbox.MapboxMaps/documentation/Overview":{"abstract":[],"kind":"article","role":"collection","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/Overview","type":"topic","url":"\/documentation\/overview","title":"MapboxMaps Documentation"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/MapboxMap-APIs":{"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/MapboxMap-APIs","title":"MapboxMap","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/mapboxmaps\/mapboxmap-apis"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps":{"url":"\/documentation\/mapboxmaps","identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps","type":"topic","kind":"symbol","title":"MapboxMaps","abstract":[{"text":"Interactive, thoroughly customizable maps for iOS powered by vector tiles and Metal.","type":"text"}],"role":"collection"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds/containsLatitude(forLatitude:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"containsLatitude","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forLatitude","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns whether the bounds contains "},{"code":"latitude","type":"codeVoice"},{"type":"text","text":" or not."}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds\/containsLatitude(forLatitude:)","role":"symbol","type":"topic","navigatorTitle":[{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"url":"\/documentation\/mapboxmaps\/coordinatebounds\/containslatitude(forlatitude:)","kind":"symbol","title":"containsLatitude(forLatitude:)"},"doc://com.mapbox.MapboxMaps/documentation/MapboxMaps/CoordinateBounds":{"navigatorTitle":[{"text":"CoordinateBounds","kind":"identifier"}],"title":"CoordinateBounds","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoordinateBounds","kind":"identifier"}],"identifier":"doc:\/\/com.mapbox.MapboxMaps\/documentation\/MapboxMaps\/CoordinateBounds","url":"\/documentation\/mapboxmaps\/coordinatebounds","abstract":[{"text":"A rectangular area as measured on a two-dimensional map projection.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic"}},"variantOverrides":[{"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"value":"Instance Method","path":"\/metadata\/roleHeading","op":"replace"},{"value":"containsLatitudeForLatitude:","path":"\/metadata\/title","op":"replace"},{"value":"method","path":"\/metadata\/symbolKind","op":"replace"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"containsLatitudeForLatitude:"}],"path":"\/metadata\/fragments","op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"value":null,"path":"\/relationshipsSections","op":"add"},{"value":null,"path":"\/seeAlsoSections","op":"add"},{"value":{"declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@BOOL","text":"BOOL"},{"kind":"text","text":") "},{"kind":"identifier","text":"containsLatitudeForLatitude:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:d","text":"double"},{"kind":"text","text":") "},{"kind":"internalParam","text":"latitude"},{"kind":"text","text":";"}]}],"kind":"declarations"},"path":"\/primaryContentSections\/0","op":"replace"},{"value":{"parameters":[{"name":"latitude","content":[{"inlineContent":[{"text":"The latitude to be checked against the bounds.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},"path":"\/primaryContentSections\/1","op":"replace"},{"value":{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"text":" if the bounds contains ","type":"text"},{"type":"codeVoice","code":"latitude"},{"text":", ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]}]},"path":"\/primaryContentSections\/2","op":"replace"},{"value":"containsLatitudeForLatitude:","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/title","op":"replace"},{"value":[{"text":"- ","kind":"text"},{"text":"containsLatitudeForLatitude:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds~1containsLatitude(forLatitude:)\/fragments","op":"replace"},{"value":"MBMCoordinateBounds","path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/title","op":"replace"},{"value":[{"kind":"identifier","text":"MBMCoordinateBounds"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/fragments","op":"replace"},{"value":[{"text":"MBMCoordinateBounds","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapbox.MapboxMaps~1documentation~1MapboxMaps~1CoordinateBounds\/navigatorTitle","op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}