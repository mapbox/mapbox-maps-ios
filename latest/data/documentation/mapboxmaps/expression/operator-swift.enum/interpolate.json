{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolate"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Interpolation types:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"linear\"]"},{"type":"text","text":": Interpolates linearly between the pair of stops just less than and just greater than the input."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"exponential\", base]"},{"type":"text","text":": Interpolates exponentially between the stops just less than and just greater than the input. "},{"type":"codeVoice","code":"base"},{"type":"text","text":" controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"[\"cubic-bezier\", x1, y1, x2, y2]"},{"type":"text","text":": Interpolates using the cubic bezier curve defined by the given control points."}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.enum\/interpolate"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum\/interpolate","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"type":"codeVoice","code":"input"},{"type":"text","text":" may be any numeric expression (e.g., "},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"type":"text","text":", or "},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolate"}],"title":"Expression.Operator.interpolate","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:10MapboxMaps10ExpressionV8OperatorO11interpolateyA2EmF","modules":[{"name":"MapboxMaps"}]},"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum"]]},"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.enum/interpolate":{"role":"symbol","title":"Expression.Operator.interpolate","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolate"}],"abstract":[{"type":"text","text":"Produces continuous, smooth results by interpolating between pairs of input and output values (“stops”). The "},{"type":"codeVoice","code":"input"},{"type":"text","text":" may be any numeric expression (e.g., "},{"type":"codeVoice","code":"[\"get\", \"population\"]"},{"type":"text","text":"). Stop inputs must be numeric literals in strictly ascending order. The output type must be "},{"type":"codeVoice","code":"number"},{"type":"text","text":", "},{"type":"codeVoice","code":"array<number>"},{"type":"text","text":", or "},{"type":"codeVoice","code":"color"},{"type":"text","text":"."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum\/interpolate","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.enum\/interpolate"},"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"role":"symbol","title":"Expression","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"url":"\/documentation\/mapboxmaps\/expression"},"doc://MapboxMaps/documentation/MapboxMaps":{"role":"collection","title":"MapboxMaps","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.enum":{"role":"symbol","title":"Expression.Operator","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operator"}],"abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.enum"}}}