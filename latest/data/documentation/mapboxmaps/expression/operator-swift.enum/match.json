{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a single literal value; or"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"an array of literal values, the values of which must be all strings or all numbers (for example "},{"type":"codeVoice","code":"[100, 101]"},{"type":"text","text":" or "},{"type":"codeVoice","code":"[\"c\", \"b\"]"},{"type":"text","text":")."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The input matches if any of the values in the array matches using strict equality, similar to the "},{"type":"codeVoice","code":"\"in\""},{"type":"text","text":" operator."},{"type":"text","text":" "},{"type":"text","text":"If the input type does not match the type of the labels, the result will be the fallback value."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mapboxmaps\/expression\/operator-swift.enum\/match"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum\/match","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Selects the output for which the label value matches the input value, or the fallback value if no match is found. The input can be any expression (for example, "},{"type":"codeVoice","code":"[\"get\", \"building_type\"]"},{"type":"text","text":"). Each label must be unique, and must be either:"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"}],"title":"Expression.Operator.match","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:10MapboxMaps10ExpressionV8OperatorO5matchyA2EmF","modules":[{"name":"MapboxMaps"}]},"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum"]]},"references":{"doc://MapboxMaps/documentation/MapboxMaps/Expression":{"role":"symbol","title":"Expression","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expression"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression"},{"type":"text","text":" defines a formula for computing the value of any layout property, paint property,"},{"type":"text","text":" "},{"type":"text","text":"or filter within a map style. Expressions allow you to style data with multiple feature"},{"type":"text","text":" "},{"type":"text","text":"properties at once, apply conditional logic, and manipulate data with mathematical, logical, and"},{"type":"text","text":" "},{"type":"text","text":"string operators. This allows for sophisticated runtime styling."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Expression"}],"url":"\/documentation\/mapboxmaps\/expression"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.enum":{"role":"symbol","title":"Expression.Operator","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operator"}],"abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Operator"}],"url":"\/documentation\/mapboxmaps\/expression\/operator-swift.enum"},"doc://MapboxMaps/documentation/MapboxMaps/Expression/Operator-swift.enum/match":{"role":"symbol","title":"Expression.Operator.match","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"}],"abstract":[{"type":"text","text":"Selects the output for which the label value matches the input value, or the fallback value if no match is found. The input can be any expression (for example, "},{"type":"codeVoice","code":"[\"get\", \"building_type\"]"},{"type":"text","text":"). Each label must be unique, and must be either:"}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Expression\/Operator-swift.enum\/match","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/expression\/operator-swift.enum\/match"},"doc://MapboxMaps/documentation/MapboxMaps":{"role":"collection","title":"MapboxMaps","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps"}}}