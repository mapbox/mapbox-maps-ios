{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeDataSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"camera"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraOptions-swift.struct","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV","text":"CameraOptions"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable-swift.protocol","preciseIdentifier":"s:10MapboxMaps10CancelableP","text":"Cancelable"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" that the caller can use to unsubscribe."}]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is invoked by the state whenever its camera changes. Returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" to stay subscribed and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" to unsubscribe. "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" must be"},{"type":"text","text":" "},{"type":"text","text":"invoked on the main queue."}]}]},{"name":"camera","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":"’s most recent camera."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is commonly used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition"},{"type":"text","text":" implementations to obtain the"},{"type":"text","text":" "},{"type":"text","text":"target camera for transition animations. Transitions typically cannot start their animations until after"},{"type":"text","text":" "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" is invoked for the first time, so it’s a good idea for states to invoke "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" with"},{"type":"text","text":" "},{"type":"text","text":"the current camera if it’s not too stale rather than waiting for the next camera change to occur. To"},{"type":"text","text":" "},{"type":"text","text":"increase the likelihood that a valid camera exists when a handler is registered, design"},{"type":"text","text":" "},{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":" implementations so that they start updating their internal state prior to when"},{"type":"text","text":" "},{"type":"text","text":"they are passed to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport\/transition(to:transition:completion:)"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The caller may either cancel the returned "},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"or"}]},{"type":"text","text":" return "},{"type":"codeVoice","code":"false"},{"type":"text","text":" from"},{"type":"text","text":" "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" to indicate that it wishes to stop receiving updates. Following either of these events,"},{"type":"text","text":" "},{"type":"text","text":"implemenations must no longer invoke "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" and must release all strong references to it."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Registers a "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" to receive the cameras being generated by this "},{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"observeDataSource(with:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeDataSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"camera"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CameraOptions","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancelable","preciseIdentifier":"s:10MapboxMaps10CancelableP"}],"symbolKind":"method","externalID":"s:10MapboxMaps13ViewportStateP17observeDataSource4withAA10Cancelable_pSbAA13CameraOptionsVc_tF","required":true,"modules":[{"name":"MapboxMaps"}]},"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"]]},"references":{"doc://MapboxMaps/documentation/MapboxMaps":{"role":"collection","title":"MapboxMaps","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportTransition":{"role":"symbol","title":"ViewportTransition","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewportTransition"}],"abstract":[{"type":"codeVoice","code":"ViewportTransition"},{"type":"text","text":" is a protocol that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport"},{"type":"text","text":" depends on as it orchestrates transitions"},{"type":"text","text":" "},{"type":"text","text":"to and from different "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"},{"type":"text","text":"s."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewportTransition"}],"url":"\/documentation\/mapboxmaps\/viewporttransition"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState":{"role":"symbol","title":"ViewportState","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewportState"}],"abstract":[{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":" is a protocol that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport"},{"type":"text","text":" depends on as it orchestrates transitions to and"},{"type":"text","text":" "},{"type":"text","text":"from different states."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewportState"}],"url":"\/documentation\/mapboxmaps\/viewportstate"},"doc://MapboxMaps/documentation/MapboxMaps/CameraOptions-swift.struct":{"role":"symbol","title":"CameraOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CameraOptions"}],"abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/CameraOptions-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CameraOptions"}],"url":"\/documentation\/mapboxmaps\/cameraoptions-swift.struct"},"doc://MapboxMaps/documentation/MapboxMaps/Cancelable-swift.protocol":{"role":"symbol","title":"Cancelable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancelable"}],"abstract":[{"type":"text","text":"A type that conforms to "},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" typically represents a long"},{"type":"text","text":" "},{"type":"text","text":"running operation that can be canceled. Custom implementations"},{"type":"text","text":" "},{"type":"text","text":"must behave correctly if "},{"type":"codeVoice","code":"Cancelable\/cancel()"},{"type":"text","text":" is invoked"},{"type":"text","text":" "},{"type":"text","text":"more than once."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable-swift.protocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cancelable"}],"url":"\/documentation\/mapboxmaps\/cancelable-swift.protocol"},"doc://MapboxMaps/documentation/MapboxMaps/Viewport/transition(to:transition:completion:)":{"role":"symbol","title":"transition(to:transition:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewportState","preciseIdentifier":"s:10MapboxMaps13ViewportStateP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewportTransition","preciseIdentifier":"s:10MapboxMaps18ViewportTransitionP"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"success"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Executes a transition to the requested state."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport\/transition(to:transition:completion:)","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps\/viewport\/transition(to:transition:completion:)"},"doc://MapboxMaps/documentation/MapboxMaps/Viewport":{"role":"symbol","title":"Viewport","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Viewport"}],"abstract":[{"type":"codeVoice","code":"Viewport"},{"type":"text","text":" provides a structured approach to organizing camera management logic into states and"},{"type":"text","text":" "},{"type":"text","text":"transitions between them."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Viewport"}],"url":"\/documentation\/mapboxmaps\/viewport"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState/observeDataSource(with:)":{"role":"symbol","title":"observeDataSource(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeDataSource"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"camera"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CameraOptions","preciseIdentifier":"s:10MapboxMaps13CameraOptionsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancelable","preciseIdentifier":"s:10MapboxMaps10CancelableP"}],"abstract":[{"type":"text","text":"Registers a "},{"type":"codeVoice","code":"handler"},{"type":"text","text":" to receive the cameras being generated by this "},{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":"."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState\/observeDataSource(with:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/mapboxmaps\/viewportstate\/observedatasource(with:)"}}}