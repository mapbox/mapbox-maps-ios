{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState","preciseIdentifier":"s:10MapboxMaps13ViewportStateP","text":"ViewportState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"success"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable-swift.protocol","preciseIdentifier":"s:10MapboxMaps10CancelableP","text":"Cancelable"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"a "},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" that can be used to terminate the transition. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"Cancelable\/cancel()"},{"type":"text","text":" is invoked, the transition must immediately stop"},{"type":"text","text":" "},{"type":"text","text":"updating the camera and cancel any animations that it started."}]}]},{"kind":"parameters","parameters":[{"name":"toState","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The target state for the transition."}]}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A block that must be invoked when the transition is complete. Must be invoked"},{"type":"text","text":" "},{"type":"text","text":"on the main queue."}]}]},{"name":"success","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A flag to indicate whether the transition was successful."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The completion block must be invoked with "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the transition completes successfully. If the"},{"type":"text","text":" "},{"type":"text","text":"transition fails, invoke the completion block with "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the returned "},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" is canceled, it not necessary to invoke the completion block (but"},{"type":"text","text":" "},{"type":"text","text":"is safe to do so — it will just be ignored)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Transitions should handle the possibility that the “to” state might fail to provide a target camera in a"},{"type":"text","text":" "},{"type":"text","text":"timely manner or might update the target camera multiple times during the transition (a “moving"},{"type":"text","text":" "},{"type":"text","text":"target”)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mapboxmaps\/viewporttransition\/run(to:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition\/run(to:completion:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Runs the transition to "},{"type":"codeVoice","code":"toState"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"run(to:completion:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewportState","preciseIdentifier":"s:10MapboxMaps13ViewportStateP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"success"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancelable","preciseIdentifier":"s:10MapboxMaps10CancelableP"}],"symbolKind":"method","externalID":"s:10MapboxMaps18ViewportTransitionP3run2to10completionAA10Cancelable_pAA0C5State_p_ySbctF","required":true,"modules":[{"name":"MapboxMaps"}]},"hierarchy":{"paths":[["doc:\/\/MapboxMaps\/documentation\/MapboxMaps","doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition"]]},"references":{"doc://MapboxMaps/documentation/MapboxMaps":{"role":"collection","title":"MapboxMaps","abstract":[],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps","kind":"symbol","type":"topic","url":"\/documentation\/mapboxmaps"},"doc://MapboxMaps/documentation/MapboxMaps/Cancelable-swift.protocol":{"role":"symbol","title":"Cancelable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancelable"}],"abstract":[{"type":"text","text":"A type that conforms to "},{"type":"codeVoice","code":"Cancelable"},{"type":"text","text":" typically represents a long"},{"type":"text","text":" "},{"type":"text","text":"running operation that can be canceled. Custom implementations"},{"type":"text","text":" "},{"type":"text","text":"must behave correctly if "},{"type":"codeVoice","code":"Cancelable\/cancel()"},{"type":"text","text":" is invoked"},{"type":"text","text":" "},{"type":"text","text":"more than once."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Cancelable-swift.protocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cancelable"}],"url":"\/documentation\/mapboxmaps\/cancelable-swift.protocol"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportTransition/run(to:completion:)":{"role":"symbol","title":"run(to:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewportState","preciseIdentifier":"s:10MapboxMaps13ViewportStateP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"success"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cancelable","preciseIdentifier":"s:10MapboxMaps10CancelableP"}],"abstract":[{"type":"text","text":"Runs the transition to "},{"type":"codeVoice","code":"toState"},{"type":"text","text":"."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition\/run(to:completion:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/mapboxmaps\/viewporttransition\/run(to:completion:)"},"doc://MapboxMaps/documentation/MapboxMaps/Viewport":{"role":"symbol","title":"Viewport","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Viewport"}],"abstract":[{"type":"codeVoice","code":"Viewport"},{"type":"text","text":" provides a structured approach to organizing camera management logic into states and"},{"type":"text","text":" "},{"type":"text","text":"transitions between them."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Viewport"}],"url":"\/documentation\/mapboxmaps\/viewport"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportState":{"role":"symbol","title":"ViewportState","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewportState"}],"abstract":[{"type":"codeVoice","code":"ViewportState"},{"type":"text","text":" is a protocol that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport"},{"type":"text","text":" depends on as it orchestrates transitions to and"},{"type":"text","text":" "},{"type":"text","text":"from different states."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewportState"}],"url":"\/documentation\/mapboxmaps\/viewportstate"},"doc://MapboxMaps/documentation/MapboxMaps/ViewportTransition":{"role":"symbol","title":"ViewportTransition","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewportTransition"}],"abstract":[{"type":"codeVoice","code":"ViewportTransition"},{"type":"text","text":" is a protocol that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/Viewport"},{"type":"text","text":" depends on as it orchestrates transitions"},{"type":"text","text":" "},{"type":"text","text":"to and from different "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportState"},{"type":"text","text":"s."}],"identifier":"doc:\/\/MapboxMaps\/documentation\/MapboxMaps\/ViewportTransition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewportTransition"}],"url":"\/documentation\/mapboxmaps\/viewporttransition"}}}